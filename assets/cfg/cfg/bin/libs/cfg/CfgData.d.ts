declare module cfg{
	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_broad_cast.xls】 ----> time_msg
	class BroadCastTimeMsgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BroadCastTimeMsgCfgInfo>;
			public static setup(dataArr:Array<cfg.BroadCastTimeMsgCfgInfo>):void;
		public static getInfo(value:string):cfg.BroadCastTimeMsgCfgInfo;
		public static getFirstInfo():cfg.BroadCastTimeMsgCfgInfo;
		 /**  说明 */
		public static getDescByDesc(value:string):string;
		 /**  索引ID */
		public static getIDByDesc(value:string):number;
		 /**  时间点 */
		public static getBeginTimeByDesc(value:string):string;
		 /**  显示聊天频道频道 */
		public static getChanelByDesc(value:string):number;
		 /**  公告类型 */
		public static getNoticeTypeByDesc(value:string):number;
		 /**  内容(按照{0}{1}拼写) */
		public static getContentByDesc(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_broad_cast.xls】 ----> cast_msg
	class BroadCastCastMsgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BroadCastCastMsgCfgInfo>;
			public static setup(dataArr:Array<cfg.BroadCastCastMsgCfgInfo>):void;
		public static getInfo(value:number):cfg.BroadCastCastMsgCfgInfo;
		public static getFirstInfo():cfg.BroadCastCastMsgCfgInfo;
		 /**  广播id */
		public static getIDByID(value:number):number;
		 /**  类型 */
		public static getNoticeTypeByID(value:number):number;
		 /**  频道 */
		public static getChannelByID(value:number):number;
		 /**  公告显示位置 */
		public static getNoticeShowPosByID(value:number):number;
		 /**  滚动次数 */
		public static getShowTimesByID(value:number):number;
		 /**  说明 */
		public static getDescByID(value:number):string;
		 /**  内容 */
		public static getContentByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_broad_cast.xls】 ----> cast_msg
	class BroadCastCastMsgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BroadCastCastMsgCfgInfo>;
			public static setup(dataArr:Array<cfg.BroadCastCastMsgCfgInfo>):void;
		public static getInfo(value:number):cfg.BroadCastCastMsgCfgInfo;
		public static getFirstInfo():cfg.BroadCastCastMsgCfgInfo;
		 /**  广播id */
		public static getIDByID(value:number):number;
		 /**  类型 */
		public static getNoticeTypeByID(value:number):number;
		 /**  频道 */
		public static getChannelByID(value:number):number;
		 /**  公告显示位置 */
		public static getNoticeShowPosByID(value:number):number;
		 /**  滚动次数 */
		public static getShowTimesByID(value:number):number;
		 /**  说明 */
		public static getDescByID(value:number):string;
		 /**  内容 */
		public static getContentByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_broad_cast.xls】 ----> time_msg
	class BroadCastTimeMsgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BroadCastTimeMsgCfgInfo>;
			public static setup(dataArr:Array<cfg.BroadCastTimeMsgCfgInfo>):void;
		public static getInfo(value:string):cfg.BroadCastTimeMsgCfgInfo;
		public static getFirstInfo():cfg.BroadCastTimeMsgCfgInfo;
		 /**  说明 */
		public static getDescByDesc(value:string):string;
		 /**  索引ID */
		public static getIDByDesc(value:string):number;
		 /**  时间点 */
		public static getBeginTimeByDesc(value:string):string;
		 /**  显示聊天频道频道 */
		public static getChanelByDesc(value:string):number;
		 /**  公告类型 */
		public static getNoticeTypeByDesc(value:string):number;
		 /**  内容(按照{0}{1}拼写) */
		public static getContentByDesc(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_broad_cast.xls】 ----> time_msg
	class BroadCastTimeMsgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BroadCastTimeMsgCfgInfo>;
			public static setup(dataArr:Array<cfg.BroadCastTimeMsgCfgInfo>):void;
		public static getInfo(value:string):cfg.BroadCastTimeMsgCfgInfo;
		public static getFirstInfo():cfg.BroadCastTimeMsgCfgInfo;
		 /**  说明 */
		public static getDescByDesc(value:string):string;
		 /**  索引ID */
		public static getIDByDesc(value:string):number;
		 /**  时间点 */
		public static getBeginTimeByDesc(value:string):string;
		 /**  显示聊天频道频道 */
		public static getChanelByDesc(value:string):number;
		 /**  公告类型 */
		public static getNoticeTypeByDesc(value:string):number;
		 /**  内容(按照{0}{1}拼写) */
		public static getContentByDesc(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_broad_cast.xls】 ----> cast_msg
	class BroadCastCastMsgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BroadCastCastMsgCfgInfo>;
			public static setup(dataArr:Array<cfg.BroadCastCastMsgCfgInfo>):void;
		public static getInfo(value:number):cfg.BroadCastCastMsgCfgInfo;
		public static getFirstInfo():cfg.BroadCastCastMsgCfgInfo;
		 /**  广播id */
		public static getIDByID(value:number):number;
		 /**  类型 */
		public static getNoticeTypeByID(value:number):number;
		 /**  频道 */
		public static getChannelByID(value:number):number;
		 /**  公告显示位置 */
		public static getNoticeShowPosByID(value:number):number;
		 /**  滚动次数 */
		public static getShowTimesByID(value:number):number;
		 /**  说明 */
		public static getDescByID(value:number):string;
		 /**  内容 */
		public static getContentByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_error_code.xls】 ----> c_error_code
	class ErrorCodeErrorCodeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ErrorCodeErrorCodeCfgInfo>;
			public static setup(dataArr:Array<cfg.ErrorCodeErrorCodeCfgInfo>):void;
		public static getInfo(value:number):cfg.ErrorCodeErrorCodeCfgInfo;
		public static getFirstInfo():cfg.ErrorCodeErrorCodeCfgInfo;
		 /**  序号 */
		public static getIdById(value:number):number;
		 /**  主协议号 */
		public static getMainProtocolById(value:number):number;
		 /**  返回码 */
		public static getEventFlagById(value:number):number;
		 /**  程序解释 */
		public static getErrorById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_error_code.xls】 ----> c_error_code
	class ErrorCodeErrorCodeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ErrorCodeErrorCodeCfgInfo>;
			public static setup(dataArr:Array<cfg.ErrorCodeErrorCodeCfgInfo>):void;
		public static getInfo(value:number):cfg.ErrorCodeErrorCodeCfgInfo;
		public static getFirstInfo():cfg.ErrorCodeErrorCodeCfgInfo;
		 /**  序号 */
		public static getIdById(value:number):number;
		 /**  主协议号 */
		public static getMainProtocolById(value:number):number;
		 /**  返回码 */
		public static getEventFlagById(value:number):number;
		 /**  程序解释 */
		public static getErrorById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_error_code.xls】 ----> c_error_code
	class ErrorCodeErrorCodeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ErrorCodeErrorCodeCfgInfo>;
			public static setup(dataArr:Array<cfg.ErrorCodeErrorCodeCfgInfo>):void;
		public static getInfo(value:number):cfg.ErrorCodeErrorCodeCfgInfo;
		public static getFirstInfo():cfg.ErrorCodeErrorCodeCfgInfo;
		 /**  序号 */
		public static getIdById(value:number):number;
		 /**  主协议号 */
		public static getMainProtocolById(value:number):number;
		 /**  返回码 */
		public static getEventFlagById(value:number):number;
		 /**  程序解释 */
		public static getErrorById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_gm.xls】 ----> gm
	class GmBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GmCfgInfo>;
			public static setup(dataArr:Array<cfg.GmCfgInfo>):void;
		public static getInfo(value:number):cfg.GmCfgInfo;
		public static getFirstInfo():cfg.GmCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  命令功能 */
		public static getDesById(value:number):string;
		 /**  命令 */
		public static getCodeById(value:number):string;
		 /**  参数1 */
		public static getValue1ById(value:number):string;
		 /**  参数2 */
		public static getValue2ById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_gm.xls】 ----> gm
	class GmBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GmCfgInfo>;
			public static setup(dataArr:Array<cfg.GmCfgInfo>):void;
		public static getInfo(value:number):cfg.GmCfgInfo;
		public static getFirstInfo():cfg.GmCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  命令功能 */
		public static getDesById(value:number):string;
		 /**  命令 */
		public static getCodeById(value:number):string;
		 /**  参数1 */
		public static getValue1ById(value:number):string;
		 /**  参数2 */
		public static getValue2ById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_gm.xls】 ----> gm
	class GmBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GmCfgInfo>;
			public static setup(dataArr:Array<cfg.GmCfgInfo>):void;
		public static getInfo(value:number):cfg.GmCfgInfo;
		public static getFirstInfo():cfg.GmCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  命令功能 */
		public static getDesById(value:number):string;
		 /**  命令 */
		public static getCodeById(value:number):string;
		 /**  参数1 */
		public static getValue1ById(value:number):string;
		 /**  参数2 */
		public static getValue2ById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_helpSprite.xls】 ----> helpSprite
	class HelpSpriteBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HelpSpriteCfgInfo>;
			public static setup(dataArr:Array<cfg.HelpSpriteCfgInfo>):void;
		public static getInfo(value:number):cfg.HelpSpriteCfgInfo;
		public static getFirstInfo():cfg.HelpSpriteCfgInfo;
		 /**  id索引 */
		public static getIdById(value:number):number;
		 /**  1 终生提示一次；   2 单次登陆提示一次；   3 单日提示一次；   4 循环提示（每次随机都参与）；   5 条件触发（触发就提示）；    */
		public static getNoticeTypeById(value:number):number;
		 /**  小人动作 */
		public static getRoleActionById(value:number):string;
		 /**  气泡文本 */
		public static getNoticTxtById(value:number):string;
		 /**  语音 */
		public static getSoundById(value:number):string;
		 /**  点击小人之后执行什么操作1.打开某个ui */
		public static getActionTypeById(value:number):string;
		 /**  点击之后执行动作的参数actionType为1的配置uiconfig里uiopen的id */
		public static getActionParmById(value:number):string;
		 /**  开启条件类型1 玩家等级≥参数；   2 玩家累积充值额度≥参数；   3 玩家当日充值额度≥参数；   4 玩家主线关卡进度≥参数；   5 玩家钻石数量≥参数；   6 免费抽卡次数≥参数7 公会副本次数≥参数8 背包中有指定道具指定数量≥参数   9 服务器时间   （时间戳）≥参数10 特定充值的当前剩余次数（取charge表）   ≥参数------配置为触发类型时--------1 等级大于 参数1 每参数2等级触发2  关卡进度大于 参数1 每 参数2 关卡触发 */
		public static getOpenTypeById(value:number):number;
		 /**  开启条件参数 */
		public static getOpenParmById(value:number):number;
		 /**  开启条件补充参数 */
		public static getOpenExtById(value:number):string;
		 /**  关闭条件类型1 玩家等级≥参数；   2 玩家累积充值额度≥参数；   3 玩家当日充值额度≥参数；   4 玩家主线关卡进度≥参数；   5 玩家钻石数量<参数；   6 免费抽卡次数<参数  7 公会副本次数<参数8 背包中有指定道具指定数量<参数9 服务器时间     （时间戳<参数10 特定充值的当前剩余次数（取charge表）   <参数 */
		public static getCloseTypeById(value:number):number;
		 /**  关闭条件参数 */
		public static getCloseParmById(value:number):number;
		 /**  关闭条件补充参数 */
		public static getCloseExtById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_helpSprite.xls】 ----> helpSprite
	class HelpSpriteBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HelpSpriteCfgInfo>;
			public static setup(dataArr:Array<cfg.HelpSpriteCfgInfo>):void;
		public static getInfo(value:number):cfg.HelpSpriteCfgInfo;
		public static getFirstInfo():cfg.HelpSpriteCfgInfo;
		 /**  id索引 */
		public static getIdById(value:number):number;
		 /**  1 终生提示一次；   2 单次登陆提示一次；   3 单日提示一次；   4 循环提示（每次随机都参与）；   5 条件触发（触发就提示）；    */
		public static getNoticeTypeById(value:number):number;
		 /**  小人动作 */
		public static getRoleActionById(value:number):string;
		 /**  气泡文本 */
		public static getNoticTxtById(value:number):string;
		 /**  语音 */
		public static getSoundById(value:number):string;
		 /**  点击小人之后执行什么操作1.打开某个ui */
		public static getActionTypeById(value:number):string;
		 /**  点击之后执行动作的参数actionType为1的配置uiconfig里uiopen的id */
		public static getActionParmById(value:number):string;
		 /**  开启条件类型1 玩家等级≥参数；   2 玩家累积充值额度≥参数；   3 玩家当日充值额度≥参数；   4 玩家主线关卡进度≥参数；   5 玩家钻石数量≥参数；   6 免费抽卡次数≥参数7 公会副本次数≥参数8 背包中有指定道具指定数量≥参数   9 服务器时间   （时间戳）≥参数10 特定充值的当前剩余次数（取charge表）   ≥参数------配置为触发类型时--------1 等级大于 参数1 每参数2等级触发2  关卡进度大于 参数1 每 参数2 关卡触发 */
		public static getOpenTypeById(value:number):number;
		 /**  开启条件参数 */
		public static getOpenParmById(value:number):number;
		 /**  开启条件补充参数 */
		public static getOpenExtById(value:number):string;
		 /**  关闭条件类型1 玩家等级≥参数；   2 玩家累积充值额度≥参数；   3 玩家当日充值额度≥参数；   4 玩家主线关卡进度≥参数；   5 玩家钻石数量<参数；   6 免费抽卡次数<参数  7 公会副本次数<参数8 背包中有指定道具指定数量<参数9 服务器时间     （时间戳<参数10 特定充值的当前剩余次数（取charge表）   <参数 */
		public static getCloseTypeById(value:number):number;
		 /**  关闭条件参数 */
		public static getCloseParmById(value:number):number;
		 /**  关闭条件补充参数 */
		public static getCloseExtById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_helpSprite.xls】 ----> helpSprite
	class HelpSpriteBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HelpSpriteCfgInfo>;
			public static setup(dataArr:Array<cfg.HelpSpriteCfgInfo>):void;
		public static getInfo(value:number):cfg.HelpSpriteCfgInfo;
		public static getFirstInfo():cfg.HelpSpriteCfgInfo;
		 /**  id索引 */
		public static getIdById(value:number):number;
		 /**  1 终生提示一次；   2 单次登陆提示一次；   3 单日提示一次；   4 循环提示（每次随机都参与）；   5 条件触发（触发就提示）；    */
		public static getNoticeTypeById(value:number):number;
		 /**  小人动作 */
		public static getRoleActionById(value:number):string;
		 /**  气泡文本 */
		public static getNoticTxtById(value:number):string;
		 /**  语音 */
		public static getSoundById(value:number):string;
		 /**  点击小人之后执行什么操作1.打开某个ui */
		public static getActionTypeById(value:number):string;
		 /**  点击之后执行动作的参数actionType为1的配置uiconfig里uiopen的id */
		public static getActionParmById(value:number):string;
		 /**  开启条件类型1 玩家等级≥参数；   2 玩家累积充值额度≥参数；   3 玩家当日充值额度≥参数；   4 玩家主线关卡进度≥参数；   5 玩家钻石数量≥参数；   6 免费抽卡次数≥参数7 公会副本次数≥参数8 背包中有指定道具指定数量≥参数   9 服务器时间   （时间戳）≥参数10 特定充值的当前剩余次数（取charge表）   ≥参数------配置为触发类型时--------1 等级大于 参数1 每参数2等级触发2  关卡进度大于 参数1 每 参数2 关卡触发 */
		public static getOpenTypeById(value:number):number;
		 /**  开启条件参数 */
		public static getOpenParmById(value:number):number;
		 /**  开启条件补充参数 */
		public static getOpenExtById(value:number):string;
		 /**  关闭条件类型1 玩家等级≥参数；   2 玩家累积充值额度≥参数；   3 玩家当日充值额度≥参数；   4 玩家主线关卡进度≥参数；   5 玩家钻石数量<参数；   6 免费抽卡次数<参数  7 公会副本次数<参数8 背包中有指定道具指定数量<参数9 服务器时间     （时间戳<参数10 特定充值的当前剩余次数（取charge表）   <参数 */
		public static getCloseTypeById(value:number):number;
		 /**  关闭条件参数 */
		public static getCloseParmById(value:number):number;
		 /**  关闭条件补充参数 */
		public static getCloseExtById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_login_windows.xls】 ----> login_windows
	class LoginWindowsLoginWindowsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LoginWindowsLoginWindowsCfgInfo>;
			public static setup(dataArr:Array<cfg.LoginWindowsLoginWindowsCfgInfo>):void;
		public static getInfo(value:number):cfg.LoginWindowsLoginWindowsCfgInfo;
		public static getFirstInfo():cfg.LoginWindowsLoginWindowsCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  跳转链接 */
		public static getJumpLinkByIndex(value:number):string;
		 /**  背景图片 */
		public static getBackgroundPicByIndex(value:number):string;
		 /**  按钮图片 */
		public static getButtonPicByIndex(value:number):string;
		 /**  推送顺序 */
		public static getPushOrderByIndex(value:number):number;
		 /**  推送渠道 */
		public static getPushChannelByIndex(value:number):string;
		 /**  推送等级 */
		public static getPushLevelByIndex(value:number):number;
		 /**  推送时间类型 */
		public static getPushTimeTypeByIndex(value:number):number;
		 /**  弹出类型 */
		public static getPopupTybeByIndex(value:number):number;
		 /**  推送时间 */
		public static getPushTimeByIndex(value:number):string;
		 /**  推送开关 */
		public static getPushSwitchByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_login_windows.xls】 ----> login_windows
	class LoginWindowsLoginWindowsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LoginWindowsLoginWindowsCfgInfo>;
			public static setup(dataArr:Array<cfg.LoginWindowsLoginWindowsCfgInfo>):void;
		public static getInfo(value:number):cfg.LoginWindowsLoginWindowsCfgInfo;
		public static getFirstInfo():cfg.LoginWindowsLoginWindowsCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  跳转链接 */
		public static getJumpLinkByIndex(value:number):string;
		 /**  背景图片 */
		public static getBackgroundPicByIndex(value:number):string;
		 /**  按钮图片 */
		public static getButtonPicByIndex(value:number):string;
		 /**  推送顺序 */
		public static getPushOrderByIndex(value:number):number;
		 /**  推送渠道 */
		public static getPushChannelByIndex(value:number):string;
		 /**  推送等级 */
		public static getPushLevelByIndex(value:number):number;
		 /**  推送时间类型 */
		public static getPushTimeTypeByIndex(value:number):number;
		 /**  弹出类型 */
		public static getPopupTybeByIndex(value:number):number;
		 /**  推送时间 */
		public static getPushTimeByIndex(value:number):string;
		 /**  推送开关 */
		public static getPushSwitchByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_login_windows.xls】 ----> login_windows
	class LoginWindowsLoginWindowsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LoginWindowsLoginWindowsCfgInfo>;
			public static setup(dataArr:Array<cfg.LoginWindowsLoginWindowsCfgInfo>):void;
		public static getInfo(value:number):cfg.LoginWindowsLoginWindowsCfgInfo;
		public static getFirstInfo():cfg.LoginWindowsLoginWindowsCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  跳转链接 */
		public static getJumpLinkByIndex(value:number):string;
		 /**  背景图片 */
		public static getBackgroundPicByIndex(value:number):string;
		 /**  按钮图片 */
		public static getButtonPicByIndex(value:number):string;
		 /**  推送顺序 */
		public static getPushOrderByIndex(value:number):number;
		 /**  推送渠道 */
		public static getPushChannelByIndex(value:number):string;
		 /**  推送等级 */
		public static getPushLevelByIndex(value:number):number;
		 /**  推送时间类型 */
		public static getPushTimeTypeByIndex(value:number):number;
		 /**  弹出类型 */
		public static getPopupTybeByIndex(value:number):number;
		 /**  推送时间 */
		public static getPushTimeByIndex(value:number):string;
		 /**  推送开关 */
		public static getPushSwitchByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_question.xls】 ----> question
	class QuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.QuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.QuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.QuestionCfgInfo;
		public static getFirstInfo():cfg.QuestionCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  问卷ID */
		public static getQuestionnaireIDByIndex(value:number):number;
		 /**  题型 */
		public static getTypeByIndex(value:number):number;
		 /**  题目 */
		public static getDescByIndex(value:number):string;
		 /**  选择题选项（|分隔） */
		public static getChoiceByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_question.xls】 ----> question
	class QuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.QuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.QuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.QuestionCfgInfo;
		public static getFirstInfo():cfg.QuestionCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  问卷ID */
		public static getQuestionnaireIDByIndex(value:number):number;
		 /**  题型 */
		public static getTypeByIndex(value:number):number;
		 /**  题目 */
		public static getDescByIndex(value:number):string;
		 /**  选择题选项（|分隔） */
		public static getChoiceByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_question.xls】 ----> question
	class QuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.QuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.QuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.QuestionCfgInfo;
		public static getFirstInfo():cfg.QuestionCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  问卷ID */
		public static getQuestionnaireIDByIndex(value:number):number;
		 /**  题型 */
		public static getTypeByIndex(value:number):number;
		 /**  题目 */
		public static getDescByIndex(value:number):string;
		 /**  选择题选项（|分隔） */
		public static getChoiceByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_uiRoleSay.xls】 ----> uiRoleSay
	class UiRoleSayBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiRoleSayCfgInfo>;
			public static setup(dataArr:Array<cfg.UiRoleSayCfgInfo>):void;
		public static getInfo(value:number):cfg.UiRoleSayCfgInfo;
		public static getFirstInfo():cfg.UiRoleSayCfgInfo;
		 /**  ui面板类型1：背包2：祭献3:召唤4:先知圣殿5:精灵商店 */
		public static getUiTypeByUiType(value:number):number;
		 /**  间隔时间（毫秒） */
		public static getGapTimeByUiType(value:number):number;
		 /**  显示时间（毫秒） */
		public static getShowTimeByUiType(value:number):number;
		 /**  说话随机列表 |  竖线分割 */
		public static getSayTxtByUiType(value:number):string;
		 /**  玩成事件触发文字 */
		public static getEventSayByUiType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_uiRoleSay.xls】 ----> uiRoleSay
	class UiRoleSayBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiRoleSayCfgInfo>;
			public static setup(dataArr:Array<cfg.UiRoleSayCfgInfo>):void;
		public static getInfo(value:number):cfg.UiRoleSayCfgInfo;
		public static getFirstInfo():cfg.UiRoleSayCfgInfo;
		 /**  ui面板类型1：背包2：祭献3:召唤4:先知圣殿5:精灵商店 */
		public static getUiTypeByUiType(value:number):number;
		 /**  间隔时间（毫秒） */
		public static getGapTimeByUiType(value:number):number;
		 /**  显示时间（毫秒） */
		public static getShowTimeByUiType(value:number):number;
		 /**  说话随机列表 |  竖线分割 */
		public static getSayTxtByUiType(value:number):string;
		 /**  玩成事件触发文字 */
		public static getEventSayByUiType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【c_uiRoleSay.xls】 ----> uiRoleSay
	class UiRoleSayBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiRoleSayCfgInfo>;
			public static setup(dataArr:Array<cfg.UiRoleSayCfgInfo>):void;
		public static getInfo(value:number):cfg.UiRoleSayCfgInfo;
		public static getFirstInfo():cfg.UiRoleSayCfgInfo;
		 /**  ui面板类型1：背包2：祭献3:召唤4:先知圣殿5:精灵商店 */
		public static getUiTypeByUiType(value:number):number;
		 /**  间隔时间（毫秒） */
		public static getGapTimeByUiType(value:number):number;
		 /**  显示时间（毫秒） */
		public static getShowTimeByUiType(value:number):number;
		 /**  说话随机列表 |  竖线分割 */
		public static getSayTxtByUiType(value:number):string;
		 /**  玩成事件触发文字 */
		public static getEventSayByUiType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> const
	class AchieveConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveConstCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveConstCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveConstCfgInfo;
		public static getFirstInfo():cfg.AchieveConstCfgInfo;
		 /**  战令持续时间 */
		public static getWarOrderDurationByWarOrderDuration(value:number):number;
		 /**  战令开始时间 */
		public static getWarOrderOpenDayByWarOrderDuration(value:number):number;
		 /**  战令周任务天数 */
		public static getWarOrderWeekDaysByWarOrderDuration(value:number):string;
		 /**  进阶奖励预览 */
		public static getAdvPrizePreviewByWarOrderDuration(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> activity_liveness
	class AchieveActivityLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveActivityLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveActivityLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveActivityLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveActivityLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> achieve_type
	class AchieveTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveTypeCfgInfo;
		public static getFirstInfo():cfg.AchieveTypeCfgInfo;
		 /**  成就类型 */
		public static getAchieveTypeByAchieveType(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByAchieveType(value:number):number;
		 /**  是否累加值 */
		public static getIsAddByAchieveType(value:number):number;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByAchieveType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> liveness_prize
	class AchieveLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> achieve_road
	class AchieveRoadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveRoadCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveRoadCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveRoadCfgInfo;
		public static getFirstInfo():cfg.AchieveRoadCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> activity_liveness
	class AchieveActivityLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveActivityLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveActivityLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveActivityLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveActivityLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> train
	class AchieveTrainBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveTrainCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveTrainCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveTrainCfgInfo;
		public static getFirstInfo():cfg.AchieveTrainCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  历练类型_emAchieveTrainType1;//竞技历练2;//战斗历练3;//特殊历练 */
		public static getTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> war_order
	class AchieveWarOrderBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWarOrderCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWarOrderCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWarOrderCfgInfo;
		public static getFirstInfo():cfg.AchieveWarOrderCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  类型_emWarOrderType */
		public static getTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  进度描述 */
		public static getDescByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> week_liveness_prize
	class AchieveWeekLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWeekLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWeekLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWeekLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveWeekLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> week_liveness
	class AchieveWeekLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWeekLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWeekLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWeekLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveWeekLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> activity_liveness_prize
	class AchieveActivityLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveActivityLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveActivityLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveActivityLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveActivityLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> faction_liveness
	class AchieveFactionLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveFactionLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveFactionLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveFactionLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveFactionLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  重置类型 */
		public static getAchiveResetTypeByID(value:number):number;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  增加活跃度 */
		public static getAddLivenessByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> liveness_prize
	class AchieveLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> week_liveness
	class AchieveWeekLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWeekLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWeekLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWeekLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveWeekLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> achieve_road
	class AchieveRoadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveRoadCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveRoadCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveRoadCfgInfo;
		public static getFirstInfo():cfg.AchieveRoadCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> const
	class AchieveConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveConstCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveConstCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveConstCfgInfo;
		public static getFirstInfo():cfg.AchieveConstCfgInfo;
		 /**  战令持续时间 */
		public static getWarOrderDurationByWarOrderDuration(value:number):number;
		 /**  战令开始时间 */
		public static getWarOrderOpenDayByWarOrderDuration(value:number):number;
		 /**  战令周任务天数 */
		public static getWarOrderWeekDaysByWarOrderDuration(value:number):string;
		 /**  进阶奖励预览 */
		public static getAdvPrizePreviewByWarOrderDuration(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> achieve_road
	class AchieveRoadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveRoadCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveRoadCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveRoadCfgInfo;
		public static getFirstInfo():cfg.AchieveRoadCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> train
	class AchieveTrainBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveTrainCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveTrainCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveTrainCfgInfo;
		public static getFirstInfo():cfg.AchieveTrainCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  历练类型_emAchieveTrainType1;//竞技历练2;//战斗历练3;//特殊历练 */
		public static getTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> activity_liveness_prize
	class AchieveActivityLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveActivityLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveActivityLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveActivityLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveActivityLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> war_order_prize
	class AchieveWarOrderPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWarOrderPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWarOrderPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWarOrderPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveWarOrderPrizeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  到下一级的经验 */
		public static getExpByLevel(value:number):number;
		 /**  奖励 */
		public static getAddItemByLevel(value:number):string;
		 /**  进阶奖励 */
		public static getAdvAddItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> war_order
	class AchieveWarOrderBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWarOrderCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWarOrderCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWarOrderCfgInfo;
		public static getFirstInfo():cfg.AchieveWarOrderCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  类型_emWarOrderType */
		public static getTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  进度描述 */
		public static getDescByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> week_liveness_prize
	class AchieveWeekLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWeekLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWeekLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWeekLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveWeekLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> week_liveness
	class AchieveWeekLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWeekLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWeekLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWeekLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveWeekLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> activity_liveness_prize
	class AchieveActivityLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveActivityLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveActivityLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveActivityLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveActivityLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> activity_liveness
	class AchieveActivityLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveActivityLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveActivityLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveActivityLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveActivityLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> train
	class AchieveTrainBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveTrainCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveTrainCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveTrainCfgInfo;
		public static getFirstInfo():cfg.AchieveTrainCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  历练类型_emAchieveTrainType1;//竞技历练2;//战斗历练3;//特殊历练 */
		public static getTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> const
	class AchieveConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveConstCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveConstCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveConstCfgInfo;
		public static getFirstInfo():cfg.AchieveConstCfgInfo;
		 /**  战令持续时间 */
		public static getWarOrderDurationByWarOrderDuration(value:number):number;
		 /**  战令开始时间 */
		public static getWarOrderOpenDayByWarOrderDuration(value:number):number;
		 /**  战令周任务天数 */
		public static getWarOrderWeekDaysByWarOrderDuration(value:number):string;
		 /**  进阶奖励预览 */
		public static getAdvPrizePreviewByWarOrderDuration(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> war_order_prize
	class AchieveWarOrderPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWarOrderPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWarOrderPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWarOrderPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveWarOrderPrizeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  到下一级的经验 */
		public static getExpByLevel(value:number):number;
		 /**  奖励 */
		public static getAddItemByLevel(value:number):string;
		 /**  进阶奖励 */
		public static getAdvAddItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> war_order
	class AchieveWarOrderBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWarOrderCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWarOrderCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWarOrderCfgInfo;
		public static getFirstInfo():cfg.AchieveWarOrderCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  类型_emWarOrderType */
		public static getTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  进度描述 */
		public static getDescByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> week_liveness_prize
	class AchieveWeekLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWeekLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWeekLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWeekLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveWeekLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> main_achieve
	class AchieveMainAchieveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveMainAchieveCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveMainAchieveCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveMainAchieveCfgInfo;
		public static getFirstInfo():cfg.AchieveMainAchieveCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  成就大类型1; //主线成就2; //每日活跃3; //公会成就4; //图腾成就 */
		public static getAchieveBigTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;
		 /**  后置成就ID */
		public static getNextIDByID(value:number):number;
		 /**  分组起始ID */
		public static getGroupFirstIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> achieve_type
	class AchieveTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveTypeCfgInfo;
		public static getFirstInfo():cfg.AchieveTypeCfgInfo;
		 /**  成就类型 */
		public static getAchieveTypeByAchieveType(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByAchieveType(value:number):number;
		 /**  是否累加值 */
		public static getIsAddByAchieveType(value:number):number;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByAchieveType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> liveness
	class AchieveLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> main_achieve
	class AchieveMainAchieveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveMainAchieveCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveMainAchieveCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveMainAchieveCfgInfo;
		public static getFirstInfo():cfg.AchieveMainAchieveCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  成就大类型1; //主线成就2; //每日活跃3; //公会成就4; //图腾成就 */
		public static getAchieveBigTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;
		 /**  后置成就ID */
		public static getNextIDByID(value:number):number;
		 /**  分组起始ID */
		public static getGroupFirstIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> war_order_prize
	class AchieveWarOrderPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveWarOrderPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveWarOrderPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveWarOrderPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveWarOrderPrizeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  到下一级的经验 */
		public static getExpByLevel(value:number):number;
		 /**  奖励 */
		public static getAddItemByLevel(value:number):string;
		 /**  进阶奖励 */
		public static getAdvAddItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> achieve_type
	class AchieveTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveTypeCfgInfo;
		public static getFirstInfo():cfg.AchieveTypeCfgInfo;
		 /**  成就类型 */
		public static getAchieveTypeByAchieveType(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByAchieveType(value:number):number;
		 /**  是否累加值 */
		public static getIsAddByAchieveType(value:number):number;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByAchieveType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> faction_liveness
	class AchieveFactionLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveFactionLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveFactionLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveFactionLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveFactionLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  重置类型 */
		public static getAchiveResetTypeByID(value:number):number;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  增加活跃度 */
		public static getAddLivenessByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> liveness
	class AchieveLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> faction_liveness
	class AchieveFactionLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveFactionLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveFactionLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveFactionLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveFactionLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  重置类型 */
		public static getAchiveResetTypeByID(value:number):number;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  增加活跃度 */
		public static getAddLivenessByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> liveness
	class AchieveLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveLivenessCfgInfo;
		public static getFirstInfo():cfg.AchieveLivenessCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> liveness_prize
	class AchieveLivenessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveLivenessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveLivenessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveLivenessPrizeCfgInfo;
		public static getFirstInfo():cfg.AchieveLivenessPrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要活跃度 */
		public static getNeedItemByID(value:number):string;
		 /**  增加道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_achieve.xls】 ----> main_achieve
	class AchieveMainAchieveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.AchieveMainAchieveCfgInfo>;
			public static setup(dataArr:Array<cfg.AchieveMainAchieveCfgInfo>):void;
		public static getInfo(value:number):cfg.AchieveMainAchieveCfgInfo;
		public static getFirstInfo():cfg.AchieveMainAchieveCfgInfo;
		 /**  成就ID */
		public static getIDByID(value:number):number;
		 /**  成就大类型1; //主线成就2; //每日活跃3; //公会成就4; //图腾成就 */
		public static getAchieveBigTypeByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  成就类型 */
		public static getAchieveTypeByID(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeByID(value:number):number;
		 /**  值 */
		public static getValueByID(value:number):number;
		 /**  参数 */
		public static getParamByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;
		 /**  后置成就ID */
		public static getNextIDByID(value:number):number;
		 /**  分组起始ID */
		public static getGroupFirstIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> exchange
	class ActivityExchangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityExchangeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityExchangeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityExchangeCfgInfo;
		public static getFirstInfo():cfg.ActivityExchangeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  特殊道具需求 */
		public static getNeedAmountByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  是否显示超值 */
		public static getShowBargainByIndex(value:number):number;
		 /**  消耗道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  消耗精灵 */
		public static getNeedPetByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> short_term_gift
	class ActivityShortTermGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityShortTermGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityShortTermGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityShortTermGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityShortTermGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  商品ID */
		public static getProductIDByIndex(value:number):number;
		 /**  触发类型 */
		public static getTriggerByIndex(value:number):number;
		 /**  触发参数 */
		public static getParamsByIndex(value:number):string;
		 /**  持续时间(分钟) */
		public static getDurationByIndex(value:number):number;
		 /**  页签按钮文字 */
		public static getTabNameByIndex(value:number):string;
		 /**  显示返利比例 */
		public static getRebateByIndex(value:number):number;
		 /**  描述文字 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> common_group_page
	class ActivityCommonGroupPageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCommonGroupPageCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCommonGroupPageCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCommonGroupPageCfgInfo;
		public static getFirstInfo():cfg.ActivityCommonGroupPageCfgInfo;
		 /**  索引ID唯一索引 */
		public static getIndexIDByIndexID(value:number):number;
		 /**  界面组ID填写common_group中的分组ID */
		public static getGroupIDByIndexID(value:number):number;
		 /**  子类型1://限购礼包类型2://充值返利类型3://连冲活动类型4：//心愿抽卡5：//成就之路6：//胡帕抽卡7：//进化抽卡8：//小游戏兑换9：//兑换商店10：//定制礼包11://专属英雄12://兑换（多兑一）13：//限时挑战（活动boss） */
		public static getTypeByIndexID(value:number):number;
		 /**  关联的活动列表 */
		public static getActivityIdsByIndexID(value:number):string;
		 /**  切页图标 */
		public static getPageIconByIndexID(value:number):string;
		 /**  切页名称填写切页名称 */
		public static getPageNameByIndexID(value:number):string;
		 /**  banner图填写banner图名称，不配不显示 */
		public static getBannerByIndexID(value:number):string;
		 /**  banner上的文字提示 */
		public static getBannerTipsByIndexID(value:number):string;
		 /**  帮助描述信息帮助信息文本，不配不显示 */
		public static getHelpTipsByIndexID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> common_group
	class ActivityCommonGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCommonGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCommonGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCommonGroupCfgInfo;
		public static getFirstInfo():cfg.ActivityCommonGroupCfgInfo;
		 /**  界面组ID */
		public static getGroupIDByGroupID(value:number):number;
		 /**  界面位置类型1://左侧竖图标2：//顶部第一排图标3：//顶部第二排图标4：//顶部第三排图标5：//顶部展开气泡图标6：//小游戏气泡图标大于6时，主界面不显示7:6.1活动组8：端午活动组 */
		public static getMainPositionTypeByGroupID(value:number):number;
		 /**  是否在挂机界面显示 */
		public static getHookShowByGroupID(value:number):number;
		 /**  主界面图标配置图标位置和名称 */
		public static getMainIconByGroupID(value:number):string;
		 /**  特效类型ui_timeLimitActBtn  //一键牛逼特效circle //转圈特效 */
		public static getMainEffByGroupID(value:number):string;
		 /**  是否是合服活动 */
		public static getIsMergeByGroupID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> war_order_level
	class ActivityWarOrderLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityWarOrderLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityWarOrderLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityWarOrderLevelCfgInfo;
		public static getFirstInfo():cfg.ActivityWarOrderLevelCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  等级 */
		public static getLevelByActivityID(value:number):number;
		 /**  升级所需积分 */
		public static getScoreByActivityID(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByActivityID(value:number):string;
		 /**  进阶奖励物品 */
		public static getAddSpecialItemByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> war_order_level
	class ActivityWarOrderLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityWarOrderLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityWarOrderLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityWarOrderLevelCfgInfo;
		public static getFirstInfo():cfg.ActivityWarOrderLevelCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  等级 */
		public static getLevelByActivityID(value:number):number;
		 /**  升级所需积分 */
		public static getScoreByActivityID(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByActivityID(value:number):string;
		 /**  进阶奖励物品 */
		public static getAddSpecialItemByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> reward_pool
	class ActivityRewardPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRewardPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRewardPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRewardPoolCfgInfo;
		public static getFirstInfo():cfg.ActivityRewardPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  随机池 */
		public static getPoolTypeByIndex(value:number):number;
		 /**  权重 */
		public static getRateByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> red_envelope
	class ActivityRedEnvelopeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRedEnvelopeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRedEnvelopeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRedEnvelopeCfgInfo;
		public static getFirstInfo():cfg.ActivityRedEnvelopeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID（暂定） */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  红包角色图 */
		public static getImgByIndex(value:number):string;
		 /**  红包类型（2每天重置） */
		public static getTypeByIndex(value:number):number;
		 /**  领取时间 */
		public static getTimeByIndex(value:number):string;
		 /**  打开红包描述 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> exchange_ex
	class ActivityExchangeExBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityExchangeExCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityExchangeExCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityExchangeExCfgInfo;
		public static getFirstInfo():cfg.ActivityExchangeExCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  兑换物品/精灵 */
		public static getFromItemIDByIndex(value:number):number;
		 /**  数量 */
		public static getNeedAmountByIndex(value:number):number;
		 /**  消耗类型(1=道具，2=精灵) */
		public static getTypeByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> limit_day_gift
	class ActivityLimitDayGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLimitDayGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLimitDayGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLimitDayGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityLimitDayGiftCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  名称 */
		public static getNameByActivityID(value:number):string;
		 /**  天数 */
		public static getDayByActivityID(value:number):number;
		 /**  礼包列表 */
		public static getGiftsByActivityID(value:number):string;
		 /**  一键购买礼包id */
		public static getQuickbuyByActivityID(value:number):number;
		 /**  折扣 */
		public static getDiscountByActivityID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> achieve_road
	class ActivityAchieveRoadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityAchieveRoadCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityAchieveRoadCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityAchieveRoadCfgInfo;
		public static getFirstInfo():cfg.ActivityAchieveRoadCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  分组 */
		public static getGroupByIndex(value:number):number;
		 /**  成就ID(对应成就表内achieve_road) */
		public static getAchievementByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  数量限制 */
		public static getCountByIndex(value:number):number;
		 /**  原价 */
		public static getOldPriceByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> common_group
	class ActivityCommonGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCommonGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCommonGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCommonGroupCfgInfo;
		public static getFirstInfo():cfg.ActivityCommonGroupCfgInfo;
		 /**  界面组ID */
		public static getGroupIDByGroupID(value:number):number;
		 /**  界面位置类型1://左侧竖图标2：//顶部第一排图标3：//顶部第二排图标4：//顶部第三排图标5：//顶部展开气泡图标6：//小游戏气泡图标大于6时，主界面不显示7:6.1活动组8：端午活动组 */
		public static getMainPositionTypeByGroupID(value:number):number;
		 /**  是否在挂机界面显示 */
		public static getHookShowByGroupID(value:number):number;
		 /**  主界面图标配置图标位置和名称 */
		public static getMainIconByGroupID(value:number):string;
		 /**  特效类型ui_timeLimitActBtn  //一键牛逼特效circle //转圈特效 */
		public static getMainEffByGroupID(value:number):string;
		 /**  是否是合服活动 */
		public static getIsMergeByGroupID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> common_group_page
	class ActivityCommonGroupPageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCommonGroupPageCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCommonGroupPageCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCommonGroupPageCfgInfo;
		public static getFirstInfo():cfg.ActivityCommonGroupPageCfgInfo;
		 /**  索引ID唯一索引 */
		public static getIndexIDByIndexID(value:number):number;
		 /**  界面组ID填写common_group中的分组ID */
		public static getGroupIDByIndexID(value:number):number;
		 /**  子类型1://限购礼包类型2://充值返利类型3://连冲活动类型4：//心愿抽卡5：//成就之路6：//胡帕抽卡7：//进化抽卡8：//小游戏兑换9：//兑换商店10：//定制礼包11://专属英雄12://兑换（多兑一）13：//限时挑战（活动boss） */
		public static getTypeByIndexID(value:number):number;
		 /**  关联的活动列表 */
		public static getActivityIdsByIndexID(value:number):string;
		 /**  切页图标 */
		public static getPageIconByIndexID(value:number):string;
		 /**  切页名称填写切页名称 */
		public static getPageNameByIndexID(value:number):string;
		 /**  banner图填写banner图名称，不配不显示 */
		public static getBannerByIndexID(value:number):string;
		 /**  banner上的文字提示 */
		public static getBannerTipsByIndexID(value:number):string;
		 /**  帮助描述信息帮助信息文本，不配不显示 */
		public static getHelpTipsByIndexID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> activity
	class ActivityBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCfgInfo;
		public static getFirstInfo():cfg.ActivityCfgInfo;
		 /**  活动ID */
		public static getIDByID(value:number):number;
		 /**  活动类型 */
		public static getTypeByID(value:number):number;
		 /**  选项(选项类型后跟参数用_隔开，多个选项用;号隔开) */
		public static getOptionByID(value:number):string;
		 /**  组id(组id相同互斥) */
		public static getGroupIdByID(value:number):number;
		 /**  子类型 */
		public static getSonTypeByID(value:number):number;
		 /**  配置失效时间 */
		public static getInvalidTimeByID(value:number):number;
		 /**  生效时间 */
		public static getValidTimeByID(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByID(value:number):string;
		 /**  重置时间 */
		public static getRefreshTimeByID(value:number):string;
		 /**  参数 */
		public static getParamByID(value:number):string;
		 /**  开启状态 */
		public static getOpenStateByID(value:number):number;
		 /**  榜单类型 */
		public static getTopListTypeByID(value:number):number;
		 /**  活动参数 */
		public static getIsMergeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> charge_amount
	class ActivityChargeAmountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityChargeAmountCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityChargeAmountCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityChargeAmountCfgInfo;
		public static getFirstInfo():cfg.ActivityChargeAmountCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  累计金额 */
		public static getChargeByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> charge_days
	class ActivityChargeDaysBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityChargeDaysCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityChargeDaysCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityChargeDaysCfgInfo;
		public static getFirstInfo():cfg.ActivityChargeDaysCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  累计天数 */
		public static getDayByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> levelup
	class ActivityLevelupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLevelupCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLevelupCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLevelupCfgInfo;
		public static getFirstInfo():cfg.ActivityLevelupCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  等级需求 */
		public static getLevelByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  数量 */
		public static getNumByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> times
	class ActivityTimesBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityTimesCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityTimesCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityTimesCfgInfo;
		public static getFirstInfo():cfg.ActivityTimesCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  次数需求 */
		public static getTimesByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> first_charge
	class ActivityFirstChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityFirstChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityFirstChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityFirstChargeCfgInfo;
		public static getFirstInfo():cfg.ActivityFirstChargeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  充值金额 */
		public static getAmountByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> weekend
	class ActivityWeekendBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityWeekendCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityWeekendCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityWeekendCfgInfo;
		public static getFirstInfo():cfg.ActivityWeekendCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  周几（周日0） */
		public static getDayByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> limit_gift
	class ActivityLimitGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLimitGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLimitGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLimitGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityLimitGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  全服限购 */
		public static getAllCountByIndex(value:number):number;
		 /**  每人限购 */
		public static getCountByIndex(value:number):number;
		 /**  单人限购刷新天数 */
		public static getRefreshDayByIndex(value:number):number;
		 /**  商品ID */
		public static getProductIDByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> zero_buy
	class ActivityZeroBuyBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityZeroBuyCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityZeroBuyCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityZeroBuyCfgInfo;
		public static getFirstInfo():cfg.ActivityZeroBuyCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  需要等级 */
		public static getLevelByIndex(value:number):number;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  开服天数 */
		public static getDayByIndex(value:number):number;
		 /**  返还天数 */
		public static getReturnDayByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  礼包图标 */
		public static getTabIconByIndex(value:number):string;
		 /**  名字 */
		public static getNameByIndex(value:number):string;
		 /**  banner图 */
		public static getBannerByIndex(value:number):string;
		 /**  总入口图标配置读取每个活动的第一个即可 */
		public static getMainIconByIndex(value:number):string;
		 /**  界面标题图片配置读取每个活动的第一个即可 */
		public static getTitleIconByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> rank
	class ActivityRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRankCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRankCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRankCfgInfo;
		public static getFirstInfo():cfg.ActivityRankCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  个数 */
		public static getCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> grow_fund
	class ActivityGrowFundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityGrowFundCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityGrowFundCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityGrowFundCfgInfo;
		public static getFirstInfo():cfg.ActivityGrowFundCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  等级需求 */
		public static getLevelByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> achievement
	class ActivityAchievementBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityAchievementCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityAchievementCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityAchievementCfgInfo;
		public static getFirstInfo():cfg.ActivityAchievementCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  分组 */
		public static getGroupByIndex(value:number):number;
		 /**  成就ID(成就ID不为0的要花钻石买) */
		public static getAchievementByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  数量限制 */
		public static getCountByIndex(value:number):number;
		 /**  原价 */
		public static getOldPriceByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> fund
	class ActivityFundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityFundCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityFundCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityFundCfgInfo;
		public static getFirstInfo():cfg.ActivityFundCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  是否加入首页预览 */
		public static getIsPreviewByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> rank
	class ActivityRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRankCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRankCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRankCfgInfo;
		public static getFirstInfo():cfg.ActivityRankCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  个数 */
		public static getCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> zero_buy
	class ActivityZeroBuyBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityZeroBuyCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityZeroBuyCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityZeroBuyCfgInfo;
		public static getFirstInfo():cfg.ActivityZeroBuyCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  需要等级 */
		public static getLevelByIndex(value:number):number;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  开服天数 */
		public static getDayByIndex(value:number):number;
		 /**  返还天数 */
		public static getReturnDayByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  礼包图标 */
		public static getTabIconByIndex(value:number):string;
		 /**  名字 */
		public static getNameByIndex(value:number):string;
		 /**  banner图 */
		public static getBannerByIndex(value:number):string;
		 /**  总入口图标配置读取每个活动的第一个即可 */
		public static getMainIconByIndex(value:number):string;
		 /**  界面标题图片配置读取每个活动的第一个即可 */
		public static getTitleIconByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> exchange
	class ActivityExchangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityExchangeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityExchangeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityExchangeCfgInfo;
		public static getFirstInfo():cfg.ActivityExchangeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  特殊道具需求 */
		public static getNeedAmountByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  是否显示超值 */
		public static getShowBargainByIndex(value:number):number;
		 /**  消耗道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  消耗精灵 */
		public static getNeedPetByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> login
	class ActivityLoginBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLoginCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLoginCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLoginCfgInfo;
		public static getFirstInfo():cfg.ActivityLoginCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  按钮文字提示 */
		public static getButtonTipsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> fund
	class ActivityFundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityFundCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityFundCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityFundCfgInfo;
		public static getFirstInfo():cfg.ActivityFundCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  是否加入首页预览 */
		public static getIsPreviewByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> achievement
	class ActivityAchievementBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityAchievementCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityAchievementCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityAchievementCfgInfo;
		public static getFirstInfo():cfg.ActivityAchievementCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  分组 */
		public static getGroupByIndex(value:number):number;
		 /**  成就ID(成就ID不为0的要花钻石买) */
		public static getAchievementByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  数量限制 */
		public static getCountByIndex(value:number):number;
		 /**  原价 */
		public static getOldPriceByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> activity
	class ActivityBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCfgInfo;
		public static getFirstInfo():cfg.ActivityCfgInfo;
		 /**  活动ID */
		public static getIDByID(value:number):number;
		 /**  活动类型 */
		public static getTypeByID(value:number):number;
		 /**  选项(选项类型后跟参数用_隔开，多个选项用;号隔开) */
		public static getOptionByID(value:number):string;
		 /**  组id(组id相同互斥) */
		public static getGroupIdByID(value:number):number;
		 /**  子类型 */
		public static getSonTypeByID(value:number):number;
		 /**  配置失效时间 */
		public static getInvalidTimeByID(value:number):number;
		 /**  生效时间 */
		public static getValidTimeByID(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByID(value:number):string;
		 /**  重置时间 */
		public static getRefreshTimeByID(value:number):string;
		 /**  参数 */
		public static getParamByID(value:number):string;
		 /**  开启状态 */
		public static getOpenStateByID(value:number):number;
		 /**  榜单类型 */
		public static getTopListTypeByID(value:number):number;
		 /**  活动参数 */
		public static getIsMergeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> limit_gift
	class ActivityLimitGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLimitGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLimitGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLimitGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityLimitGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  全服限购 */
		public static getAllCountByIndex(value:number):number;
		 /**  每人限购 */
		public static getCountByIndex(value:number):number;
		 /**  单人限购刷新天数 */
		public static getRefreshDayByIndex(value:number):number;
		 /**  商品ID */
		public static getProductIDByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> war_order_level
	class ActivityWarOrderLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityWarOrderLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityWarOrderLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityWarOrderLevelCfgInfo;
		public static getFirstInfo():cfg.ActivityWarOrderLevelCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  等级 */
		public static getLevelByActivityID(value:number):number;
		 /**  升级所需积分 */
		public static getScoreByActivityID(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByActivityID(value:number):string;
		 /**  进阶奖励物品 */
		public static getAddSpecialItemByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> short_term_gift
	class ActivityShortTermGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityShortTermGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityShortTermGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityShortTermGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityShortTermGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  商品ID */
		public static getProductIDByIndex(value:number):number;
		 /**  触发类型 */
		public static getTriggerByIndex(value:number):number;
		 /**  触发参数 */
		public static getParamsByIndex(value:number):string;
		 /**  持续时间(分钟) */
		public static getDurationByIndex(value:number):number;
		 /**  页签按钮文字 */
		public static getTabNameByIndex(value:number):string;
		 /**  显示返利比例 */
		public static getRebateByIndex(value:number):number;
		 /**  描述文字 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> login
	class ActivityLoginBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLoginCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLoginCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLoginCfgInfo;
		public static getFirstInfo():cfg.ActivityLoginCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  按钮文字提示 */
		public static getButtonTipsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> exchange_ex
	class ActivityExchangeExBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityExchangeExCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityExchangeExCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityExchangeExCfgInfo;
		public static getFirstInfo():cfg.ActivityExchangeExCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  兑换物品/精灵 */
		public static getFromItemIDByIndex(value:number):number;
		 /**  数量 */
		public static getNeedAmountByIndex(value:number):number;
		 /**  消耗类型(1=道具，2=精灵) */
		public static getTypeByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> common_group_page
	class ActivityCommonGroupPageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCommonGroupPageCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCommonGroupPageCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCommonGroupPageCfgInfo;
		public static getFirstInfo():cfg.ActivityCommonGroupPageCfgInfo;
		 /**  索引ID唯一索引 */
		public static getIndexIDByIndexID(value:number):number;
		 /**  界面组ID填写common_group中的分组ID */
		public static getGroupIDByIndexID(value:number):number;
		 /**  子类型1://限购礼包类型2://充值返利类型3://连冲活动类型4：//心愿抽卡5：//成就之路6：//胡帕抽卡7：//进化抽卡8：//小游戏兑换9：//兑换商店10：//定制礼包11://专属英雄12://兑换（多兑一）13：//限时挑战（活动boss） */
		public static getTypeByIndexID(value:number):number;
		 /**  关联的活动列表 */
		public static getActivityIdsByIndexID(value:number):string;
		 /**  切页图标 */
		public static getPageIconByIndexID(value:number):string;
		 /**  切页名称填写切页名称 */
		public static getPageNameByIndexID(value:number):string;
		 /**  banner图填写banner图名称，不配不显示 */
		public static getBannerByIndexID(value:number):string;
		 /**  banner上的文字提示 */
		public static getBannerTipsByIndexID(value:number):string;
		 /**  帮助描述信息帮助信息文本，不配不显示 */
		public static getHelpTipsByIndexID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> common_group
	class ActivityCommonGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCommonGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCommonGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCommonGroupCfgInfo;
		public static getFirstInfo():cfg.ActivityCommonGroupCfgInfo;
		 /**  界面组ID */
		public static getGroupIDByGroupID(value:number):number;
		 /**  界面位置类型1://左侧竖图标2：//顶部第一排图标3：//顶部第二排图标4：//顶部第三排图标5：//顶部展开气泡图标6：//小游戏气泡图标大于6时，主界面不显示7:6.1活动组8：端午活动组 */
		public static getMainPositionTypeByGroupID(value:number):number;
		 /**  是否在挂机界面显示 */
		public static getHookShowByGroupID(value:number):number;
		 /**  主界面图标配置图标位置和名称 */
		public static getMainIconByGroupID(value:number):string;
		 /**  特效类型ui_timeLimitActBtn  //一键牛逼特效circle //转圈特效 */
		public static getMainEffByGroupID(value:number):string;
		 /**  是否是合服活动 */
		public static getIsMergeByGroupID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> reward_pool
	class ActivityRewardPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRewardPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRewardPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRewardPoolCfgInfo;
		public static getFirstInfo():cfg.ActivityRewardPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  随机池 */
		public static getPoolTypeByIndex(value:number):number;
		 /**  权重 */
		public static getRateByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> red_envelope
	class ActivityRedEnvelopeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRedEnvelopeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRedEnvelopeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRedEnvelopeCfgInfo;
		public static getFirstInfo():cfg.ActivityRedEnvelopeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID（暂定） */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  红包角色图 */
		public static getImgByIndex(value:number):string;
		 /**  红包类型（2每天重置） */
		public static getTypeByIndex(value:number):number;
		 /**  领取时间 */
		public static getTimeByIndex(value:number):string;
		 /**  打开红包描述 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> exchange_ex
	class ActivityExchangeExBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityExchangeExCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityExchangeExCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityExchangeExCfgInfo;
		public static getFirstInfo():cfg.ActivityExchangeExCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  兑换物品/精灵 */
		public static getFromItemIDByIndex(value:number):number;
		 /**  数量 */
		public static getNeedAmountByIndex(value:number):number;
		 /**  消耗类型(1=道具，2=精灵) */
		public static getTypeByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> limit_day_gift
	class ActivityLimitDayGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLimitDayGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLimitDayGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLimitDayGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityLimitDayGiftCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  名称 */
		public static getNameByActivityID(value:number):string;
		 /**  天数 */
		public static getDayByActivityID(value:number):number;
		 /**  礼包列表 */
		public static getGiftsByActivityID(value:number):string;
		 /**  一键购买礼包id */
		public static getQuickbuyByActivityID(value:number):number;
		 /**  折扣 */
		public static getDiscountByActivityID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> achieve_road
	class ActivityAchieveRoadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityAchieveRoadCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityAchieveRoadCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityAchieveRoadCfgInfo;
		public static getFirstInfo():cfg.ActivityAchieveRoadCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  分组 */
		public static getGroupByIndex(value:number):number;
		 /**  成就ID(对应成就表内achieve_road) */
		public static getAchievementByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  数量限制 */
		public static getCountByIndex(value:number):number;
		 /**  原价 */
		public static getOldPriceByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> weekend
	class ActivityWeekendBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityWeekendCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityWeekendCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityWeekendCfgInfo;
		public static getFirstInfo():cfg.ActivityWeekendCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  周几（周日0） */
		public static getDayByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> limit_gift
	class ActivityLimitGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLimitGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLimitGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLimitGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityLimitGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  全服限购 */
		public static getAllCountByIndex(value:number):number;
		 /**  每人限购 */
		public static getCountByIndex(value:number):number;
		 /**  单人限购刷新天数 */
		public static getRefreshDayByIndex(value:number):number;
		 /**  商品ID */
		public static getProductIDByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> zero_buy
	class ActivityZeroBuyBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityZeroBuyCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityZeroBuyCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityZeroBuyCfgInfo;
		public static getFirstInfo():cfg.ActivityZeroBuyCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  需要等级 */
		public static getLevelByIndex(value:number):number;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  开服天数 */
		public static getDayByIndex(value:number):number;
		 /**  返还天数 */
		public static getReturnDayByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  礼包图标 */
		public static getTabIconByIndex(value:number):string;
		 /**  名字 */
		public static getNameByIndex(value:number):string;
		 /**  banner图 */
		public static getBannerByIndex(value:number):string;
		 /**  总入口图标配置读取每个活动的第一个即可 */
		public static getMainIconByIndex(value:number):string;
		 /**  界面标题图片配置读取每个活动的第一个即可 */
		public static getTitleIconByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> rank
	class ActivityRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRankCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRankCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRankCfgInfo;
		public static getFirstInfo():cfg.ActivityRankCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  个数 */
		public static getCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> achievement
	class ActivityAchievementBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityAchievementCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityAchievementCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityAchievementCfgInfo;
		public static getFirstInfo():cfg.ActivityAchievementCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  分组 */
		public static getGroupByIndex(value:number):number;
		 /**  成就ID(成就ID不为0的要花钻石买) */
		public static getAchievementByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  数量限制 */
		public static getCountByIndex(value:number):number;
		 /**  原价 */
		public static getOldPriceByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> short_term_gift
	class ActivityShortTermGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityShortTermGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityShortTermGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityShortTermGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityShortTermGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  商品ID */
		public static getProductIDByIndex(value:number):number;
		 /**  触发类型 */
		public static getTriggerByIndex(value:number):number;
		 /**  触发参数 */
		public static getParamsByIndex(value:number):string;
		 /**  持续时间(分钟) */
		public static getDurationByIndex(value:number):number;
		 /**  页签按钮文字 */
		public static getTabNameByIndex(value:number):string;
		 /**  显示返利比例 */
		public static getRebateByIndex(value:number):number;
		 /**  描述文字 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> charge_amount
	class ActivityChargeAmountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityChargeAmountCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityChargeAmountCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityChargeAmountCfgInfo;
		public static getFirstInfo():cfg.ActivityChargeAmountCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  累计金额 */
		public static getChargeByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> levelup
	class ActivityLevelupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLevelupCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLevelupCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLevelupCfgInfo;
		public static getFirstInfo():cfg.ActivityLevelupCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  等级需求 */
		public static getLevelByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  数量 */
		public static getNumByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> charge_days
	class ActivityChargeDaysBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityChargeDaysCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityChargeDaysCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityChargeDaysCfgInfo;
		public static getFirstInfo():cfg.ActivityChargeDaysCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  累计天数 */
		public static getDayByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> red_envelope
	class ActivityRedEnvelopeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRedEnvelopeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRedEnvelopeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRedEnvelopeCfgInfo;
		public static getFirstInfo():cfg.ActivityRedEnvelopeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID（暂定） */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  红包角色图 */
		public static getImgByIndex(value:number):string;
		 /**  红包类型（2每天重置） */
		public static getTypeByIndex(value:number):number;
		 /**  领取时间 */
		public static getTimeByIndex(value:number):string;
		 /**  打开红包描述 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> reward_pool
	class ActivityRewardPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityRewardPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityRewardPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityRewardPoolCfgInfo;
		public static getFirstInfo():cfg.ActivityRewardPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  随机池 */
		public static getPoolTypeByIndex(value:number):number;
		 /**  权重 */
		public static getRateByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> activity
	class ActivityBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCfgInfo;
		public static getFirstInfo():cfg.ActivityCfgInfo;
		 /**  活动ID */
		public static getIDByID(value:number):number;
		 /**  活动类型 */
		public static getTypeByID(value:number):number;
		 /**  选项(选项类型后跟参数用_隔开，多个选项用;号隔开) */
		public static getOptionByID(value:number):string;
		 /**  组id(组id相同互斥) */
		public static getGroupIdByID(value:number):number;
		 /**  子类型 */
		public static getSonTypeByID(value:number):number;
		 /**  配置失效时间 */
		public static getInvalidTimeByID(value:number):number;
		 /**  生效时间 */
		public static getValidTimeByID(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByID(value:number):string;
		 /**  重置时间 */
		public static getRefreshTimeByID(value:number):string;
		 /**  参数 */
		public static getParamByID(value:number):string;
		 /**  开启状态 */
		public static getOpenStateByID(value:number):number;
		 /**  榜单类型 */
		public static getTopListTypeByID(value:number):number;
		 /**  活动参数 */
		public static getIsMergeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> times
	class ActivityTimesBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityTimesCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityTimesCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityTimesCfgInfo;
		public static getFirstInfo():cfg.ActivityTimesCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  次数需求 */
		public static getTimesByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> grow_fund
	class ActivityGrowFundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityGrowFundCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityGrowFundCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityGrowFundCfgInfo;
		public static getFirstInfo():cfg.ActivityGrowFundCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  等级需求 */
		public static getLevelByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> first_charge
	class ActivityFirstChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityFirstChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityFirstChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityFirstChargeCfgInfo;
		public static getFirstInfo():cfg.ActivityFirstChargeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  充值金额 */
		public static getAmountByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> exchange
	class ActivityExchangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityExchangeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityExchangeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityExchangeCfgInfo;
		public static getFirstInfo():cfg.ActivityExchangeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  特殊道具需求 */
		public static getNeedAmountByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  是否显示超值 */
		public static getShowBargainByIndex(value:number):number;
		 /**  消耗道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  消耗精灵 */
		public static getNeedPetByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> times
	class ActivityTimesBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityTimesCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityTimesCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityTimesCfgInfo;
		public static getFirstInfo():cfg.ActivityTimesCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  次数需求 */
		public static getTimesByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> levelup
	class ActivityLevelupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLevelupCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLevelupCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLevelupCfgInfo;
		public static getFirstInfo():cfg.ActivityLevelupCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  等级需求 */
		public static getLevelByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  数量 */
		public static getNumByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> first_charge
	class ActivityFirstChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityFirstChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityFirstChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityFirstChargeCfgInfo;
		public static getFirstInfo():cfg.ActivityFirstChargeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  充值金额 */
		public static getAmountByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> charge_amount
	class ActivityChargeAmountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityChargeAmountCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityChargeAmountCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityChargeAmountCfgInfo;
		public static getFirstInfo():cfg.ActivityChargeAmountCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  累计金额 */
		public static getChargeByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> limit_day_gift
	class ActivityLimitDayGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLimitDayGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLimitDayGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLimitDayGiftCfgInfo;
		public static getFirstInfo():cfg.ActivityLimitDayGiftCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  名称 */
		public static getNameByActivityID(value:number):string;
		 /**  天数 */
		public static getDayByActivityID(value:number):number;
		 /**  礼包列表 */
		public static getGiftsByActivityID(value:number):string;
		 /**  一键购买礼包id */
		public static getQuickbuyByActivityID(value:number):number;
		 /**  折扣 */
		public static getDiscountByActivityID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> fund
	class ActivityFundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityFundCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityFundCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityFundCfgInfo;
		public static getFirstInfo():cfg.ActivityFundCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  是否加入首页预览 */
		public static getIsPreviewByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> grow_fund
	class ActivityGrowFundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityGrowFundCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityGrowFundCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityGrowFundCfgInfo;
		public static getFirstInfo():cfg.ActivityGrowFundCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  等级需求 */
		public static getLevelByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> achieve_road
	class ActivityAchieveRoadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityAchieveRoadCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityAchieveRoadCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityAchieveRoadCfgInfo;
		public static getFirstInfo():cfg.ActivityAchieveRoadCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  分组 */
		public static getGroupByIndex(value:number):number;
		 /**  成就ID(对应成就表内achieve_road) */
		public static getAchievementByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;
		 /**  数量限制 */
		public static getCountByIndex(value:number):number;
		 /**  原价 */
		public static getOldPriceByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> weekend
	class ActivityWeekendBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityWeekendCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityWeekendCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityWeekendCfgInfo;
		public static getFirstInfo():cfg.ActivityWeekendCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  周几（周日0） */
		public static getDayByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> login
	class ActivityLoginBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityLoginCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityLoginCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityLoginCfgInfo;
		public static getFirstInfo():cfg.ActivityLoginCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  天数 */
		public static getDayByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  按钮文字提示 */
		public static getButtonTipsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity.xls】 ----> charge_days
	class ActivityChargeDaysBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityChargeDaysCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityChargeDaysCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityChargeDaysCfgInfo;
		public static getFirstInfo():cfg.ActivityChargeDaysCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  累计天数 */
		public static getDayByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_constant.xls】 ----> constant
	class ActivityConstantConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityConstantConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityConstantConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityConstantConstantCfgInfo;
		public static getFirstInfo():cfg.ActivityConstantConstantCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  推送渠道 */
		public static getPushChannelByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_constant.xls】 ----> constant
	class ActivityConstantConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityConstantConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityConstantConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityConstantConstantCfgInfo;
		public static getFirstInfo():cfg.ActivityConstantConstantCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  推送渠道 */
		public static getPushChannelByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_constant.xls】 ----> constant
	class ActivityConstantConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityConstantConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityConstantConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityConstantConstantCfgInfo;
		public static getFirstInfo():cfg.ActivityConstantConstantCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  推送渠道 */
		public static getPushChannelByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_custom.xls】 ----> In
	class ActivityCustomInBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCustomInCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCustomInCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCustomInCfgInfo;
		public static getFirstInfo():cfg.ActivityCustomInCfgInfo;
		 /**  入口id */
		public static getInIdByInId(value:number):number;
		 /**  活动id */
		public static getActivityIdByInId(value:number):number;
		 /**  界面位置类型1://左侧竖图标2：//顶部第一排图标3：//顶部第二排图标4：//顶部第三排图标5：//顶部展开气泡图标6：//小游戏气泡图标大于6时，主界面不显示 */
		public static getMainPositionTypeByInId(value:number):number;
		 /**  开启界面(问程序) */
		public static getOpenMediatorByInId(value:number):string;
		 /**  主界面图标配置图标位置和名称 */
		public static getMainIconByInId(value:number):string;
		 /**  uiPanel地址(问程序,简单的资源修改直接Mediator处理，复杂的才需要新建多个uiPanel，不涉及多个uiPanel的可以不配) */
		public static getUIPanelByInId(value:number):string;
		 /**  特效类型ui_timeLimitActBtn  //一键牛逼特效circle //转圈特效 */
		public static getMainEffByInId(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_custom.xls】 ----> In
	class ActivityCustomInBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCustomInCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCustomInCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCustomInCfgInfo;
		public static getFirstInfo():cfg.ActivityCustomInCfgInfo;
		 /**  入口id */
		public static getInIdByInId(value:number):number;
		 /**  活动id */
		public static getActivityIdByInId(value:number):number;
		 /**  界面位置类型1://左侧竖图标2：//顶部第一排图标3：//顶部第二排图标4：//顶部第三排图标5：//顶部展开气泡图标6：//小游戏气泡图标大于6时，主界面不显示 */
		public static getMainPositionTypeByInId(value:number):number;
		 /**  开启界面(问程序) */
		public static getOpenMediatorByInId(value:number):string;
		 /**  主界面图标配置图标位置和名称 */
		public static getMainIconByInId(value:number):string;
		 /**  uiPanel地址(问程序,简单的资源修改直接Mediator处理，复杂的才需要新建多个uiPanel，不涉及多个uiPanel的可以不配) */
		public static getUIPanelByInId(value:number):string;
		 /**  特效类型ui_timeLimitActBtn  //一键牛逼特效circle //转圈特效 */
		public static getMainEffByInId(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_custom.xls】 ----> In
	class ActivityCustomInBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityCustomInCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityCustomInCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityCustomInCfgInfo;
		public static getFirstInfo():cfg.ActivityCustomInCfgInfo;
		 /**  入口id */
		public static getInIdByInId(value:number):number;
		 /**  活动id */
		public static getActivityIdByInId(value:number):number;
		 /**  界面位置类型1://左侧竖图标2：//顶部第一排图标3：//顶部第二排图标4：//顶部第三排图标5：//顶部展开气泡图标6：//小游戏气泡图标大于6时，主界面不显示 */
		public static getMainPositionTypeByInId(value:number):number;
		 /**  开启界面(问程序) */
		public static getOpenMediatorByInId(value:number):string;
		 /**  主界面图标配置图标位置和名称 */
		public static getMainIconByInId(value:number):string;
		 /**  uiPanel地址(问程序,简单的资源修改直接Mediator处理，复杂的才需要新建多个uiPanel，不涉及多个uiPanel的可以不配) */
		public static getUIPanelByInId(value:number):string;
		 /**  特效类型ui_timeLimitActBtn  //一键牛逼特效circle //转圈特效 */
		public static getMainEffByInId(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_egg.xls】 ----> lucky_egg
	class ActivityEggLuckyEggBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityEggLuckyEggCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityEggLuckyEggCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityEggLuckyEggCfgInfo;
		public static getFirstInfo():cfg.ActivityEggLuckyEggCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  领取天数（周*） */
		public static getDayByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_egg.xls】 ----> lucky_egg
	class ActivityEggLuckyEggBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityEggLuckyEggCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityEggLuckyEggCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityEggLuckyEggCfgInfo;
		public static getFirstInfo():cfg.ActivityEggLuckyEggCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  领取天数（周*） */
		public static getDayByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activity_egg.xls】 ----> lucky_egg
	class ActivityEggLuckyEggBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivityEggLuckyEggCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivityEggLuckyEggCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivityEggLuckyEggCfgInfo;
		public static getFirstInfo():cfg.ActivityEggLuckyEggCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  领取天数（周*） */
		public static getDayByIndex(value:number):number;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> buy_count
	class ActivitybossBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossBuyCountCfgInfo;
		public static getFirstInfo():cfg.ActivitybossBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> monster_new
	class ActivitybossMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ActivitybossMonsterNewCfgInfo;
		 /**  Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物名称 */
		public static getNameByIndex(value:number):string;
		 /**  展示皮肤ID */
		public static getSkinIDByIndex(value:number):number;
		 /**  展示界面缩放比例 */
		public static getShowScaleByIndex(value:number):number;
		 /**  参与奖励 */
		public static getDamagePrizeByIndex(value:number):string;
		 /**  奖励预览 */
		public static getAwardsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> monster_new
	class ActivitybossMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ActivitybossMonsterNewCfgInfo;
		 /**  Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物名称 */
		public static getNameByIndex(value:number):string;
		 /**  展示皮肤ID */
		public static getSkinIDByIndex(value:number):number;
		 /**  展示界面缩放比例 */
		public static getShowScaleByIndex(value:number):number;
		 /**  参与奖励 */
		public static getDamagePrizeByIndex(value:number):string;
		 /**  奖励预览 */
		public static getAwardsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> constant
	class ActivitybossConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossConstantCfgInfo;
		public static getFirstInfo():cfg.ActivitybossConstantCfgInfo;
		 /**  每日挑战次数 */
		public static getChallengeCountByChallengeCount(value:number):number;
		 /**  血条单位 */
		public static getBloodUnitByChallengeCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> buy_count
	class ActivitybossBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossBuyCountCfgInfo;
		public static getFirstInfo():cfg.ActivitybossBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> constant
	class ActivitybossConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossConstantCfgInfo;
		public static getFirstInfo():cfg.ActivitybossConstantCfgInfo;
		 /**  每日挑战次数 */
		public static getChallengeCountByChallengeCount(value:number):number;
		 /**  血条单位 */
		public static getBloodUnitByChallengeCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> buy_count
	class ActivitybossBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossBuyCountCfgInfo;
		public static getFirstInfo():cfg.ActivitybossBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> constant
	class ActivitybossConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossConstantCfgInfo;
		public static getFirstInfo():cfg.ActivitybossConstantCfgInfo;
		 /**  每日挑战次数 */
		public static getChallengeCountByChallengeCount(value:number):number;
		 /**  血条单位 */
		public static getBloodUnitByChallengeCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_activityboss.xls】 ----> monster_new
	class ActivitybossMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ActivitybossMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ActivitybossMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ActivitybossMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ActivitybossMonsterNewCfgInfo;
		 /**  Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物名称 */
		public static getNameByIndex(value:number):string;
		 /**  展示皮肤ID */
		public static getSkinIDByIndex(value:number):number;
		 /**  展示界面缩放比例 */
		public static getShowScaleByIndex(value:number):number;
		 /**  参与奖励 */
		public static getDamagePrizeByIndex(value:number):string;
		 /**  奖励预览 */
		public static getAwardsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> artifact
	class ArtifactBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactCfgInfo;
		public static getFirstInfo():cfg.ArtifactCfgInfo;
		 /**  id */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  技能ID */
		public static getSkillIDByID(value:number):number;
		 /**  技能描述 */
		public static getDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> skill_upgrade
	class ArtifactSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.ArtifactSkillUpgradeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  技能ID */
		public static getSkillIDByIndex(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByIndex(value:number):number;
		 /**  需要神器等级 */
		public static getNeedArtifactLevelByIndex(value:number):number;
		 /**  升到此级需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  重置返还道具 */
		public static getReturnItemByIndex(value:number):string;
		 /**  增加属性(需要累加)属性类型|值|万分比; */
		public static getAddAttrByIndex(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByIndex(value:number):number;
		 /**  觉醒增加属性属性类型|值|万分比; */
		public static getAddAwakeAttrByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> artifact
	class ArtifactBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactCfgInfo;
		public static getFirstInfo():cfg.ArtifactCfgInfo;
		 /**  id */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  技能ID */
		public static getSkillIDByID(value:number):number;
		 /**  技能描述 */
		public static getDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> upgrade
	class ArtifactUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactUpgradeCfgInfo;
		public static getFirstInfo():cfg.ArtifactUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  此级最大经验 */
		public static getMaxExpByLevel(value:number):number;
		 /**  最大刻印次数 */
		public static getMaxStoneCountByLevel(value:number):number;
		 /**  每次需要刻印石数量 */
		public static getNeedStoneCountByLevel(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  增加属性属性类型|值|万分比; */
		public static getAddAttrByLevel(value:number):string;
		 /**  每点经验增加属性属性类型|属性值 */
		public static getExpAddAttrByLevel(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByLevel(value:number):number;
		 /**  技能等级 */
		public static getSkillMaxLvByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> active
	class ArtifactActiveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactActiveCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactActiveCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactActiveCfgInfo;
		public static getFirstInfo():cfg.ArtifactActiveCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  进度 */
		public static getStageByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  需要成就ID */
		public static getNeedAchieveIDByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> ylstagereward
	class ArtifactYlstagerewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactYlstagerewardCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactYlstagerewardCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactYlstagerewardCfgInfo;
		public static getFirstInfo():cfg.ArtifactYlstagerewardCfgInfo;
		 /**  进度 */
		public static getStageByStage(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByStage(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> active
	class ArtifactActiveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactActiveCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactActiveCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactActiveCfgInfo;
		public static getFirstInfo():cfg.ArtifactActiveCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  进度 */
		public static getStageByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  需要成就ID */
		public static getNeedAchieveIDByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> upgrade
	class ArtifactUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactUpgradeCfgInfo;
		public static getFirstInfo():cfg.ArtifactUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  此级最大经验 */
		public static getMaxExpByLevel(value:number):number;
		 /**  最大刻印次数 */
		public static getMaxStoneCountByLevel(value:number):number;
		 /**  每次需要刻印石数量 */
		public static getNeedStoneCountByLevel(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  增加属性属性类型|值|万分比; */
		public static getAddAttrByLevel(value:number):string;
		 /**  每点经验增加属性属性类型|属性值 */
		public static getExpAddAttrByLevel(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByLevel(value:number):number;
		 /**  技能等级 */
		public static getSkillMaxLvByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> const
	class ArtifactConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactConstCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactConstCfgInfo>):void;
		public static getInfo(value:string):cfg.ArtifactConstCfgInfo;
		public static getFirstInfo():cfg.ArtifactConstCfgInfo;
		 /**  法阵解锁奖励 */
		public static getFazhenAddItemByFazhenAddItem(value:string):string;
		 /**  法阵觉醒属性万分比加成(类型_万分比;) */
		public static getAwakeAddAttrByFazhenAddItem(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> active
	class ArtifactActiveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactActiveCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactActiveCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactActiveCfgInfo;
		public static getFirstInfo():cfg.ArtifactActiveCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  进度 */
		public static getStageByIndex(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  需要成就ID */
		public static getNeedAchieveIDByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> ylstagereward
	class ArtifactYlstagerewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactYlstagerewardCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactYlstagerewardCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactYlstagerewardCfgInfo;
		public static getFirstInfo():cfg.ArtifactYlstagerewardCfgInfo;
		 /**  进度 */
		public static getStageByStage(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByStage(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> ylactive
	class ArtifactYlactiveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactYlactiveCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactYlactiveCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactYlactiveCfgInfo;
		public static getFirstInfo():cfg.ArtifactYlactiveCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  进度 */
		public static getStageByIndex(value:number):number;
		 /**  需要成就ID */
		public static getNeedAchieveIDByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> skill_upgrade
	class ArtifactSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.ArtifactSkillUpgradeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  技能ID */
		public static getSkillIDByIndex(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByIndex(value:number):number;
		 /**  需要神器等级 */
		public static getNeedArtifactLevelByIndex(value:number):number;
		 /**  升到此级需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  重置返还道具 */
		public static getReturnItemByIndex(value:number):string;
		 /**  增加属性(需要累加)属性类型|值|万分比; */
		public static getAddAttrByIndex(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByIndex(value:number):number;
		 /**  觉醒增加属性属性类型|值|万分比; */
		public static getAddAwakeAttrByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> skill_upgrade
	class ArtifactSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.ArtifactSkillUpgradeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  技能ID */
		public static getSkillIDByIndex(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByIndex(value:number):number;
		 /**  需要神器等级 */
		public static getNeedArtifactLevelByIndex(value:number):number;
		 /**  升到此级需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  重置返还道具 */
		public static getReturnItemByIndex(value:number):string;
		 /**  增加属性(需要累加)属性类型|值|万分比; */
		public static getAddAttrByIndex(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByIndex(value:number):number;
		 /**  觉醒增加属性属性类型|值|万分比; */
		public static getAddAwakeAttrByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> upgrade
	class ArtifactUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactUpgradeCfgInfo;
		public static getFirstInfo():cfg.ArtifactUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  此级最大经验 */
		public static getMaxExpByLevel(value:number):number;
		 /**  最大刻印次数 */
		public static getMaxStoneCountByLevel(value:number):number;
		 /**  每次需要刻印石数量 */
		public static getNeedStoneCountByLevel(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  增加属性属性类型|值|万分比; */
		public static getAddAttrByLevel(value:number):string;
		 /**  每点经验增加属性属性类型|属性值 */
		public static getExpAddAttrByLevel(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByLevel(value:number):number;
		 /**  技能等级 */
		public static getSkillMaxLvByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> const
	class ArtifactConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactConstCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactConstCfgInfo>):void;
		public static getInfo(value:string):cfg.ArtifactConstCfgInfo;
		public static getFirstInfo():cfg.ArtifactConstCfgInfo;
		 /**  法阵解锁奖励 */
		public static getFazhenAddItemByFazhenAddItem(value:string):string;
		 /**  法阵觉醒属性万分比加成(类型_万分比;) */
		public static getAwakeAddAttrByFazhenAddItem(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> ylactive
	class ArtifactYlactiveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactYlactiveCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactYlactiveCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactYlactiveCfgInfo;
		public static getFirstInfo():cfg.ArtifactYlactiveCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  进度 */
		public static getStageByIndex(value:number):number;
		 /**  需要成就ID */
		public static getNeedAchieveIDByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> const
	class ArtifactConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactConstCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactConstCfgInfo>):void;
		public static getInfo(value:string):cfg.ArtifactConstCfgInfo;
		public static getFirstInfo():cfg.ArtifactConstCfgInfo;
		 /**  法阵解锁奖励 */
		public static getFazhenAddItemByFazhenAddItem(value:string):string;
		 /**  法阵觉醒属性万分比加成(类型_万分比;) */
		public static getAwakeAddAttrByFazhenAddItem(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> ylstagereward
	class ArtifactYlstagerewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactYlstagerewardCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactYlstagerewardCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactYlstagerewardCfgInfo;
		public static getFirstInfo():cfg.ArtifactYlstagerewardCfgInfo;
		 /**  进度 */
		public static getStageByStage(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByStage(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> ylactive
	class ArtifactYlactiveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactYlactiveCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactYlactiveCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactYlactiveCfgInfo;
		public static getFirstInfo():cfg.ArtifactYlactiveCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  进度 */
		public static getStageByIndex(value:number):number;
		 /**  需要成就ID */
		public static getNeedAchieveIDByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_artifact.xls】 ----> artifact
	class ArtifactBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ArtifactCfgInfo>;
			public static setup(dataArr:Array<cfg.ArtifactCfgInfo>):void;
		public static getInfo(value:number):cfg.ArtifactCfgInfo;
		public static getFirstInfo():cfg.ArtifactCfgInfo;
		 /**  id */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  技能ID */
		public static getSkillIDByID(value:number):number;
		 /**  技能描述 */
		public static getDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> battle_type
	class BattleTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleTypeCfgInfo;
		public static getFirstInfo():cfg.BattleTypeCfgInfo;
		 /**  类型 */
		public static getAttrTypeByAttrType(value:number):number;
		 /**  名称 */
		public static getNameByAttrType(value:number):string;
		 /**  战斗背景 */
		public static getBattleSceneByAttrType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> battle
	class BattleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleCfgInfo;
		public static getFirstInfo():cfg.BattleCfgInfo;
		 /**  属性ID */
		public static getAttrTypeByAttrType(value:number):number;
		 /**  属性说明 */
		public static getDescByAttrType(value:number):string;
		 /**  加评分 */
		public static getAddScoreByAttrType(value:number):number;
		 /**  万分比加评分 */
		public static getRateAddScoreByAttrType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> battle
	class BattleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleCfgInfo;
		public static getFirstInfo():cfg.BattleCfgInfo;
		 /**  属性ID */
		public static getAttrTypeByAttrType(value:number):number;
		 /**  属性说明 */
		public static getDescByAttrType(value:number):string;
		 /**  加评分 */
		public static getAddScoreByAttrType(value:number):number;
		 /**  万分比加评分 */
		public static getRateAddScoreByAttrType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> formation_attr
	class BattleFormationAttrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleFormationAttrCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleFormationAttrCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleFormationAttrCfgInfo;
		public static getFirstInfo():cfg.BattleFormationAttrCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  伙伴类型 */
		public static getPetTypeByID(value:number):number;
		 /**  类型个数 */
		public static getTypeCountByID(value:number):number;
		 /**  属性加成属性类型|万分比; */
		public static getAddAttrByID(value:number):string;
		 /**  阵型名称 */
		public static getTypeNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> type_restrain
	class BattleTypeRestrainBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleTypeRestrainCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleTypeRestrainCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleTypeRestrainCfgInfo;
		public static getFirstInfo():cfg.BattleTypeRestrainCfgInfo;
		 /**  攻击方1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getAttackTypeByAttackType(value:number):number;
		 /**  防御方1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getDefenseTypeByAttackType(value:number):number;
		 /**  伤害加成万分比 */
		public static getDamageRateByAttackType(value:number):number;
		 /**  命中加成分比 */
		public static getHitRateByAttackType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> battle
	class BattleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleCfgInfo;
		public static getFirstInfo():cfg.BattleCfgInfo;
		 /**  属性ID */
		public static getAttrTypeByAttrType(value:number):number;
		 /**  属性说明 */
		public static getDescByAttrType(value:number):string;
		 /**  加评分 */
		public static getAddScoreByAttrType(value:number):number;
		 /**  万分比加评分 */
		public static getRateAddScoreByAttrType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> type_restrain
	class BattleTypeRestrainBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleTypeRestrainCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleTypeRestrainCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleTypeRestrainCfgInfo;
		public static getFirstInfo():cfg.BattleTypeRestrainCfgInfo;
		 /**  攻击方1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getAttackTypeByAttackType(value:number):number;
		 /**  防御方1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getDefenseTypeByAttackType(value:number):number;
		 /**  伤害加成万分比 */
		public static getDamageRateByAttackType(value:number):number;
		 /**  命中加成分比 */
		public static getHitRateByAttackType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> battle_type
	class BattleTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleTypeCfgInfo;
		public static getFirstInfo():cfg.BattleTypeCfgInfo;
		 /**  类型 */
		public static getAttrTypeByAttrType(value:number):number;
		 /**  名称 */
		public static getNameByAttrType(value:number):string;
		 /**  战斗背景 */
		public static getBattleSceneByAttrType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> type_restrain
	class BattleTypeRestrainBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleTypeRestrainCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleTypeRestrainCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleTypeRestrainCfgInfo;
		public static getFirstInfo():cfg.BattleTypeRestrainCfgInfo;
		 /**  攻击方1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getAttackTypeByAttackType(value:number):number;
		 /**  防御方1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getDefenseTypeByAttackType(value:number):number;
		 /**  伤害加成万分比 */
		public static getDamageRateByAttackType(value:number):number;
		 /**  命中加成分比 */
		public static getHitRateByAttackType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> formation_attr
	class BattleFormationAttrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleFormationAttrCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleFormationAttrCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleFormationAttrCfgInfo;
		public static getFirstInfo():cfg.BattleFormationAttrCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  伙伴类型 */
		public static getPetTypeByID(value:number):number;
		 /**  类型个数 */
		public static getTypeCountByID(value:number):number;
		 /**  属性加成属性类型|万分比; */
		public static getAddAttrByID(value:number):string;
		 /**  阵型名称 */
		public static getTypeNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> battle_type
	class BattleTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleTypeCfgInfo;
		public static getFirstInfo():cfg.BattleTypeCfgInfo;
		 /**  类型 */
		public static getAttrTypeByAttrType(value:number):number;
		 /**  名称 */
		public static getNameByAttrType(value:number):string;
		 /**  战斗背景 */
		public static getBattleSceneByAttrType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_battle.xls】 ----> formation_attr
	class BattleFormationAttrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BattleFormationAttrCfgInfo>;
			public static setup(dataArr:Array<cfg.BattleFormationAttrCfgInfo>):void;
		public static getInfo(value:number):cfg.BattleFormationAttrCfgInfo;
		public static getFirstInfo():cfg.BattleFormationAttrCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  伙伴类型 */
		public static getPetTypeByID(value:number):number;
		 /**  类型个数 */
		public static getTypeCountByID(value:number):number;
		 /**  属性加成属性类型|万分比; */
		public static getAddAttrByID(value:number):string;
		 /**  阵型名称 */
		public static getTypeNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff_state
	class BuffNewBuffStateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffStateCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffStateCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffStateCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffStateCfgInfo;
		 /**  新状态 */
		public static getNewStateByNewState(value:number):number;
		 /**  删除老状态 */
		public static getDelOldStateByNewState(value:number):string;
		 /**  互斥状态 */
		public static getCanAddByNewState(value:number):string;
		 /**  名称 */
		public static getNameByNewState(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff_state
	class BuffNewBuffStateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffStateCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffStateCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffStateCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffStateCfgInfo;
		 /**  新状态 */
		public static getNewStateByNewState(value:number):number;
		 /**  删除老状态 */
		public static getDelOldStateByNewState(value:number):string;
		 /**  互斥状态 */
		public static getCanAddByNewState(value:number):string;
		 /**  名称 */
		public static getNameByNewState(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff_group
	class BuffNewBuffGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffGroupCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffGroupCfgInfo;
		 /**  新加的buff的groupID */
		public static getNewGroupByNewGroup(value:number):number;
		 /**  有影响的buff的GroupID */
		public static getOldGroupByNewGroup(value:number):number;
		 /**  互斥类型 1;//丢弃 2;//替换 */
		public static getRepeatTypeByNewGroup(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff
	class BuffNewBuffBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffCfgInfo;
		 /**  编号 */
		public static getIDByID(value:number):number;
		 /**  buff名称 */
		public static getBuffNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  buff类型_emBuffType 1;//加属性   属性类型_属性值(可为负数)_属性万分比(可为负数) 2;//加状态   状态ID _emBuffControlType 3;//持续加消耗  加消耗  消耗类型_消耗值(可为负数)_施法者属性ID_施法者属性万分比(可为负数) 4;//分担伤害   伤害万分比 5;//法术反噬   施法者属性ID_施法者属性万分比 6;//受物理攻击加buff 概率万分比_buffid 7;//增加治疗护盾  8;//增加护盾   属性ID_属性万分比_属性来源（0=目标，1=施法者） 9;//反弹伤害   伤害万分比 10;//偷取目标的属性 施法者属性ID_施法者属性万分比 11;//被攻击掉血  施法者属性ID_施法者属性万分比 12;//持续掉血   自己属性ID_自己属性万分比_最大自己属性ID_最大自己属性万分比 13;//抵挡伤害   次数 14;//buff删除掉血  消耗类型_消耗值(可为负数)_施法者属性ID_施法者属性万分比(可为负数) 15;//伤害限制   属性类型_属性万分比 16;//普攻选目标  _emSkillCondition_参数1 17;//攻击吸血   伤害万分比 18;//只和加buff的人分担伤害 伤害万分比 */
		public static getBuffTypeByID(value:number):number;
		 /**  buff参数配置 */
		public static getValueByID(value:number):string;
		 /**  增加状态_emBuffControlType1;//冰冻 无法行动2;//眩晕 无法行动3;//沉睡 无法行动4;//禁止复活 无法行动5;//嘲讽6;//虚弱_emBuffControlType7;//混乱状态8;//石化9;//离间10;//麻痹11;//封印12;//禁疗13;//免疫14;//流血15;//灼烧16;//中毒17;//破甲18;//减速19;//速度提升20;//格挡盾21;//法术反噬22;//海蛇庇护23;//持续恢复24;//治疗盾25;//护盾26;//烈焰灼烧27;//沉默28;//偷取攻击29;//魔化30;//森林印记31;//感电32;//诅咒33;//死亡印记34;//灵魂印记35;//怒气36;//免疫控制37;//免疫负面效果 */
		public static getAddStateByID(value:number):number;
		 /**  组cs_buff_group组ID_组等级 */
		public static getGroupByID(value:number):number;
		 /**  效果类型_emBuffEffectType 1;//正面 2;//负面 3;//负面完全可驱散（不检测Mark驱散标记） 4;//负面控制 */
		public static getEffectTypeByID(value:number):number;
		 /**  叠加规则_emBuffSameRepeatType1丢弃2替换3叠加回合 */
		public static getSameRepeatTypeByID(value:number):number;
		 /**  不同来源叠加规则_emBuffDiffRepeatType1;//丢弃2;//替换3;//共存 */
		public static getDiffRepeatTypeByID(value:number):number;
		 /**  持续回合数0表示永久Administrator:如果是战斗开始时被动释放，就需要增加1回合。 */
		public static getExistRoundByID(value:number):number;
		 /**  最大层数 */
		public static getMaxLayerByID(value:number):number;
		 /**  Mark（多选；隔开）_emBuffMark1,不可驱散2;//死亡是否不删除3;//死亡可以加 */
		public static getMarkByID(value:number):string;
		 /**  删除条件_emBuffDelCondition1;//被攻击 参数1:次数_概率万分比_次数_概率万分比2;//生效立即删除 */
		public static getDelConditionByID(value:number):string;
		 /**  删除触发_emBuffDelAction1;//源头使用技能 技能ID */
		public static getDelActionByID(value:number):string;
		 /**  buff图标 */
		public static getIconByID(value:number):string;
		 /**  buff特效id */
		public static getEffectIdByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff_group
	class BuffNewBuffGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffGroupCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffGroupCfgInfo;
		 /**  新加的buff的groupID */
		public static getNewGroupByNewGroup(value:number):number;
		 /**  有影响的buff的GroupID */
		public static getOldGroupByNewGroup(value:number):number;
		 /**  互斥类型 1;//丢弃 2;//替换 */
		public static getRepeatTypeByNewGroup(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff
	class BuffNewBuffBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffCfgInfo;
		 /**  编号 */
		public static getIDByID(value:number):number;
		 /**  buff名称 */
		public static getBuffNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  buff类型_emBuffType 1;//加属性   属性类型_属性值(可为负数)_属性万分比(可为负数) 2;//加状态   状态ID _emBuffControlType 3;//持续加消耗  加消耗  消耗类型_消耗值(可为负数)_施法者属性ID_施法者属性万分比(可为负数) 4;//分担伤害   伤害万分比 5;//法术反噬   施法者属性ID_施法者属性万分比 6;//受物理攻击加buff 概率万分比_buffid 7;//增加治疗护盾  8;//增加护盾   属性ID_属性万分比_属性来源（0=目标，1=施法者） 9;//反弹伤害   伤害万分比 10;//偷取目标的属性 施法者属性ID_施法者属性万分比 11;//被攻击掉血  施法者属性ID_施法者属性万分比 12;//持续掉血   自己属性ID_自己属性万分比_最大自己属性ID_最大自己属性万分比 13;//抵挡伤害   次数 14;//buff删除掉血  消耗类型_消耗值(可为负数)_施法者属性ID_施法者属性万分比(可为负数) 15;//伤害限制   属性类型_属性万分比 16;//普攻选目标  _emSkillCondition_参数1 17;//攻击吸血   伤害万分比 18;//只和加buff的人分担伤害 伤害万分比 */
		public static getBuffTypeByID(value:number):number;
		 /**  buff参数配置 */
		public static getValueByID(value:number):string;
		 /**  增加状态_emBuffControlType1;//冰冻 无法行动2;//眩晕 无法行动3;//沉睡 无法行动4;//禁止复活 无法行动5;//嘲讽6;//虚弱_emBuffControlType7;//混乱状态8;//石化9;//离间10;//麻痹11;//封印12;//禁疗13;//免疫14;//流血15;//灼烧16;//中毒17;//破甲18;//减速19;//速度提升20;//格挡盾21;//法术反噬22;//海蛇庇护23;//持续恢复24;//治疗盾25;//护盾26;//烈焰灼烧27;//沉默28;//偷取攻击29;//魔化30;//森林印记31;//感电32;//诅咒33;//死亡印记34;//灵魂印记35;//怒气36;//免疫控制37;//免疫负面效果 */
		public static getAddStateByID(value:number):number;
		 /**  组cs_buff_group组ID_组等级 */
		public static getGroupByID(value:number):number;
		 /**  效果类型_emBuffEffectType 1;//正面 2;//负面 3;//负面完全可驱散（不检测Mark驱散标记） 4;//负面控制 */
		public static getEffectTypeByID(value:number):number;
		 /**  叠加规则_emBuffSameRepeatType1丢弃2替换3叠加回合 */
		public static getSameRepeatTypeByID(value:number):number;
		 /**  不同来源叠加规则_emBuffDiffRepeatType1;//丢弃2;//替换3;//共存 */
		public static getDiffRepeatTypeByID(value:number):number;
		 /**  持续回合数0表示永久Administrator:如果是战斗开始时被动释放，就需要增加1回合。 */
		public static getExistRoundByID(value:number):number;
		 /**  最大层数 */
		public static getMaxLayerByID(value:number):number;
		 /**  Mark（多选；隔开）_emBuffMark1,不可驱散2;//死亡是否不删除3;//死亡可以加 */
		public static getMarkByID(value:number):string;
		 /**  删除条件_emBuffDelCondition1;//被攻击 参数1:次数_概率万分比_次数_概率万分比2;//生效立即删除 */
		public static getDelConditionByID(value:number):string;
		 /**  删除触发_emBuffDelAction1;//源头使用技能 技能ID */
		public static getDelActionByID(value:number):string;
		 /**  buff图标 */
		public static getIconByID(value:number):string;
		 /**  buff特效id */
		public static getEffectIdByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff_group
	class BuffNewBuffGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffGroupCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffGroupCfgInfo;
		 /**  新加的buff的groupID */
		public static getNewGroupByNewGroup(value:number):number;
		 /**  有影响的buff的GroupID */
		public static getOldGroupByNewGroup(value:number):number;
		 /**  互斥类型 1;//丢弃 2;//替换 */
		public static getRepeatTypeByNewGroup(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff
	class BuffNewBuffBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffCfgInfo;
		 /**  编号 */
		public static getIDByID(value:number):number;
		 /**  buff名称 */
		public static getBuffNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  buff类型_emBuffType 1;//加属性   属性类型_属性值(可为负数)_属性万分比(可为负数) 2;//加状态   状态ID _emBuffControlType 3;//持续加消耗  加消耗  消耗类型_消耗值(可为负数)_施法者属性ID_施法者属性万分比(可为负数) 4;//分担伤害   伤害万分比 5;//法术反噬   施法者属性ID_施法者属性万分比 6;//受物理攻击加buff 概率万分比_buffid 7;//增加治疗护盾  8;//增加护盾   属性ID_属性万分比_属性来源（0=目标，1=施法者） 9;//反弹伤害   伤害万分比 10;//偷取目标的属性 施法者属性ID_施法者属性万分比 11;//被攻击掉血  施法者属性ID_施法者属性万分比 12;//持续掉血   自己属性ID_自己属性万分比_最大自己属性ID_最大自己属性万分比 13;//抵挡伤害   次数 14;//buff删除掉血  消耗类型_消耗值(可为负数)_施法者属性ID_施法者属性万分比(可为负数) 15;//伤害限制   属性类型_属性万分比 16;//普攻选目标  _emSkillCondition_参数1 17;//攻击吸血   伤害万分比 18;//只和加buff的人分担伤害 伤害万分比 */
		public static getBuffTypeByID(value:number):number;
		 /**  buff参数配置 */
		public static getValueByID(value:number):string;
		 /**  增加状态_emBuffControlType1;//冰冻 无法行动2;//眩晕 无法行动3;//沉睡 无法行动4;//禁止复活 无法行动5;//嘲讽6;//虚弱_emBuffControlType7;//混乱状态8;//石化9;//离间10;//麻痹11;//封印12;//禁疗13;//免疫14;//流血15;//灼烧16;//中毒17;//破甲18;//减速19;//速度提升20;//格挡盾21;//法术反噬22;//海蛇庇护23;//持续恢复24;//治疗盾25;//护盾26;//烈焰灼烧27;//沉默28;//偷取攻击29;//魔化30;//森林印记31;//感电32;//诅咒33;//死亡印记34;//灵魂印记35;//怒气36;//免疫控制37;//免疫负面效果 */
		public static getAddStateByID(value:number):number;
		 /**  组cs_buff_group组ID_组等级 */
		public static getGroupByID(value:number):number;
		 /**  效果类型_emBuffEffectType 1;//正面 2;//负面 3;//负面完全可驱散（不检测Mark驱散标记） 4;//负面控制 */
		public static getEffectTypeByID(value:number):number;
		 /**  叠加规则_emBuffSameRepeatType1丢弃2替换3叠加回合 */
		public static getSameRepeatTypeByID(value:number):number;
		 /**  不同来源叠加规则_emBuffDiffRepeatType1;//丢弃2;//替换3;//共存 */
		public static getDiffRepeatTypeByID(value:number):number;
		 /**  持续回合数0表示永久Administrator:如果是战斗开始时被动释放，就需要增加1回合。 */
		public static getExistRoundByID(value:number):number;
		 /**  最大层数 */
		public static getMaxLayerByID(value:number):number;
		 /**  Mark（多选；隔开）_emBuffMark1,不可驱散2;//死亡是否不删除3;//死亡可以加 */
		public static getMarkByID(value:number):string;
		 /**  删除条件_emBuffDelCondition1;//被攻击 参数1:次数_概率万分比_次数_概率万分比2;//生效立即删除 */
		public static getDelConditionByID(value:number):string;
		 /**  删除触发_emBuffDelAction1;//源头使用技能 技能ID */
		public static getDelActionByID(value:number):string;
		 /**  buff图标 */
		public static getIconByID(value:number):string;
		 /**  buff特效id */
		public static getEffectIdByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_buff_new.xls】 ----> buff_state
	class BuffNewBuffStateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.BuffNewBuffStateCfgInfo>;
			public static setup(dataArr:Array<cfg.BuffNewBuffStateCfgInfo>):void;
		public static getInfo(value:number):cfg.BuffNewBuffStateCfgInfo;
		public static getFirstInfo():cfg.BuffNewBuffStateCfgInfo;
		 /**  新状态 */
		public static getNewStateByNewState(value:number):number;
		 /**  删除老状态 */
		public static getDelOldStateByNewState(value:number):string;
		 /**  互斥状态 */
		public static getCanAddByNewState(value:number):string;
		 /**  名称 */
		public static getNameByNewState(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> fail_prize
	class ChallengeFailPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeFailPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeFailPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeFailPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeFailPrizeCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRate(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> monster_new
	class ChallengeMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ChallengeMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> season_prize
	class ChallengeSeasonPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeSeasonPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeSeasonPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeSeasonPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeSeasonPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> monster_new
	class ChallengeMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ChallengeMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> win_prize
	class ChallengeWinPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeWinPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeWinPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeWinPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeWinPrizeCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRate(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> const_info
	class ChallengeConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeConstInfoCfgInfo;
		public static getFirstInfo():cfg.ChallengeConstInfoCfgInfo;
		 /**  初始积分 */
		public static getInitScoreByInitScore(value:number):number;
		 /**  重置积分比例百分比 */
		public static getResetScoreRateByInitScore(value:number):number;
		 /**  每日免费次数 */
		public static getDayFreeCountByInitScore(value:number):number;
		 /**  奖励时间 */
		public static getDailyPrizeTimeByInitScore(value:number):string;
		 /**  成功奖励道具 */
		public static getWinAddItemByInitScore(value:number):string;
		 /**  失败奖励道具 */
		public static getFailAddItemByInitScore(value:number):string;
		 /**  战斗跳过需要次数 */
		public static getSweepNeedCountByInitScore(value:number):number;
		 /**  赛季天数 */
		public static getSeasonDaysByInitScore(value:number):number;
		 /**  随机机器人最低积分 */
		public static getRandRobotScoreByInitScore(value:number):number;
		 /**  随机积分差 */
		public static getRandScoreRangeByInitScore(value:number):number;
		 /**  进入需要的道具ID */
		public static getEnterNeedItemIDByInitScore(value:number):number;
		 /**  点赞奖励 */
		public static getLikePrizeByInitScore(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> win_prize
	class ChallengeWinPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeWinPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeWinPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeWinPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeWinPrizeCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRate(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> const_info
	class ChallengeConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeConstInfoCfgInfo;
		public static getFirstInfo():cfg.ChallengeConstInfoCfgInfo;
		 /**  初始积分 */
		public static getInitScoreByInitScore(value:number):number;
		 /**  重置积分比例百分比 */
		public static getResetScoreRateByInitScore(value:number):number;
		 /**  每日免费次数 */
		public static getDayFreeCountByInitScore(value:number):number;
		 /**  奖励时间 */
		public static getDailyPrizeTimeByInitScore(value:number):string;
		 /**  成功奖励道具 */
		public static getWinAddItemByInitScore(value:number):string;
		 /**  失败奖励道具 */
		public static getFailAddItemByInitScore(value:number):string;
		 /**  战斗跳过需要次数 */
		public static getSweepNeedCountByInitScore(value:number):number;
		 /**  赛季天数 */
		public static getSeasonDaysByInitScore(value:number):number;
		 /**  随机机器人最低积分 */
		public static getRandRobotScoreByInitScore(value:number):number;
		 /**  随机积分差 */
		public static getRandScoreRangeByInitScore(value:number):number;
		 /**  进入需要的道具ID */
		public static getEnterNeedItemIDByInitScore(value:number):number;
		 /**  点赞奖励 */
		public static getLikePrizeByInitScore(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> robot
	class ChallengeRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeRobotCfgInfo;
		public static getFirstInfo():cfg.ChallengeRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> season_prize
	class ChallengeSeasonPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeSeasonPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeSeasonPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeSeasonPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeSeasonPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> week_prize
	class ChallengeWeekPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeWeekPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeWeekPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeWeekPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeWeekPrizeCfgInfo;
		 /**  奖励ID */
		public static getPrizeIDByPrizeID(value:number):number;
		 /**  需要挑战次数 */
		public static getNeedFightCountByPrizeID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByPrizeID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> const_info
	class ChallengeConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeConstInfoCfgInfo;
		public static getFirstInfo():cfg.ChallengeConstInfoCfgInfo;
		 /**  初始积分 */
		public static getInitScoreByInitScore(value:number):number;
		 /**  重置积分比例百分比 */
		public static getResetScoreRateByInitScore(value:number):number;
		 /**  每日免费次数 */
		public static getDayFreeCountByInitScore(value:number):number;
		 /**  奖励时间 */
		public static getDailyPrizeTimeByInitScore(value:number):string;
		 /**  成功奖励道具 */
		public static getWinAddItemByInitScore(value:number):string;
		 /**  失败奖励道具 */
		public static getFailAddItemByInitScore(value:number):string;
		 /**  战斗跳过需要次数 */
		public static getSweepNeedCountByInitScore(value:number):number;
		 /**  赛季天数 */
		public static getSeasonDaysByInitScore(value:number):number;
		 /**  随机机器人最低积分 */
		public static getRandRobotScoreByInitScore(value:number):number;
		 /**  随机积分差 */
		public static getRandScoreRangeByInitScore(value:number):number;
		 /**  进入需要的道具ID */
		public static getEnterNeedItemIDByInitScore(value:number):number;
		 /**  点赞奖励 */
		public static getLikePrizeByInitScore(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> win_prize
	class ChallengeWinPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeWinPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeWinPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeWinPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeWinPrizeCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRate(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> fail_prize
	class ChallengeFailPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeFailPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeFailPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeFailPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeFailPrizeCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRate(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> season_prize
	class ChallengeSeasonPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeSeasonPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeSeasonPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeSeasonPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeSeasonPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> week_prize
	class ChallengeWeekPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeWeekPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeWeekPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeWeekPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeWeekPrizeCfgInfo;
		 /**  奖励ID */
		public static getPrizeIDByPrizeID(value:number):number;
		 /**  需要挑战次数 */
		public static getNeedFightCountByPrizeID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByPrizeID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> monster_new
	class ChallengeMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ChallengeMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> fail_prize
	class ChallengeFailPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeFailPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeFailPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeFailPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeFailPrizeCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRate(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> week_prize
	class ChallengeWeekPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeWeekPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeWeekPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeWeekPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeWeekPrizeCfgInfo;
		 /**  奖励ID */
		public static getPrizeIDByPrizeID(value:number):number;
		 /**  需要挑战次数 */
		public static getNeedFightCountByPrizeID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByPrizeID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> robot
	class ChallengeRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeRobotCfgInfo;
		public static getFirstInfo():cfg.ChallengeRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> daily_prize
	class ChallengeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeDailyPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> robot
	class ChallengeRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeRobotCfgInfo;
		public static getFirstInfo():cfg.ChallengeRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> daily_prize
	class ChallengeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeDailyPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_challenge.xls】 ----> daily_prize
	class ChallengeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChallengeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChallengeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChallengeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.ChallengeDailyPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> const_info
	class ChampionConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionConstInfoCfgInfo;
		public static getFirstInfo():cfg.ChampionConstInfoCfgInfo;
		 /**  开启周期 */
		public static getCircleByCircle(value:number):number;
		 /**  开启天数 */
		public static getCircleDaysByCircle(value:number):string;
		 /**  匹配时间 */
		public static getMatchTimeByCircle(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByCircle(value:number):string;
		 /**  需要竞技场排名 */
		public static getNeedChallengeRankByCircle(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByCircle(value:number):number;
		 /**  准备时间 */
		public static getReadyTimeByCircle(value:number):number;
		 /**  竞猜时间 */
		public static getGuessTimeByCircle(value:number):number;
		 /**  战斗时长 */
		public static getFightTimeByCircle(value:number):number;
		 /**  初始赔率 */
		public static getInitOddsByCircle(value:number):number;
		 /**  初始赔率参数 */
		public static getInitOddsParamByCircle(value:number):number;
		 /**  最大赔率 */
		public static getMaxOddsByCircle(value:number):number;
		 /**  最小赔率 */
		public static getMinOddsByCircle(value:number):number;
		 /**  初始竞猜币 */
		public static getInitGuessCoinByCircle(value:number):number;
		 /**  弹幕需要道具 */
		public static getDanmuNeedItemByCircle(value:number):string;
		 /**  奖励预览 */
		public static getPrizePreviewByCircle(value:number):string;
		 /**  弹幕最大条数 */
		public static getMaxDanmuCountByCircle(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> top_prize
	class ChampionTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionTopPrizeCfgInfo;
		public static getFirstInfo():cfg.ChampionTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getRankByRank(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRank(value:number):string;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> round
	class ChampionRoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionRoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionRoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionRoundCfgInfo;
		public static getFirstInfo():cfg.ChampionRoundCfgInfo;
		 /**  回合 */
		public static getRoundIDByRoundID(value:number):number;
		 /**  名称 */
		public static getNameByRoundID(value:number):string;
		 /**  增加战斗积分 */
		public static getAddFightScoreByRoundID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> round
	class ChampionRoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionRoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionRoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionRoundCfgInfo;
		public static getFirstInfo():cfg.ChampionRoundCfgInfo;
		 /**  回合 */
		public static getRoundIDByRoundID(value:number):number;
		 /**  名称 */
		public static getNameByRoundID(value:number):string;
		 /**  增加战斗积分 */
		public static getAddFightScoreByRoundID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> const_info
	class ChampionConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionConstInfoCfgInfo;
		public static getFirstInfo():cfg.ChampionConstInfoCfgInfo;
		 /**  开启周期 */
		public static getCircleByCircle(value:number):number;
		 /**  开启天数 */
		public static getCircleDaysByCircle(value:number):string;
		 /**  匹配时间 */
		public static getMatchTimeByCircle(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByCircle(value:number):string;
		 /**  需要竞技场排名 */
		public static getNeedChallengeRankByCircle(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByCircle(value:number):number;
		 /**  准备时间 */
		public static getReadyTimeByCircle(value:number):number;
		 /**  竞猜时间 */
		public static getGuessTimeByCircle(value:number):number;
		 /**  战斗时长 */
		public static getFightTimeByCircle(value:number):number;
		 /**  初始赔率 */
		public static getInitOddsByCircle(value:number):number;
		 /**  初始赔率参数 */
		public static getInitOddsParamByCircle(value:number):number;
		 /**  最大赔率 */
		public static getMaxOddsByCircle(value:number):number;
		 /**  最小赔率 */
		public static getMinOddsByCircle(value:number):number;
		 /**  初始竞猜币 */
		public static getInitGuessCoinByCircle(value:number):number;
		 /**  弹幕需要道具 */
		public static getDanmuNeedItemByCircle(value:number):string;
		 /**  奖励预览 */
		public static getPrizePreviewByCircle(value:number):string;
		 /**  弹幕最大条数 */
		public static getMaxDanmuCountByCircle(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> round
	class ChampionRoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionRoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionRoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionRoundCfgInfo;
		public static getFirstInfo():cfg.ChampionRoundCfgInfo;
		 /**  回合 */
		public static getRoundIDByRoundID(value:number):number;
		 /**  名称 */
		public static getNameByRoundID(value:number):string;
		 /**  增加战斗积分 */
		public static getAddFightScoreByRoundID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> top_prize
	class ChampionTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionTopPrizeCfgInfo;
		public static getFirstInfo():cfg.ChampionTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getRankByRank(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRank(value:number):string;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> const_info
	class ChampionConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionConstInfoCfgInfo;
		public static getFirstInfo():cfg.ChampionConstInfoCfgInfo;
		 /**  开启周期 */
		public static getCircleByCircle(value:number):number;
		 /**  开启天数 */
		public static getCircleDaysByCircle(value:number):string;
		 /**  匹配时间 */
		public static getMatchTimeByCircle(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByCircle(value:number):string;
		 /**  需要竞技场排名 */
		public static getNeedChallengeRankByCircle(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByCircle(value:number):number;
		 /**  准备时间 */
		public static getReadyTimeByCircle(value:number):number;
		 /**  竞猜时间 */
		public static getGuessTimeByCircle(value:number):number;
		 /**  战斗时长 */
		public static getFightTimeByCircle(value:number):number;
		 /**  初始赔率 */
		public static getInitOddsByCircle(value:number):number;
		 /**  初始赔率参数 */
		public static getInitOddsParamByCircle(value:number):number;
		 /**  最大赔率 */
		public static getMaxOddsByCircle(value:number):number;
		 /**  最小赔率 */
		public static getMinOddsByCircle(value:number):number;
		 /**  初始竞猜币 */
		public static getInitGuessCoinByCircle(value:number):number;
		 /**  弹幕需要道具 */
		public static getDanmuNeedItemByCircle(value:number):string;
		 /**  奖励预览 */
		public static getPrizePreviewByCircle(value:number):string;
		 /**  弹幕最大条数 */
		public static getMaxDanmuCountByCircle(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_champion.xls】 ----> top_prize
	class ChampionTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChampionTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChampionTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChampionTopPrizeCfgInfo;
		public static getFirstInfo():cfg.ChampionTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getRankByRank(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRank(value:number):string;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_charge.xls】 ----> charge
	class ChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChargeCfgInfo;
		public static getFirstInfo():cfg.ChargeCfgInfo;
		 /**  商品ID */
		public static getIDByID(value:number):number;
		 /**  商品名称（必填字段） */
		public static getNameByID(value:number):string;
		 /**  平台类型_emPlatformType */
		public static getPlatTypeByID(value:number):number;
		 /**  购买的类型 */
		public static getChargeTypeByID(value:number):number;
		 /**  子类型(根据不同的购买类型细分子类型) */
		public static getSonTypeByID(value:number):number;
		 /**  是否绝版 */
		public static getOutOfPrintByID(value:number):number;
		 /**  扩展参数 */
		public static getParamsByID(value:number):string;
		 /**  所需的人民币(分) */
		public static getNeedMoneyByID(value:number):number;
		 /**  限购次数(0不限购) */
		public static getMaxBuyCountByID(value:number):number;
		 /**  限购周期 */
		public static getLimitBuyPeriodByID(value:number):number;
		 /**  组ID */
		public static getGroupIDByID(value:number):number;
		 /**  分组前提条件 */
		public static getNeedPreConditionByID(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByID(value:number):string;
		 /**  循环开服天数 */
		public static getCircleServerDayByID(value:number):number;
		 /**  加道具 */
		public static getAddItemByID(value:number):string;
		 /**  首次额外赠送道具 */
		public static getFirstAddItemByID(value:number):string;
		 /**  非首次额外赠送道具 */
		public static getExtraAddItemByID(value:number):string;
		 /**  是否广播 */
		public static getBroadCastByID(value:number):number;
		 /**  商品描述 */
		public static getDescByID(value:number):string;
		 /**  内购项ID */
		public static getAppidByID(value:number):string;
		 /**  联运内购项ID */
		public static getAppid3ByID(value:number):string;
		 /**  联运内购项ID2 */
		public static getAppid2122044ByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_charge.xls】 ----> charge
	class ChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChargeCfgInfo;
		public static getFirstInfo():cfg.ChargeCfgInfo;
		 /**  商品ID */
		public static getIDByID(value:number):number;
		 /**  商品名称（必填字段） */
		public static getNameByID(value:number):string;
		 /**  平台类型_emPlatformType */
		public static getPlatTypeByID(value:number):number;
		 /**  购买的类型 */
		public static getChargeTypeByID(value:number):number;
		 /**  子类型(根据不同的购买类型细分子类型) */
		public static getSonTypeByID(value:number):number;
		 /**  是否绝版 */
		public static getOutOfPrintByID(value:number):number;
		 /**  扩展参数 */
		public static getParamsByID(value:number):string;
		 /**  所需的人民币(分) */
		public static getNeedMoneyByID(value:number):number;
		 /**  限购次数(0不限购) */
		public static getMaxBuyCountByID(value:number):number;
		 /**  限购周期 */
		public static getLimitBuyPeriodByID(value:number):number;
		 /**  组ID */
		public static getGroupIDByID(value:number):number;
		 /**  分组前提条件 */
		public static getNeedPreConditionByID(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByID(value:number):string;
		 /**  循环开服天数 */
		public static getCircleServerDayByID(value:number):number;
		 /**  加道具 */
		public static getAddItemByID(value:number):string;
		 /**  首次额外赠送道具 */
		public static getFirstAddItemByID(value:number):string;
		 /**  非首次额外赠送道具 */
		public static getExtraAddItemByID(value:number):string;
		 /**  是否广播 */
		public static getBroadCastByID(value:number):number;
		 /**  商品描述 */
		public static getDescByID(value:number):string;
		 /**  内购项ID */
		public static getAppidByID(value:number):string;
		 /**  联运内购项ID */
		public static getAppid3ByID(value:number):string;
		 /**  联运内购项ID2 */
		public static getAppid2122044ByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_charge.xls】 ----> charge
	class ChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.ChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.ChargeCfgInfo;
		public static getFirstInfo():cfg.ChargeCfgInfo;
		 /**  商品ID */
		public static getIDByID(value:number):number;
		 /**  商品名称（必填字段） */
		public static getNameByID(value:number):string;
		 /**  平台类型_emPlatformType */
		public static getPlatTypeByID(value:number):number;
		 /**  购买的类型 */
		public static getChargeTypeByID(value:number):number;
		 /**  子类型(根据不同的购买类型细分子类型) */
		public static getSonTypeByID(value:number):number;
		 /**  是否绝版 */
		public static getOutOfPrintByID(value:number):number;
		 /**  扩展参数 */
		public static getParamsByID(value:number):string;
		 /**  所需的人民币(分) */
		public static getNeedMoneyByID(value:number):number;
		 /**  限购次数(0不限购) */
		public static getMaxBuyCountByID(value:number):number;
		 /**  限购周期 */
		public static getLimitBuyPeriodByID(value:number):number;
		 /**  组ID */
		public static getGroupIDByID(value:number):number;
		 /**  分组前提条件 */
		public static getNeedPreConditionByID(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByID(value:number):string;
		 /**  循环开服天数 */
		public static getCircleServerDayByID(value:number):number;
		 /**  加道具 */
		public static getAddItemByID(value:number):string;
		 /**  首次额外赠送道具 */
		public static getFirstAddItemByID(value:number):string;
		 /**  非首次额外赠送道具 */
		public static getExtraAddItemByID(value:number):string;
		 /**  是否广播 */
		public static getBroadCastByID(value:number):number;
		 /**  商品描述 */
		public static getDescByID(value:number):string;
		 /**  内购项ID */
		public static getAppidByID(value:number):string;
		 /**  联运内购项ID */
		public static getAppid3ByID(value:number):string;
		 /**  联运内购项ID2 */
		public static getAppid2122044ByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> chat
	class CommonChatBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonChatCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonChatCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonChatCfgInfo;
		public static getFirstInfo():cfg.CommonChatCfgInfo;
		 /**  Channel_emBroadcast_Channel */
		public static getChannelByChannel(value:number):number;
		 /**  名称 */
		public static getNameByChannel(value:number):string;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByChannel(value:number):number;
		 /**  聊天间隔 */
		public static getStepSecondByChannel(value:number):number;
		 /**  缓存数量 */
		public static getSaveCountByChannel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> support
	class CommonSupportBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonSupportCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonSupportCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonSupportCfgInfo;
		public static getFirstInfo():cfg.CommonSupportCfgInfo;
		 /**  支援类型 */
		public static getTypeByType(value:number):number;
		 /**  可派遣个数 */
		public static getSendCountByType(value:number):number;
		 /**  可雇佣个数 */
		public static getHireCountByType(value:number):number;
		 /**  单场战斗最大上场个数 */
		public static getFightCountByType(value:number):number;
		 /**  最大战力区间 */
		public static getMaxPowerByType(value:number):number;
		 /**  是否可重复上场 */
		public static getCanUseAgainByType(value:number):number;
		 /**  是否可解雇 */
		public static getCanFireByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> chat
	class CommonChatBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonChatCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonChatCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonChatCfgInfo;
		public static getFirstInfo():cfg.CommonChatCfgInfo;
		 /**  Channel_emBroadcast_Channel */
		public static getChannelByChannel(value:number):number;
		 /**  名称 */
		public static getNameByChannel(value:number):string;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByChannel(value:number):number;
		 /**  聊天间隔 */
		public static getStepSecondByChannel(value:number):number;
		 /**  缓存数量 */
		public static getSaveCountByChannel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> invite_prize
	class CommonInvitePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonInvitePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonInvitePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonInvitePrizeCfgInfo;
		public static getFirstInfo():cfg.CommonInvitePrizeCfgInfo;
		 /**  成就ID */
		public static getAchieveIDByAchieveID(value:number):number;
		 /**  奖励 */
		public static getAddItemByAchieveID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> invite_prize
	class CommonInvitePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonInvitePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonInvitePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonInvitePrizeCfgInfo;
		public static getFirstInfo():cfg.CommonInvitePrizeCfgInfo;
		 /**  成就ID */
		public static getAchieveIDByAchieveID(value:number):number;
		 /**  奖励 */
		public static getAddItemByAchieveID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> survey_constants
	class CommonSurveyConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonSurveyConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonSurveyConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonSurveyConstantsCfgInfo;
		public static getFirstInfo():cfg.CommonSurveyConstantsCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  推送开关 */
		public static getIndPushSwitchexByIndex(value:number):number;
		 /**  推送顺序 */
		public static getIndPuShorderByIndex(value:number):number;
		 /**  推送时间类型 */
		public static getPushTimeTybeByIndex(value:number):number;
		 /**  活动时间（开服前n天） */
		public static getOpenDaysByIndex(value:number):number;
		 /**  推送时间 */
		public static getPushtimeByIndex(value:number):string;
		 /**  推送渠道 */
		public static getPushChannelByIndex(value:number):string;
		 /**  答题获得的奖励 */
		public static getPrizeByIndex(value:number):string;
		 /**  幸运奖励预览 */
		public static getLuckyPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> support
	class CommonSupportBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonSupportCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonSupportCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonSupportCfgInfo;
		public static getFirstInfo():cfg.CommonSupportCfgInfo;
		 /**  支援类型 */
		public static getTypeByType(value:number):number;
		 /**  可派遣个数 */
		public static getSendCountByType(value:number):number;
		 /**  可雇佣个数 */
		public static getHireCountByType(value:number):number;
		 /**  单场战斗最大上场个数 */
		public static getFightCountByType(value:number):number;
		 /**  最大战力区间 */
		public static getMaxPowerByType(value:number):number;
		 /**  是否可重复上场 */
		public static getCanUseAgainByType(value:number):number;
		 /**  是否可解雇 */
		public static getCanFireByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> survey_constants
	class CommonSurveyConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonSurveyConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonSurveyConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonSurveyConstantsCfgInfo;
		public static getFirstInfo():cfg.CommonSurveyConstantsCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  推送开关 */
		public static getIndPushSwitchexByIndex(value:number):number;
		 /**  推送顺序 */
		public static getIndPuShorderByIndex(value:number):number;
		 /**  推送时间类型 */
		public static getPushTimeTybeByIndex(value:number):number;
		 /**  活动时间（开服前n天） */
		public static getOpenDaysByIndex(value:number):number;
		 /**  推送时间 */
		public static getPushtimeByIndex(value:number):string;
		 /**  推送渠道 */
		public static getPushChannelByIndex(value:number):string;
		 /**  答题获得的奖励 */
		public static getPrizeByIndex(value:number):string;
		 /**  幸运奖励预览 */
		public static getLuckyPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> invite_prize
	class CommonInvitePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonInvitePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonInvitePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonInvitePrizeCfgInfo;
		public static getFirstInfo():cfg.CommonInvitePrizeCfgInfo;
		 /**  成就ID */
		public static getAchieveIDByAchieveID(value:number):number;
		 /**  奖励 */
		public static getAddItemByAchieveID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> chat
	class CommonChatBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonChatCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonChatCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonChatCfgInfo;
		public static getFirstInfo():cfg.CommonChatCfgInfo;
		 /**  Channel_emBroadcast_Channel */
		public static getChannelByChannel(value:number):number;
		 /**  名称 */
		public static getNameByChannel(value:number):string;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByChannel(value:number):number;
		 /**  聊天间隔 */
		public static getStepSecondByChannel(value:number):number;
		 /**  缓存数量 */
		public static getSaveCountByChannel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> survey_constants
	class CommonSurveyConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonSurveyConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonSurveyConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonSurveyConstantsCfgInfo;
		public static getFirstInfo():cfg.CommonSurveyConstantsCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  推送开关 */
		public static getIndPushSwitchexByIndex(value:number):number;
		 /**  推送顺序 */
		public static getIndPuShorderByIndex(value:number):number;
		 /**  推送时间类型 */
		public static getPushTimeTybeByIndex(value:number):number;
		 /**  活动时间（开服前n天） */
		public static getOpenDaysByIndex(value:number):number;
		 /**  推送时间 */
		public static getPushtimeByIndex(value:number):string;
		 /**  推送渠道 */
		public static getPushChannelByIndex(value:number):string;
		 /**  答题获得的奖励 */
		public static getPrizeByIndex(value:number):string;
		 /**  幸运奖励预览 */
		public static getLuckyPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_common.xls】 ----> support
	class CommonSupportBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CommonSupportCfgInfo>;
			public static setup(dataArr:Array<cfg.CommonSupportCfgInfo>):void;
		public static getInfo(value:number):cfg.CommonSupportCfgInfo;
		public static getFirstInfo():cfg.CommonSupportCfgInfo;
		 /**  支援类型 */
		public static getTypeByType(value:number):number;
		 /**  可派遣个数 */
		public static getSendCountByType(value:number):number;
		 /**  可雇佣个数 */
		public static getHireCountByType(value:number):number;
		 /**  单场战斗最大上场个数 */
		public static getFightCountByType(value:number):number;
		 /**  最大战力区间 */
		public static getMaxPowerByType(value:number):number;
		 /**  是否可重复上场 */
		public static getCanUseAgainByType(value:number):number;
		 /**  是否可解雇 */
		public static getCanFireByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> player_rank
	class CompensatePlayerRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensatePlayerRankCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensatePlayerRankCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensatePlayerRankCfgInfo;
		public static getFirstInfo():cfg.CompensatePlayerRankCfgInfo;
		 /**  区服ID */
		public static getWorldIDByWorldID(value:number):number;
		 /**  账号ID */
		public static getAccountIDByWorldID(value:number):number;
		 /**  角色ID */
		public static getPlayerIDByWorldID(value:number):number;
		 /**  初始战力值 */
		public static getPowValueByWorldID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> Item_exchange
	class CompensateItemExchangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateItemExchangeCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateItemExchangeCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateItemExchangeCfgInfo;
		public static getFirstInfo():cfg.CompensateItemExchangeCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  邮件类型 */
		public static getEmailTypeByActivityID(value:number):number;
		 /**  物品ID */
		public static getItemIDByActivityID(value:number):number;
		 /**  兑换成物品 */
		public static getToItemByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> addpet_compensate
	class CompensateAddpetCompensateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateAddpetCompensateCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateAddpetCompensateCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateAddpetCompensateCfgInfo;
		public static getFirstInfo():cfg.CompensateAddpetCompensateCfgInfo;
		 /**  精灵id */
		public static getIDByID(value:number):number;
		 /**  进化道具数量 */
		public static getEvolveItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> player_rank
	class CompensatePlayerRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensatePlayerRankCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensatePlayerRankCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensatePlayerRankCfgInfo;
		public static getFirstInfo():cfg.CompensatePlayerRankCfgInfo;
		 /**  区服ID */
		public static getWorldIDByWorldID(value:number):number;
		 /**  账号ID */
		public static getAccountIDByWorldID(value:number):number;
		 /**  角色ID */
		public static getPlayerIDByWorldID(value:number):number;
		 /**  初始战力值 */
		public static getPowValueByWorldID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> Item_exchange
	class CompensateItemExchangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateItemExchangeCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateItemExchangeCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateItemExchangeCfgInfo;
		public static getFirstInfo():cfg.CompensateItemExchangeCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  邮件类型 */
		public static getEmailTypeByActivityID(value:number):number;
		 /**  物品ID */
		public static getItemIDByActivityID(value:number):number;
		 /**  兑换成物品 */
		public static getToItemByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> pet_compensate
	class CompensatePetCompensateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensatePetCompensateCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensatePetCompensateCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensatePetCompensateCfgInfo;
		public static getFirstInfo():cfg.CompensatePetCompensateCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  精灵id */
		public static getIDByIndex(value:number):number;
		 /**  星级 */
		public static getRankByIndex(value:number):number;
		 /**  返还本体id */
		public static getAddItemByIndex(value:number):string;
		 /**  返还超级百变怪数量 */
		public static getItemListByIndex(value:number):string;
		 /**  重生道具数量 */
		public static getBaseItemByIndex(value:number):string;
		 /**  进化道具数量 */
		public static getEvolveItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> Item_exchange
	class CompensateItemExchangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateItemExchangeCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateItemExchangeCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateItemExchangeCfgInfo;
		public static getFirstInfo():cfg.CompensateItemExchangeCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  邮件类型 */
		public static getEmailTypeByActivityID(value:number):number;
		 /**  物品ID */
		public static getItemIDByActivityID(value:number):number;
		 /**  兑换成物品 */
		public static getToItemByActivityID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> player_rank
	class CompensatePlayerRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensatePlayerRankCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensatePlayerRankCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensatePlayerRankCfgInfo;
		public static getFirstInfo():cfg.CompensatePlayerRankCfgInfo;
		 /**  区服ID */
		public static getWorldIDByWorldID(value:number):number;
		 /**  账号ID */
		public static getAccountIDByWorldID(value:number):number;
		 /**  角色ID */
		public static getPlayerIDByWorldID(value:number):number;
		 /**  初始战力值 */
		public static getPowValueByWorldID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> addpet_compensate
	class CompensateAddpetCompensateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateAddpetCompensateCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateAddpetCompensateCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateAddpetCompensateCfgInfo;
		public static getFirstInfo():cfg.CompensateAddpetCompensateCfgInfo;
		 /**  精灵id */
		public static getIDByID(value:number):number;
		 /**  进化道具数量 */
		public static getEvolveItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> mail
	class CompensateMailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateMailCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateMailCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateMailCfgInfo;
		public static getFirstInfo():cfg.CompensateMailCfgInfo;
		 /**  邮件类型 */
		public static getMailTypeByMailType(value:number):number;
		 /**  有效天数 */
		public static getExpireDayByMailType(value:number):number;
		 /**  邮件标题 */
		public static getMailTitleByMailType(value:number):string;
		 /**  消息展示内容 */
		public static getContentByMailType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> pet_compensate
	class CompensatePetCompensateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensatePetCompensateCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensatePetCompensateCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensatePetCompensateCfgInfo;
		public static getFirstInfo():cfg.CompensatePetCompensateCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  精灵id */
		public static getIDByIndex(value:number):number;
		 /**  星级 */
		public static getRankByIndex(value:number):number;
		 /**  返还本体id */
		public static getAddItemByIndex(value:number):string;
		 /**  返还超级百变怪数量 */
		public static getItemListByIndex(value:number):string;
		 /**  重生道具数量 */
		public static getBaseItemByIndex(value:number):string;
		 /**  进化道具数量 */
		public static getEvolveItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> mail
	class CompensateMailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateMailCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateMailCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateMailCfgInfo;
		public static getFirstInfo():cfg.CompensateMailCfgInfo;
		 /**  邮件类型 */
		public static getMailTypeByMailType(value:number):number;
		 /**  有效天数 */
		public static getExpireDayByMailType(value:number):number;
		 /**  邮件标题 */
		public static getMailTitleByMailType(value:number):string;
		 /**  消息展示内容 */
		public static getContentByMailType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> addpet_compensate
	class CompensateAddpetCompensateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateAddpetCompensateCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateAddpetCompensateCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateAddpetCompensateCfgInfo;
		public static getFirstInfo():cfg.CompensateAddpetCompensateCfgInfo;
		 /**  精灵id */
		public static getIDByID(value:number):number;
		 /**  进化道具数量 */
		public static getEvolveItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> pet_compensate
	class CompensatePetCompensateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensatePetCompensateCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensatePetCompensateCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensatePetCompensateCfgInfo;
		public static getFirstInfo():cfg.CompensatePetCompensateCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  精灵id */
		public static getIDByIndex(value:number):number;
		 /**  星级 */
		public static getRankByIndex(value:number):number;
		 /**  返还本体id */
		public static getAddItemByIndex(value:number):string;
		 /**  返还超级百变怪数量 */
		public static getItemListByIndex(value:number):string;
		 /**  重生道具数量 */
		public static getBaseItemByIndex(value:number):string;
		 /**  进化道具数量 */
		public static getEvolveItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_compensate.xls】 ----> mail
	class CompensateMailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CompensateMailCfgInfo>;
			public static setup(dataArr:Array<cfg.CompensateMailCfgInfo>):void;
		public static getInfo(value:number):cfg.CompensateMailCfgInfo;
		public static getFirstInfo():cfg.CompensateMailCfgInfo;
		 /**  邮件类型 */
		public static getMailTypeByMailType(value:number):number;
		 /**  有效天数 */
		public static getExpireDayByMailType(value:number):number;
		 /**  邮件标题 */
		public static getMailTitleByMailType(value:number):string;
		 /**  消息展示内容 */
		public static getContentByMailType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> GamesPrizePreview
	class ConstantGamesPrizePreviewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantGamesPrizePreviewCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantGamesPrizePreviewCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantGamesPrizePreviewCfgInfo;
		public static getFirstInfo():cfg.ConstantGamesPrizePreviewCfgInfo;
		 /**  枚举值 */
		public static getIdById(value:number):number;
		 /**  道具id列表 */
		public static getValueById(value:number):string;
		 /**  功能开关Id */
		public static getSystemSwitchIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> GamesPrizePreview
	class ConstantGamesPrizePreviewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantGamesPrizePreviewCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantGamesPrizePreviewCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantGamesPrizePreviewCfgInfo;
		public static getFirstInfo():cfg.ConstantGamesPrizePreviewCfgInfo;
		 /**  枚举值 */
		public static getIdById(value:number):number;
		 /**  道具id列表 */
		public static getValueById(value:number):string;
		 /**  功能开关Id */
		public static getSystemSwitchIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> Constant
	class ConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantCfgInfo;
		public static getFirstInfo():cfg.ConstantCfgInfo;
		 /**  唯一索引 */
		public static getIndexByIndex(value:number):number;
		 /**  系统类型 */
		public static getTypeIndexByIndex(value:number):number;
		 /**  枚举类型 */
		public static getEnumIndexByIndex(value:number):number;
		 /**  枚举值 */
		public static getConstantValueByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> ClientConstant
	class ConstantClientConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantClientConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantClientConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantClientConstantCfgInfo;
		public static getFirstInfo():cfg.ConstantClientConstantCfgInfo;
		 /**  枚举值 */
		public static getEnumIndexByEnumIndex(value:number):number;
		 /**  默认值 */
		public static getConstantValueByEnumIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> Constant
	class ConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantCfgInfo;
		public static getFirstInfo():cfg.ConstantCfgInfo;
		 /**  唯一索引 */
		public static getIndexByIndex(value:number):number;
		 /**  系统类型 */
		public static getTypeIndexByIndex(value:number):number;
		 /**  枚举类型 */
		public static getEnumIndexByIndex(value:number):number;
		 /**  枚举值 */
		public static getConstantValueByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> ClientConstant
	class ConstantClientConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantClientConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantClientConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantClientConstantCfgInfo;
		public static getFirstInfo():cfg.ConstantClientConstantCfgInfo;
		 /**  枚举值 */
		public static getEnumIndexByEnumIndex(value:number):number;
		 /**  默认值 */
		public static getConstantValueByEnumIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> GamesPrizePreview
	class ConstantGamesPrizePreviewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantGamesPrizePreviewCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantGamesPrizePreviewCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantGamesPrizePreviewCfgInfo;
		public static getFirstInfo():cfg.ConstantGamesPrizePreviewCfgInfo;
		 /**  枚举值 */
		public static getIdById(value:number):number;
		 /**  道具id列表 */
		public static getValueById(value:number):string;
		 /**  功能开关Id */
		public static getSystemSwitchIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> ClientConstant
	class ConstantClientConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantClientConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantClientConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantClientConstantCfgInfo;
		public static getFirstInfo():cfg.ConstantClientConstantCfgInfo;
		 /**  枚举值 */
		public static getEnumIndexByEnumIndex(value:number):number;
		 /**  默认值 */
		public static getConstantValueByEnumIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_constant.xls】 ----> Constant
	class ConstantBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConstantCfgInfo>;
			public static setup(dataArr:Array<cfg.ConstantCfgInfo>):void;
		public static getInfo(value:number):cfg.ConstantCfgInfo;
		public static getFirstInfo():cfg.ConstantCfgInfo;
		 /**  唯一索引 */
		public static getIndexByIndex(value:number):number;
		 /**  系统类型 */
		public static getTypeIndexByIndex(value:number):number;
		 /**  枚举类型 */
		public static getEnumIndexByIndex(value:number):number;
		 /**  枚举值 */
		public static getConstantValueByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> attr
	class ConvenantAttrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantAttrCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantAttrCfgInfo>):void;
		public static getInfo(value:number):cfg.ConvenantAttrCfgInfo;
		public static getFirstInfo():cfg.ConvenantAttrCfgInfo;
		 /**  契约部位ID */
		public static getIDByID(value:number):number;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  属性加成,多个用逗号隔开 */
		public static getAttrByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> level
	class ConvenantLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.ConvenantLevelCfgInfo;
		public static getFirstInfo():cfg.ConvenantLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升到下级需要道具 */
		public static getNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> const
	class ConvenantConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantConstCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantConstCfgInfo>):void;
		public static getInfo(value:string):cfg.ConvenantConstCfgInfo;
		public static getFirstInfo():cfg.ConvenantConstCfgInfo;
		 /**  解锁需要道具 */
		public static getUnlockNeedItemByUnlockNeedItem(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> const
	class ConvenantConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantConstCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantConstCfgInfo>):void;
		public static getInfo(value:string):cfg.ConvenantConstCfgInfo;
		public static getFirstInfo():cfg.ConvenantConstCfgInfo;
		 /**  解锁需要道具 */
		public static getUnlockNeedItemByUnlockNeedItem(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> attr
	class ConvenantAttrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantAttrCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantAttrCfgInfo>):void;
		public static getInfo(value:number):cfg.ConvenantAttrCfgInfo;
		public static getFirstInfo():cfg.ConvenantAttrCfgInfo;
		 /**  契约部位ID */
		public static getIDByID(value:number):number;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  属性加成,多个用逗号隔开 */
		public static getAttrByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> attr
	class ConvenantAttrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantAttrCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantAttrCfgInfo>):void;
		public static getInfo(value:number):cfg.ConvenantAttrCfgInfo;
		public static getFirstInfo():cfg.ConvenantAttrCfgInfo;
		 /**  契约部位ID */
		public static getIDByID(value:number):number;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  属性加成,多个用逗号隔开 */
		public static getAttrByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> level
	class ConvenantLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.ConvenantLevelCfgInfo;
		public static getFirstInfo():cfg.ConvenantLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升到下级需要道具 */
		public static getNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> level
	class ConvenantLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.ConvenantLevelCfgInfo;
		public static getFirstInfo():cfg.ConvenantLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升到下级需要道具 */
		public static getNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_convenant.xls】 ----> const
	class ConvenantConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ConvenantConstCfgInfo>;
			public static setup(dataArr:Array<cfg.ConvenantConstCfgInfo>):void;
		public static getInfo(value:string):cfg.ConvenantConstCfgInfo;
		public static getFirstInfo():cfg.ConvenantConstCfgInfo;
		 /**  解锁需要道具 */
		public static getUnlockNeedItemByUnlockNeedItem(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_copymap.xls】 ----> monster_new
	class CopymapMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CopymapMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.CopymapMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.CopymapMonsterNewCfgInfo;
		public static getFirstInfo():cfg.CopymapMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_copymap.xls】 ----> copymap
	class CopymapBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CopymapCfgInfo>;
			public static setup(dataArr:Array<cfg.CopymapCfgInfo>):void;
		public static getInfo(value:number):cfg.CopymapCfgInfo;
		public static getFirstInfo():cfg.CopymapCfgInfo;
		 /**  副本ID */
		public static getIDByID(value:number):number;
		 /**  副本名称 */
		public static getNameByID(value:number):string;
		 /**  副本类型_emCopymapType */
		public static getTypeByID(value:number):number;
		 /**  副本子类型_emCopymapSubType */
		public static getSubTypeByID(value:number):number;
		 /**  需要玩家战力 */
		public static getNeedFightPowerByID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByID(value:number):number;
		 /**  副本日进入次数 */
		public static getDailyEnterCountByID(value:number):number;
		 /**  怪物数据Index */
		public static getMonsterByID(value:number):number;
		 /**  增加奖励 */
		public static getAddPrizeByID(value:number):string;
		 /**  扫荡需要的道具 */
		public static getSweepNeedItemByID(value:number):string;
		 /**  难易程度 */
		public static getNayiDuByID(value:number):number;
		 /**  难度序号0代表不显示，否则显示难度+序号 */
		public static getTypeIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_copymap.xls】 ----> copymap
	class CopymapBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CopymapCfgInfo>;
			public static setup(dataArr:Array<cfg.CopymapCfgInfo>):void;
		public static getInfo(value:number):cfg.CopymapCfgInfo;
		public static getFirstInfo():cfg.CopymapCfgInfo;
		 /**  副本ID */
		public static getIDByID(value:number):number;
		 /**  副本名称 */
		public static getNameByID(value:number):string;
		 /**  副本类型_emCopymapType */
		public static getTypeByID(value:number):number;
		 /**  副本子类型_emCopymapSubType */
		public static getSubTypeByID(value:number):number;
		 /**  需要玩家战力 */
		public static getNeedFightPowerByID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByID(value:number):number;
		 /**  副本日进入次数 */
		public static getDailyEnterCountByID(value:number):number;
		 /**  怪物数据Index */
		public static getMonsterByID(value:number):number;
		 /**  增加奖励 */
		public static getAddPrizeByID(value:number):string;
		 /**  扫荡需要的道具 */
		public static getSweepNeedItemByID(value:number):string;
		 /**  难易程度 */
		public static getNayiDuByID(value:number):number;
		 /**  难度序号0代表不显示，否则显示难度+序号 */
		public static getTypeIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_copymap.xls】 ----> copymap
	class CopymapBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CopymapCfgInfo>;
			public static setup(dataArr:Array<cfg.CopymapCfgInfo>):void;
		public static getInfo(value:number):cfg.CopymapCfgInfo;
		public static getFirstInfo():cfg.CopymapCfgInfo;
		 /**  副本ID */
		public static getIDByID(value:number):number;
		 /**  副本名称 */
		public static getNameByID(value:number):string;
		 /**  副本类型_emCopymapType */
		public static getTypeByID(value:number):number;
		 /**  副本子类型_emCopymapSubType */
		public static getSubTypeByID(value:number):number;
		 /**  需要玩家战力 */
		public static getNeedFightPowerByID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByID(value:number):number;
		 /**  副本日进入次数 */
		public static getDailyEnterCountByID(value:number):number;
		 /**  怪物数据Index */
		public static getMonsterByID(value:number):number;
		 /**  增加奖励 */
		public static getAddPrizeByID(value:number):string;
		 /**  扫荡需要的道具 */
		public static getSweepNeedItemByID(value:number):string;
		 /**  难易程度 */
		public static getNayiDuByID(value:number):number;
		 /**  难度序号0代表不显示，否则显示难度+序号 */
		public static getTypeIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_copymap.xls】 ----> monster_new
	class CopymapMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CopymapMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.CopymapMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.CopymapMonsterNewCfgInfo;
		public static getFirstInfo():cfg.CopymapMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_copymap.xls】 ----> monster_new
	class CopymapMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CopymapMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.CopymapMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.CopymapMonsterNewCfgInfo;
		public static getFirstInfo():cfg.CopymapMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> daily_prize
	class CrossChallengeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeDailyPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  次数 */
		public static getCountByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> robot
	class CrossChallengeRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeRobotCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> robot
	class CrossChallengeRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeRobotCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> lose_prize
	class CrossChallengeLosePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeLosePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeLosePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeLosePrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeLosePrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  购买需要物品 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> daily_prize
	class CrossChallengeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeDailyPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  次数 */
		public static getCountByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> constants
	class CrossChallengeConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeConstantsCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeConstantsCfgInfo;
		 /**  初始积分 */
		public static getInitScoreByInitScore(value:number):number;
		 /**  挑战消耗物品 */
		public static getNeedItemByInitScore(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByInitScore(value:number):string;
		 /**  膜拜获得物品 */
		public static getLikeAddItemByInitScore(value:number):string;
		 /**  可跳过战斗次数 */
		public static getSweepNeedCountByInitScore(value:number):number;
		 /**  赛季天数 */
		public static getSeasonDaysByInitScore(value:number):number;
		 /**  随机积分差 */
		public static getRandScoreRangeByInitScore(value:number):number;
		 /**  随机匹配次数 */
		public static getRandScoreCountByInitScore(value:number):number;
		 /**  战斗奖励个数 */
		public static getPrizeCountByInitScore(value:number):number;
		 /**  名次隐藏队伍 */
		public static getRankHideByInitScore(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> constants
	class CrossChallengeConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeConstantsCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeConstantsCfgInfo;
		 /**  初始积分 */
		public static getInitScoreByInitScore(value:number):number;
		 /**  挑战消耗物品 */
		public static getNeedItemByInitScore(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByInitScore(value:number):string;
		 /**  膜拜获得物品 */
		public static getLikeAddItemByInitScore(value:number):string;
		 /**  可跳过战斗次数 */
		public static getSweepNeedCountByInitScore(value:number):number;
		 /**  赛季天数 */
		public static getSeasonDaysByInitScore(value:number):number;
		 /**  随机积分差 */
		public static getRandScoreRangeByInitScore(value:number):number;
		 /**  随机匹配次数 */
		public static getRandScoreCountByInitScore(value:number):number;
		 /**  战斗奖励个数 */
		public static getPrizeCountByInitScore(value:number):number;
		 /**  名次隐藏队伍 */
		public static getRankHideByInitScore(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> win_prize
	class CrossChallengeWinPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeWinPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeWinPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeWinPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeWinPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  购买需要物品 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> robot
	class CrossChallengeRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeRobotCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> win_prize
	class CrossChallengeWinPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeWinPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeWinPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeWinPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeWinPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  购买需要物品 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> daily_prize
	class CrossChallengeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeDailyPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  次数 */
		public static getCountByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> top_prize
	class CrossChallengeTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeTopPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> monster_new
	class CrossChallengeMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeMonsterNewCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> top_prize
	class CrossChallengeTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeTopPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> monster_new
	class CrossChallengeMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeMonsterNewCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> constants
	class CrossChallengeConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeConstantsCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeConstantsCfgInfo;
		 /**  初始积分 */
		public static getInitScoreByInitScore(value:number):number;
		 /**  挑战消耗物品 */
		public static getNeedItemByInitScore(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByInitScore(value:number):string;
		 /**  膜拜获得物品 */
		public static getLikeAddItemByInitScore(value:number):string;
		 /**  可跳过战斗次数 */
		public static getSweepNeedCountByInitScore(value:number):number;
		 /**  赛季天数 */
		public static getSeasonDaysByInitScore(value:number):number;
		 /**  随机积分差 */
		public static getRandScoreRangeByInitScore(value:number):number;
		 /**  随机匹配次数 */
		public static getRandScoreCountByInitScore(value:number):number;
		 /**  战斗奖励个数 */
		public static getPrizeCountByInitScore(value:number):number;
		 /**  名次隐藏队伍 */
		public static getRankHideByInitScore(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> win_prize
	class CrossChallengeWinPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeWinPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeWinPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeWinPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeWinPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  购买需要物品 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> lose_prize
	class CrossChallengeLosePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeLosePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeLosePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeLosePrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeLosePrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  购买需要物品 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> top_prize
	class CrossChallengeTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeTopPrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> lose_prize
	class CrossChallengeLosePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeLosePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeLosePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeLosePrizeCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeLosePrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  购买需要物品 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_cross_challenge.xls】 ----> monster_new
	class CrossChallengeMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CrossChallengeMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.CrossChallengeMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.CrossChallengeMonsterNewCfgInfo;
		public static getFirstInfo():cfg.CrossChallengeMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_custom_gift.xls】 ----> customgift
	class CustomGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CustomGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.CustomGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.CustomGiftCfgInfo;
		public static getFirstInfo():cfg.CustomGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  充值ID */
		public static getChargeIdByIndex(value:number):number;
		 /**  道具数量 */
		public static getItemNumByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  定制池 */
		public static getCustomPoolByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_custom_gift.xls】 ----> giftpool
	class CustomGiftGiftpoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CustomGiftGiftpoolCfgInfo>;
			public static setup(dataArr:Array<cfg.CustomGiftGiftpoolCfgInfo>):void;
		public static getInfo(value:number):cfg.CustomGiftGiftpoolCfgInfo;
		public static getFirstInfo():cfg.CustomGiftGiftpoolCfgInfo;
		 /**  奖励序号 */
		public static getIndexByIndex(value:number):number;
		 /**  池子ID */
		public static getPoolIDByIndex(value:number):number;
		 /**  池子物品序号 */
		public static getPoolItemIndexByIndex(value:number):number;
		 /**  物品 */
		public static getItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_custom_gift.xls】 ----> giftpool
	class CustomGiftGiftpoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CustomGiftGiftpoolCfgInfo>;
			public static setup(dataArr:Array<cfg.CustomGiftGiftpoolCfgInfo>):void;
		public static getInfo(value:number):cfg.CustomGiftGiftpoolCfgInfo;
		public static getFirstInfo():cfg.CustomGiftGiftpoolCfgInfo;
		 /**  奖励序号 */
		public static getIndexByIndex(value:number):number;
		 /**  池子ID */
		public static getPoolIDByIndex(value:number):number;
		 /**  池子物品序号 */
		public static getPoolItemIndexByIndex(value:number):number;
		 /**  物品 */
		public static getItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_custom_gift.xls】 ----> customgift
	class CustomGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CustomGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.CustomGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.CustomGiftCfgInfo;
		public static getFirstInfo():cfg.CustomGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  充值ID */
		public static getChargeIdByIndex(value:number):number;
		 /**  道具数量 */
		public static getItemNumByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  定制池 */
		public static getCustomPoolByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_custom_gift.xls】 ----> customgift
	class CustomGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CustomGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.CustomGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.CustomGiftCfgInfo;
		public static getFirstInfo():cfg.CustomGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  活动ID */
		public static getActivityIDByIndex(value:number):number;
		 /**  充值ID */
		public static getChargeIdByIndex(value:number):number;
		 /**  道具数量 */
		public static getItemNumByIndex(value:number):string;
		 /**  限购数量 */
		public static getLimitNumByIndex(value:number):number;
		 /**  定制池 */
		public static getCustomPoolByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_custom_gift.xls】 ----> giftpool
	class CustomGiftGiftpoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.CustomGiftGiftpoolCfgInfo>;
			public static setup(dataArr:Array<cfg.CustomGiftGiftpoolCfgInfo>):void;
		public static getInfo(value:number):cfg.CustomGiftGiftpoolCfgInfo;
		public static getFirstInfo():cfg.CustomGiftGiftpoolCfgInfo;
		 /**  奖励序号 */
		public static getIndexByIndex(value:number):number;
		 /**  池子ID */
		public static getPoolIDByIndex(value:number):number;
		 /**  池子物品序号 */
		public static getPoolItemIndexByIndex(value:number):number;
		 /**  物品 */
		public static getItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> top_prize
	class DanTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanTopPrizeCfgInfo;
		public static getFirstInfo():cfg.DanTopPrizeCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;
		 /**  需要段位ID */
		public static getNeedDanIDByRank(value:number):number;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> area
	class DanAreaBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanAreaCfgInfo>;
			public static setup(dataArr:Array<cfg.DanAreaCfgInfo>):void;
		public static getInfo(value:number):cfg.DanAreaCfgInfo;
		public static getFirstInfo():cfg.DanAreaCfgInfo;
		 /**  区域ID */
		public static getIDByID(value:number):number;
		 /**  区域名称 */
		public static getAreaNameByID(value:number):string;
		 /**  区域图标id */
		public static getIconIdByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> fight_prize
	class DanFightPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanFightPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanFightPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanFightPrizeCfgInfo;
		public static getFirstInfo():cfg.DanFightPrizeCfgInfo;
		 /**  结果0;//胜利1;//失败2;//平局 */
		public static getResultByResult(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> buy_count
	class DanBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.DanBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.DanBuyCountCfgInfo;
		public static getFirstInfo():cfg.DanBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要vip等级 */
		public static getNeedVipLevelByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> dan_upgrade
	class DanUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanUpgradeCfgInfo;
		public static getFirstInfo():cfg.DanUpgradeCfgInfo;
		 /**  段位ID */
		public static getDanIDByDanID(value:number):number;
		 /**  段位名称 */
		public static getDanNameByDanID(value:number):string;
		 /**  类型 */
		public static getTypeByDanID(value:number):number;
		 /**  最大经验 */
		public static getMaxExpByDanID(value:number):number;
		 /**  缓冲经验 */
		public static getCacheExpByDanID(value:number):number;
		 /**  首达奖励 */
		public static getFirstPrizeByDanID(value:number):string;
		 /**  段位奖励 */
		public static getDanPrizeByDanID(value:number):string;
		 /**  继承段位ID */
		public static getInheritDanIDByDanID(value:number):number;
		 /**  晋级胜场数胜场_总场次 */
		public static getPromoteWinCountByDanID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> const
	class DanConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanConstCfgInfo>;
			public static setup(dataArr:Array<cfg.DanConstCfgInfo>):void;
		public static getInfo(value:string):cfg.DanConstCfgInfo;
		public static getFirstInfo():cfg.DanConstCfgInfo;
		 /**  玩法名称 */
		public static getNameByName(value:string):string;
		 /**  需要世界等级 */
		public static getNeedWorldLevelByName(value:string):number;
		 /**  开启第二队需要神器ID */
		public static getTeam2NeedArifactByName(value:string):number;
		 /**  每日挑战次数 */
		public static getDayFightCountByName(value:string):number;
		 /**  初始积分 */
		public static getInitScoreByName(value:string):number;
		 /**  初始段位ID */
		public static getInitDanIDByName(value:string):number;
		 /**  服务器个数 */
		public static getServerCountByName(value:string):number;
		 /**  赛季天数 */
		public static getSeasonDaysByName(value:string):number;
		 /**  上半个赛季总天数 */
		public static getUpSeasonDaysByName(value:string):number;
		 /**  下半个赛季总天数 */
		public static getLowSeasonDaysByName(value:string):number;
		 /**  王者赛开启天数 */
		public static getKingOpenDaysByName(value:string):number;
		 /**  王者赛准入段位 */
		public static getKingNeedDanByName(value:string):number;
		 /**  匹配积分区间百分比 */
		public static getMatchScoreRateByName(value:string):string;
		 /**  胜利增加经验区间 */
		public static getSucAddExpByName(value:string):string;
		 /**  失败失去经验区间 */
		public static getFailDelExpByName(value:string):string;
		 /**  开启时间 */
		public static getOpenTimeByName(value:string):string;
		 /**  大师段位 */
		public static getMasterDanByName(value:string):number;
		 /**  个人记录数 */
		public static getRecordNumByName(value:string):number;
		 /**  大师记录数 */
		public static getMasterRecordNumByName(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> dan_upgrade
	class DanUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanUpgradeCfgInfo;
		public static getFirstInfo():cfg.DanUpgradeCfgInfo;
		 /**  段位ID */
		public static getDanIDByDanID(value:number):number;
		 /**  段位名称 */
		public static getDanNameByDanID(value:number):string;
		 /**  类型 */
		public static getTypeByDanID(value:number):number;
		 /**  最大经验 */
		public static getMaxExpByDanID(value:number):number;
		 /**  缓冲经验 */
		public static getCacheExpByDanID(value:number):number;
		 /**  首达奖励 */
		public static getFirstPrizeByDanID(value:number):string;
		 /**  段位奖励 */
		public static getDanPrizeByDanID(value:number):string;
		 /**  继承段位ID */
		public static getInheritDanIDByDanID(value:number):number;
		 /**  晋级胜场数胜场_总场次 */
		public static getPromoteWinCountByDanID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> top_prize
	class DanTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanTopPrizeCfgInfo;
		public static getFirstInfo():cfg.DanTopPrizeCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;
		 /**  需要段位ID */
		public static getNeedDanIDByRank(value:number):number;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> area
	class DanAreaBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanAreaCfgInfo>;
			public static setup(dataArr:Array<cfg.DanAreaCfgInfo>):void;
		public static getInfo(value:number):cfg.DanAreaCfgInfo;
		public static getFirstInfo():cfg.DanAreaCfgInfo;
		 /**  区域ID */
		public static getIDByID(value:number):number;
		 /**  区域名称 */
		public static getAreaNameByID(value:number):string;
		 /**  区域图标id */
		public static getIconIdByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> fight_prize
	class DanFightPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanFightPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanFightPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanFightPrizeCfgInfo;
		public static getFirstInfo():cfg.DanFightPrizeCfgInfo;
		 /**  结果0;//胜利1;//失败2;//平局 */
		public static getResultByResult(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> buy_count
	class DanBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.DanBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.DanBuyCountCfgInfo;
		public static getFirstInfo():cfg.DanBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要vip等级 */
		public static getNeedVipLevelByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> fight_prize
	class DanFightPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanFightPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanFightPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanFightPrizeCfgInfo;
		public static getFirstInfo():cfg.DanFightPrizeCfgInfo;
		 /**  结果0;//胜利1;//失败2;//平局 */
		public static getResultByResult(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> area
	class DanAreaBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanAreaCfgInfo>;
			public static setup(dataArr:Array<cfg.DanAreaCfgInfo>):void;
		public static getInfo(value:number):cfg.DanAreaCfgInfo;
		public static getFirstInfo():cfg.DanAreaCfgInfo;
		 /**  区域ID */
		public static getIDByID(value:number):number;
		 /**  区域名称 */
		public static getAreaNameByID(value:number):string;
		 /**  区域图标id */
		public static getIconIdByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> top_prize
	class DanTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanTopPrizeCfgInfo;
		public static getFirstInfo():cfg.DanTopPrizeCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;
		 /**  需要段位ID */
		public static getNeedDanIDByRank(value:number):number;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> const
	class DanConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanConstCfgInfo>;
			public static setup(dataArr:Array<cfg.DanConstCfgInfo>):void;
		public static getInfo(value:string):cfg.DanConstCfgInfo;
		public static getFirstInfo():cfg.DanConstCfgInfo;
		 /**  玩法名称 */
		public static getNameByName(value:string):string;
		 /**  需要世界等级 */
		public static getNeedWorldLevelByName(value:string):number;
		 /**  开启第二队需要神器ID */
		public static getTeam2NeedArifactByName(value:string):number;
		 /**  每日挑战次数 */
		public static getDayFightCountByName(value:string):number;
		 /**  初始积分 */
		public static getInitScoreByName(value:string):number;
		 /**  初始段位ID */
		public static getInitDanIDByName(value:string):number;
		 /**  服务器个数 */
		public static getServerCountByName(value:string):number;
		 /**  赛季天数 */
		public static getSeasonDaysByName(value:string):number;
		 /**  上半个赛季总天数 */
		public static getUpSeasonDaysByName(value:string):number;
		 /**  下半个赛季总天数 */
		public static getLowSeasonDaysByName(value:string):number;
		 /**  王者赛开启天数 */
		public static getKingOpenDaysByName(value:string):number;
		 /**  王者赛准入段位 */
		public static getKingNeedDanByName(value:string):number;
		 /**  匹配积分区间百分比 */
		public static getMatchScoreRateByName(value:string):string;
		 /**  胜利增加经验区间 */
		public static getSucAddExpByName(value:string):string;
		 /**  失败失去经验区间 */
		public static getFailDelExpByName(value:string):string;
		 /**  开启时间 */
		public static getOpenTimeByName(value:string):string;
		 /**  大师段位 */
		public static getMasterDanByName(value:string):number;
		 /**  个人记录数 */
		public static getRecordNumByName(value:string):number;
		 /**  大师记录数 */
		public static getMasterRecordNumByName(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> buy_count
	class DanBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.DanBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.DanBuyCountCfgInfo;
		public static getFirstInfo():cfg.DanBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要vip等级 */
		public static getNeedVipLevelByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> const
	class DanConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanConstCfgInfo>;
			public static setup(dataArr:Array<cfg.DanConstCfgInfo>):void;
		public static getInfo(value:string):cfg.DanConstCfgInfo;
		public static getFirstInfo():cfg.DanConstCfgInfo;
		 /**  玩法名称 */
		public static getNameByName(value:string):string;
		 /**  需要世界等级 */
		public static getNeedWorldLevelByName(value:string):number;
		 /**  开启第二队需要神器ID */
		public static getTeam2NeedArifactByName(value:string):number;
		 /**  每日挑战次数 */
		public static getDayFightCountByName(value:string):number;
		 /**  初始积分 */
		public static getInitScoreByName(value:string):number;
		 /**  初始段位ID */
		public static getInitDanIDByName(value:string):number;
		 /**  服务器个数 */
		public static getServerCountByName(value:string):number;
		 /**  赛季天数 */
		public static getSeasonDaysByName(value:string):number;
		 /**  上半个赛季总天数 */
		public static getUpSeasonDaysByName(value:string):number;
		 /**  下半个赛季总天数 */
		public static getLowSeasonDaysByName(value:string):number;
		 /**  王者赛开启天数 */
		public static getKingOpenDaysByName(value:string):number;
		 /**  王者赛准入段位 */
		public static getKingNeedDanByName(value:string):number;
		 /**  匹配积分区间百分比 */
		public static getMatchScoreRateByName(value:string):string;
		 /**  胜利增加经验区间 */
		public static getSucAddExpByName(value:string):string;
		 /**  失败失去经验区间 */
		public static getFailDelExpByName(value:string):string;
		 /**  开启时间 */
		public static getOpenTimeByName(value:string):string;
		 /**  大师段位 */
		public static getMasterDanByName(value:string):number;
		 /**  个人记录数 */
		public static getRecordNumByName(value:string):number;
		 /**  大师记录数 */
		public static getMasterRecordNumByName(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dan.xls】 ----> dan_upgrade
	class DanUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DanUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.DanUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.DanUpgradeCfgInfo;
		public static getFirstInfo():cfg.DanUpgradeCfgInfo;
		 /**  段位ID */
		public static getDanIDByDanID(value:number):number;
		 /**  段位名称 */
		public static getDanNameByDanID(value:number):string;
		 /**  类型 */
		public static getTypeByDanID(value:number):number;
		 /**  最大经验 */
		public static getMaxExpByDanID(value:number):number;
		 /**  缓冲经验 */
		public static getCacheExpByDanID(value:number):number;
		 /**  首达奖励 */
		public static getFirstPrizeByDanID(value:number):string;
		 /**  段位奖励 */
		public static getDanPrizeByDanID(value:number):string;
		 /**  继承段位ID */
		public static getInheritDanIDByDanID(value:number):number;
		 /**  晋级胜场数胜场_总场次 */
		public static getPromoteWinCountByDanID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> slot
	class DefendSlotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendSlotCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendSlotCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendSlotCfgInfo;
		public static getFirstInfo():cfg.DefendSlotCfgInfo;
		 /**  槽位 */
		public static getSlotBySlot(value:number):number;
		 /**  守护等级 */
		public static getLevelBySlot(value:number):number;
		 /**  守护阶级 */
		public static getRankBySlot(value:number):number;
		 /**  解锁条件说明 */
		public static getUnlockDescBySlot(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> plan
	class DefendPlanBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendPlanCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendPlanCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendPlanCfgInfo;
		public static getFirstInfo():cfg.DefendPlanCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  开启消耗 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> skill
	class DefendSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendSkillCfgInfo;
		public static getFirstInfo():cfg.DefendSkillCfgInfo;
		 /**  英雄id */
		public static getPetIDByPetID(value:number):number;
		 /**  英雄星级 */
		public static getPetStarByPetID(value:number):number;
		 /**  技能id */
		public static getSkillIDByPetID(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByPetID(value:number):number;
		 /**  技能评分 */
		public static getSkillScoreByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> rank
	class DefendRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendRankCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendRankCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendRankCfgInfo;
		public static getFirstInfo():cfg.DefendRankCfgInfo;
		 /**  阶级 */
		public static getRankByRank(value:number):number;
		 /**  名字 */
		public static getNameByRank(value:number):string;
		 /**  模型 */
		public static getModelByRank(value:number):string;
		 /**  此等级上限 */
		public static getMaxLevelByRank(value:number):number;
		 /**  升阶需要道具最后一个为空 */
		public static getNeedItemByRank(value:number):string;
		 /**  进阶提示 */
		public static getTipsByRank(value:number):string;
		 /**  基础属性 */
		public static getBaseAttrByRank(value:number):string;
		 /**  精灵加成(给战斗精灵加成) */
		public static getAddPetAttrByRank(value:number):string;
		 /**  (属性|值|百分比;)（守护精灵给精灵球加的属性） */
		public static getAddPercentByRank(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> plan
	class DefendPlanBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendPlanCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendPlanCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendPlanCfgInfo;
		public static getFirstInfo():cfg.DefendPlanCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  开启消耗 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> skill
	class DefendSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendSkillCfgInfo;
		public static getFirstInfo():cfg.DefendSkillCfgInfo;
		 /**  英雄id */
		public static getPetIDByPetID(value:number):number;
		 /**  英雄星级 */
		public static getPetStarByPetID(value:number):number;
		 /**  技能id */
		public static getSkillIDByPetID(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByPetID(value:number):number;
		 /**  技能评分 */
		public static getSkillScoreByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> slot
	class DefendSlotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendSlotCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendSlotCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendSlotCfgInfo;
		public static getFirstInfo():cfg.DefendSlotCfgInfo;
		 /**  槽位 */
		public static getSlotBySlot(value:number):number;
		 /**  守护等级 */
		public static getLevelBySlot(value:number):number;
		 /**  守护阶级 */
		public static getRankBySlot(value:number):number;
		 /**  解锁条件说明 */
		public static getUnlockDescBySlot(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> level
	class DefendLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendLevelCfgInfo;
		public static getFirstInfo():cfg.DefendLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升需要道具最后一个为空 */
		public static getNeedItemByLevel(value:number):string;
		 /**  基础属性 */
		public static getBaseAttrByLevel(value:number):string;
		 /**  精灵加成(给战斗精灵加成) */
		public static getAddPetAttrByLevel(value:number):string;
		 /**  (属性|值|百分比;)（守护精灵给精灵球加的属性） */
		public static getAddPercentByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> rank
	class DefendRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendRankCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendRankCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendRankCfgInfo;
		public static getFirstInfo():cfg.DefendRankCfgInfo;
		 /**  阶级 */
		public static getRankByRank(value:number):number;
		 /**  名字 */
		public static getNameByRank(value:number):string;
		 /**  模型 */
		public static getModelByRank(value:number):string;
		 /**  此等级上限 */
		public static getMaxLevelByRank(value:number):number;
		 /**  升阶需要道具最后一个为空 */
		public static getNeedItemByRank(value:number):string;
		 /**  进阶提示 */
		public static getTipsByRank(value:number):string;
		 /**  基础属性 */
		public static getBaseAttrByRank(value:number):string;
		 /**  精灵加成(给战斗精灵加成) */
		public static getAddPetAttrByRank(value:number):string;
		 /**  (属性|值|百分比;)（守护精灵给精灵球加的属性） */
		public static getAddPercentByRank(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> level
	class DefendLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendLevelCfgInfo;
		public static getFirstInfo():cfg.DefendLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升需要道具最后一个为空 */
		public static getNeedItemByLevel(value:number):string;
		 /**  基础属性 */
		public static getBaseAttrByLevel(value:number):string;
		 /**  精灵加成(给战斗精灵加成) */
		public static getAddPetAttrByLevel(value:number):string;
		 /**  (属性|值|百分比;)（守护精灵给精灵球加的属性） */
		public static getAddPercentByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> level
	class DefendLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendLevelCfgInfo;
		public static getFirstInfo():cfg.DefendLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升需要道具最后一个为空 */
		public static getNeedItemByLevel(value:number):string;
		 /**  基础属性 */
		public static getBaseAttrByLevel(value:number):string;
		 /**  精灵加成(给战斗精灵加成) */
		public static getAddPetAttrByLevel(value:number):string;
		 /**  (属性|值|百分比;)（守护精灵给精灵球加的属性） */
		public static getAddPercentByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> plan
	class DefendPlanBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendPlanCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendPlanCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendPlanCfgInfo;
		public static getFirstInfo():cfg.DefendPlanCfgInfo;
		 /**  序号 */
		public static getIndexByIndex(value:number):number;
		 /**  开启消耗 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> skill
	class DefendSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendSkillCfgInfo;
		public static getFirstInfo():cfg.DefendSkillCfgInfo;
		 /**  英雄id */
		public static getPetIDByPetID(value:number):number;
		 /**  英雄星级 */
		public static getPetStarByPetID(value:number):number;
		 /**  技能id */
		public static getSkillIDByPetID(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByPetID(value:number):number;
		 /**  技能评分 */
		public static getSkillScoreByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> slot
	class DefendSlotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendSlotCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendSlotCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendSlotCfgInfo;
		public static getFirstInfo():cfg.DefendSlotCfgInfo;
		 /**  槽位 */
		public static getSlotBySlot(value:number):number;
		 /**  守护等级 */
		public static getLevelBySlot(value:number):number;
		 /**  守护阶级 */
		public static getRankBySlot(value:number):number;
		 /**  解锁条件说明 */
		public static getUnlockDescBySlot(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_defend.xls】 ----> rank
	class DefendRankBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DefendRankCfgInfo>;
			public static setup(dataArr:Array<cfg.DefendRankCfgInfo>):void;
		public static getInfo(value:number):cfg.DefendRankCfgInfo;
		public static getFirstInfo():cfg.DefendRankCfgInfo;
		 /**  阶级 */
		public static getRankByRank(value:number):number;
		 /**  名字 */
		public static getNameByRank(value:number):string;
		 /**  模型 */
		public static getModelByRank(value:number):string;
		 /**  此等级上限 */
		public static getMaxLevelByRank(value:number):number;
		 /**  升阶需要道具最后一个为空 */
		public static getNeedItemByRank(value:number):string;
		 /**  进阶提示 */
		public static getTipsByRank(value:number):string;
		 /**  基础属性 */
		public static getBaseAttrByRank(value:number):string;
		 /**  精灵加成(给战斗精灵加成) */
		public static getAddPetAttrByRank(value:number):string;
		 /**  (属性|值|百分比;)（守护精灵给精灵球加的属性） */
		public static getAddPercentByRank(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dip.xls】 ----> dip
	class DipBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DipCfgInfo>;
			public static setup(dataArr:Array<cfg.DipCfgInfo>):void;
		public static getInfo(value:number):cfg.DipCfgInfo;
		public static getFirstInfo():cfg.DipCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dip.xls】 ----> dip
	class DipBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DipCfgInfo>;
			public static setup(dataArr:Array<cfg.DipCfgInfo>):void;
		public static getInfo(value:number):cfg.DipCfgInfo;
		public static getFirstInfo():cfg.DipCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dip.xls】 ----> dip
	class DipBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DipCfgInfo>;
			public static setup(dataArr:Array<cfg.DipCfgInfo>):void;
		public static getInfo(value:number):cfg.DipCfgInfo;
		public static getFirstInfo():cfg.DipCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dragon_ball.xls】 ----> level
	class DragonBallLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DragonBallLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.DragonBallLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.DragonBallLevelCfgInfo;
		public static getFirstInfo():cfg.DragonBallLevelCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  等级 */
		public static getLevelByType(value:number):number;
		 /**  升到下一级需要道具 */
		public static getNeedItemByType(value:number):string;
		 /**  属性加成 */
		public static getAttrByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dragon_ball.xls】 ----> unlock
	class DragonBallUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DragonBallUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.DragonBallUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.DragonBallUnlockCfgInfo;
		public static getFirstInfo():cfg.DragonBallUnlockCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  解锁需要道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dragon_ball.xls】 ----> unlock
	class DragonBallUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DragonBallUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.DragonBallUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.DragonBallUnlockCfgInfo;
		public static getFirstInfo():cfg.DragonBallUnlockCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  解锁需要道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dragon_ball.xls】 ----> level
	class DragonBallLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DragonBallLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.DragonBallLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.DragonBallLevelCfgInfo;
		public static getFirstInfo():cfg.DragonBallLevelCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  等级 */
		public static getLevelByType(value:number):number;
		 /**  升到下一级需要道具 */
		public static getNeedItemByType(value:number):string;
		 /**  属性加成 */
		public static getAttrByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dragon_ball.xls】 ----> unlock
	class DragonBallUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DragonBallUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.DragonBallUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.DragonBallUnlockCfgInfo;
		public static getFirstInfo():cfg.DragonBallUnlockCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  解锁需要道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_dragon_ball.xls】 ----> level
	class DragonBallLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DragonBallLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.DragonBallLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.DragonBallLevelCfgInfo;
		public static getFirstInfo():cfg.DragonBallLevelCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  等级 */
		public static getLevelByType(value:number):number;
		 /**  升到下一级需要道具 */
		public static getNeedItemByType(value:number):string;
		 /**  属性加成 */
		public static getAttrByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_drop.xls】 ----> cs_drop_group
	class DropDropGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DropDropGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.DropDropGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.DropDropGroupCfgInfo;
		public static getFirstInfo():cfg.DropDropGroupCfgInfo;
		 /**  组ID */
		public static getGroupIDByGroupID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_drop.xls】 ----> cs_drop
	class DropDropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DropDropCfgInfo>;
			public static setup(dataArr:Array<cfg.DropDropCfgInfo>):void;
		public static getInfo(value:number):cfg.DropDropCfgInfo;
		public static getFirstInfo():cfg.DropDropCfgInfo;
		 /**  掉落ID */
		public static getDropIDByDropID(value:number):number;
		 /**  固定奖励 */
		public static getAddItemByDropID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_drop.xls】 ----> cs_drop
	class DropDropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DropDropCfgInfo>;
			public static setup(dataArr:Array<cfg.DropDropCfgInfo>):void;
		public static getInfo(value:number):cfg.DropDropCfgInfo;
		public static getFirstInfo():cfg.DropDropCfgInfo;
		 /**  掉落ID */
		public static getDropIDByDropID(value:number):number;
		 /**  固定奖励 */
		public static getAddItemByDropID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_drop.xls】 ----> cs_drop_group
	class DropDropGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DropDropGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.DropDropGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.DropDropGroupCfgInfo;
		public static getFirstInfo():cfg.DropDropGroupCfgInfo;
		 /**  组ID */
		public static getGroupIDByGroupID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_drop.xls】 ----> cs_drop
	class DropDropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DropDropCfgInfo>;
			public static setup(dataArr:Array<cfg.DropDropCfgInfo>):void;
		public static getInfo(value:number):cfg.DropDropCfgInfo;
		public static getFirstInfo():cfg.DropDropCfgInfo;
		 /**  掉落ID */
		public static getDropIDByDropID(value:number):number;
		 /**  固定奖励 */
		public static getAddItemByDropID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_drop.xls】 ----> cs_drop_group
	class DropDropGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.DropDropGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.DropDropGroupCfgInfo>):void;
		public static getInfo(value:number):cfg.DropDropGroupCfgInfo;
		public static getFirstInfo():cfg.DropDropGroupCfgInfo;
		 /**  组ID */
		public static getGroupIDByGroupID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> monster_new
	class ElementMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ElementMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> opentime
	class ElementOpentimeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementOpentimeCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementOpentimeCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementOpentimeCfgInfo;
		public static getFirstInfo():cfg.ElementOpentimeCfgInfo;
		 /**  类型_emPetType */
		public static getTypeByType(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByType(value:number):string;
		 /**  开启时间提示 */
		public static getOpenTimeTipsByType(value:number):string;
		 /**  名称 */
		public static getNameByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> stage
	class ElementStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementStageCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementStageCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementStageCfgInfo;
		public static getFirstInfo():cfg.ElementStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  第几周 */
		public static getWeekByIndex(value:number):number;
		 /**  类型_emPetType */
		public static getTypeByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  需要伙伴类型类型_个数 */
		public static getNeedPetTypeByIndex(value:number):string;
		 /**  需要等级 */
		public static getNeedPlayerLevelByIndex(value:number):number;
		 /**  需要战斗力 */
		public static getNeedFightPowerByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  圣殿威压技能 */
		public static getBossSkillIdByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  首通奖励 */
		public static getFirstAddItemByIndex(value:number):string;
		 /**  通关奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> buy_count
	class ElementBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementBuyCountCfgInfo;
		public static getFirstInfo():cfg.ElementBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> stage
	class ElementStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementStageCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementStageCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementStageCfgInfo;
		public static getFirstInfo():cfg.ElementStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  第几周 */
		public static getWeekByIndex(value:number):number;
		 /**  类型_emPetType */
		public static getTypeByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  需要伙伴类型类型_个数 */
		public static getNeedPetTypeByIndex(value:number):string;
		 /**  需要等级 */
		public static getNeedPlayerLevelByIndex(value:number):number;
		 /**  需要战斗力 */
		public static getNeedFightPowerByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  圣殿威压技能 */
		public static getBossSkillIdByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  首通奖励 */
		public static getFirstAddItemByIndex(value:number):string;
		 /**  通关奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> stage
	class ElementStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementStageCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementStageCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementStageCfgInfo;
		public static getFirstInfo():cfg.ElementStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  第几周 */
		public static getWeekByIndex(value:number):number;
		 /**  类型_emPetType */
		public static getTypeByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  需要伙伴类型类型_个数 */
		public static getNeedPetTypeByIndex(value:number):string;
		 /**  需要等级 */
		public static getNeedPlayerLevelByIndex(value:number):number;
		 /**  需要战斗力 */
		public static getNeedFightPowerByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  圣殿威压技能 */
		public static getBossSkillIdByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  首通奖励 */
		public static getFirstAddItemByIndex(value:number):string;
		 /**  通关奖励 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> buy_count
	class ElementBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementBuyCountCfgInfo;
		public static getFirstInfo():cfg.ElementBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> monster_new
	class ElementMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ElementMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> opentime
	class ElementOpentimeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementOpentimeCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementOpentimeCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementOpentimeCfgInfo;
		public static getFirstInfo():cfg.ElementOpentimeCfgInfo;
		 /**  类型_emPetType */
		public static getTypeByType(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByType(value:number):string;
		 /**  开启时间提示 */
		public static getOpenTimeTipsByType(value:number):string;
		 /**  名称 */
		public static getNameByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> opentime
	class ElementOpentimeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementOpentimeCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementOpentimeCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementOpentimeCfgInfo;
		public static getFirstInfo():cfg.ElementOpentimeCfgInfo;
		 /**  类型_emPetType */
		public static getTypeByType(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByType(value:number):string;
		 /**  开启时间提示 */
		public static getOpenTimeTipsByType(value:number):string;
		 /**  名称 */
		public static getNameByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> monster_new
	class ElementMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ElementMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_element.xls】 ----> buy_count
	class ElementBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ElementBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.ElementBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.ElementBuyCountCfgInfo;
		public static getFirstInfo():cfg.ElementBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> stage_type
	class ExpeditionStageTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionStageTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionStageTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionStageTypeCfgInfo;
		public static getFirstInfo():cfg.ExpeditionStageTypeCfgInfo;
		 /**  关卡 */
		public static getStageTypeByStageType(value:number):number;
		 /**  需要战力 */
		public static getNeedFightPowerByStageType(value:number):number;
		 /**  奖励预览 */
		public static getAddPrizeByStageType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> stage
	class ExpeditionStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionStageCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionStageCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionStageCfgInfo;
		public static getFirstInfo():cfg.ExpeditionStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  关卡 */
		public static getStageIDByIndex(value:number):number;
		 /**  难度 */
		public static getExpeditionTypeByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;
		 /**  宝箱奖励 */
		public static getExtraPrizeByIndex(value:number):string;
		 /**  战力区间百分比 */
		public static getFightpowerRateByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> robot
	class ExpeditionRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionRobotCfgInfo;
		public static getFirstInfo():cfg.ExpeditionRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> monster_new
	class ExpeditionMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ExpeditionMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> monster_new
	class ExpeditionMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ExpeditionMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> stage_type
	class ExpeditionStageTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionStageTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionStageTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionStageTypeCfgInfo;
		public static getFirstInfo():cfg.ExpeditionStageTypeCfgInfo;
		 /**  关卡 */
		public static getStageTypeByStageType(value:number):number;
		 /**  需要战力 */
		public static getNeedFightPowerByStageType(value:number):number;
		 /**  奖励预览 */
		public static getAddPrizeByStageType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> robot
	class ExpeditionRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionRobotCfgInfo;
		public static getFirstInfo():cfg.ExpeditionRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> stage
	class ExpeditionStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionStageCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionStageCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionStageCfgInfo;
		public static getFirstInfo():cfg.ExpeditionStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  关卡 */
		public static getStageIDByIndex(value:number):number;
		 /**  难度 */
		public static getExpeditionTypeByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;
		 /**  宝箱奖励 */
		public static getExtraPrizeByIndex(value:number):string;
		 /**  战力区间百分比 */
		public static getFightpowerRateByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> robot
	class ExpeditionRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionRobotCfgInfo;
		public static getFirstInfo():cfg.ExpeditionRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> monster_new
	class ExpeditionMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionMonsterNewCfgInfo;
		public static getFirstInfo():cfg.ExpeditionMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> stage_type
	class ExpeditionStageTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionStageTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionStageTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionStageTypeCfgInfo;
		public static getFirstInfo():cfg.ExpeditionStageTypeCfgInfo;
		 /**  关卡 */
		public static getStageTypeByStageType(value:number):number;
		 /**  需要战力 */
		public static getNeedFightPowerByStageType(value:number):number;
		 /**  奖励预览 */
		public static getAddPrizeByStageType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_expedition.xls】 ----> stage
	class ExpeditionStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ExpeditionStageCfgInfo>;
			public static setup(dataArr:Array<cfg.ExpeditionStageCfgInfo>):void;
		public static getInfo(value:number):cfg.ExpeditionStageCfgInfo;
		public static getFirstInfo():cfg.ExpeditionStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  关卡 */
		public static getStageIDByIndex(value:number):number;
		 /**  难度 */
		public static getExpeditionTypeByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddPrizeByIndex(value:number):string;
		 /**  宝箱奖励 */
		public static getExtraPrizeByIndex(value:number):string;
		 /**  战力区间百分比 */
		public static getFightpowerRateByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> impeach_time
	class FactionImpeachTimeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionImpeachTimeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionImpeachTimeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionImpeachTimeCfgInfo;
		public static getFirstInfo():cfg.FactionImpeachTimeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  需要离线时间 */
		public static getImpeachTimeByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_index
	class FactionPvpSkillIndexBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillIndexCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillIndexCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillIndexCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillIndexCfgInfo;
		 /**  职业类型 */
		public static getJobTypeByJobType(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByJobType(value:number):number;
		 /**  技能索引 */
		public static getSkillIDByJobType(value:number):number;
		 /**  评分 */
		public static getAddScoreByJobType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> monster_new
	class FactionMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionMonsterNewCfgInfo;
		public static getFirstInfo():cfg.FactionMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill_upgrade
	class FactionSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionSkillUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  需要所有技能等级 */
		public static getNeedAllSkillLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill_reset
	class FactionSkillResetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillResetCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillResetCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillResetCfgInfo;
		public static getFirstInfo():cfg.FactionSkillResetCfgInfo;
		 /**  等级（0表示第一次）(上等级，此等级] */
		public static getLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  返还比率道具ID_万分比 */
		public static getReturnItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap
	class FactionCopymapBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  章节名称 */
		public static getNameByID(value:number):string;
		 /**  怪物数据 */
		public static getMonsterByID(value:number):number;
		 /**  伤害奖励 */
		public static getDamagePrizeByID(value:number):string;
		 /**  击败奖励 */
		public static getKillPrizeByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_upgrade
	class FactionPvpSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillUpgradeCfgInfo;
		 /**  技能类型 */
		public static getSkillTypeBySkillType(value:number):number;
		 /**  等级 */
		public static getLevelBySkillType(value:number):number;
		 /**  需要其他天赋技能最低等级 */
		public static getNeedAllSkillLevelBySkillType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySkillType(value:number):string;
		 /**  需要本天赋其他技能最低等级 */
		public static getNeedOtherSkillLevelBySkillType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap_topprize
	class FactionCopymapTopprizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapTopprizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapTopprizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapTopprizeCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapTopprizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  排名(上一名次，此名次] */
		public static getRankByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getBaseItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> monster_new
	class FactionMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionMonsterNewCfgInfo;
		public static getFirstInfo():cfg.FactionMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> impeach_time
	class FactionImpeachTimeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionImpeachTimeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionImpeachTimeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionImpeachTimeCfgInfo;
		public static getFirstInfo():cfg.FactionImpeachTimeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  需要离线时间 */
		public static getImpeachTimeByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill
	class FactionPvpSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  职业类型 */
		public static getJobTypeByID(value:number):number;
		 /**  技能位置 */
		public static getSkillPosByID(value:number):number;
		 /**  技能类型 */
		public static getSkillTypeByID(value:number):number;
		 /**  每级增加属性属性类型|属性值|属性万分比 */
		public static getAddAttrByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  评分 */
		public static getAddScoreByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_index
	class FactionPvpSkillIndexBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillIndexCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillIndexCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillIndexCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillIndexCfgInfo;
		 /**  职业类型 */
		public static getJobTypeByJobType(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByJobType(value:number):number;
		 /**  技能索引 */
		public static getSkillIDByJobType(value:number):number;
		 /**  评分 */
		public static getAddScoreByJobType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_upgrade
	class FactionPvpSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillUpgradeCfgInfo;
		 /**  技能类型 */
		public static getSkillTypeBySkillType(value:number):number;
		 /**  等级 */
		public static getLevelBySkillType(value:number):number;
		 /**  需要其他天赋技能最低等级 */
		public static getNeedAllSkillLevelBySkillType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySkillType(value:number):string;
		 /**  需要本天赋其他技能最低等级 */
		public static getNeedOtherSkillLevelBySkillType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_reset
	class FactionPvpSkillResetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillResetCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillResetCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillResetCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillResetCfgInfo;
		 /**  技能类型 */
		public static getSkillTypeBySkillType(value:number):number;
		 /**  等级（0表示第一次）(上等级，此等级] */
		public static getLevelBySkillType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySkillType(value:number):string;
		 /**  返还比率道具ID_万分比 */
		public static getReturnItemBySkillType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap_buycount
	class FactionCopymapBuycountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapBuycountCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapBuycountCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapBuycountCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapBuycountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> donate
	class FactionDonateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionDonateCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionDonateCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionDonateCfgInfo;
		public static getFirstInfo():cfg.FactionDonateCfgInfo;
		 /**  捐献类型 */
		public static getDonateTypeByDonateType(value:number):number;
		 /**  捐献名称 */
		public static getNameByDonateType(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByDonateType(value:number):string;
		 /**  增加帮会经验 */
		public static getAddExpByDonateType(value:number):number;
		 /**  增加帮会贡献 */
		public static getAddContriByDonateType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill
	class FactionPvpSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  职业类型 */
		public static getJobTypeByID(value:number):number;
		 /**  技能位置 */
		public static getSkillPosByID(value:number):number;
		 /**  技能类型 */
		public static getSkillTypeByID(value:number):number;
		 /**  每级增加属性属性类型|属性值|属性万分比 */
		public static getAddAttrByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  评分 */
		public static getAddScoreByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> upgrade
	class FactionUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionUpgradeCfgInfo;
		 /**  帮会等级 */
		public static getLevelByLevel(value:number):number;
		 /**  最大帮派人数 */
		public static getMemberCountByLevel(value:number):number;
		 /**  此级最大经验值 */
		public static getExpByLevel(value:number):number;
		 /**  副帮主个数 */
		public static getDeputyCountByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> donate
	class FactionDonateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionDonateCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionDonateCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionDonateCfgInfo;
		public static getFirstInfo():cfg.FactionDonateCfgInfo;
		 /**  捐献类型 */
		public static getDonateTypeByDonateType(value:number):number;
		 /**  捐献名称 */
		public static getNameByDonateType(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByDonateType(value:number):string;
		 /**  增加帮会经验 */
		public static getAddExpByDonateType(value:number):number;
		 /**  增加帮会贡献 */
		public static getAddContriByDonateType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill
	class FactionSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillCfgInfo;
		public static getFirstInfo():cfg.FactionSkillCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  职业类型 */
		public static getJobTypeByID(value:number):number;
		 /**  技能位置 */
		public static getTypeByID(value:number):number;
		 /**  每级增加属性属性类型|属性值|属性万分比 */
		public static getAddAttrByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  评分 */
		public static getAddScoreByID(value:number):number;
		 /**  技能类型 */
		public static getSkillTypeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap_topprize
	class FactionCopymapTopprizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapTopprizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapTopprizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapTopprizeCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapTopprizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  排名(上一名次，此名次] */
		public static getRankByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getBaseItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_reset
	class FactionPvpSkillResetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillResetCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillResetCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillResetCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillResetCfgInfo;
		 /**  技能类型 */
		public static getSkillTypeBySkillType(value:number):number;
		 /**  等级（0表示第一次）(上等级，此等级] */
		public static getLevelBySkillType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySkillType(value:number):string;
		 /**  返还比率道具ID_万分比 */
		public static getReturnItemBySkillType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill
	class FactionSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillCfgInfo;
		public static getFirstInfo():cfg.FactionSkillCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  职业类型 */
		public static getJobTypeByID(value:number):number;
		 /**  技能位置 */
		public static getTypeByID(value:number):number;
		 /**  每级增加属性属性类型|属性值|属性万分比 */
		public static getAddAttrByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  评分 */
		public static getAddScoreByID(value:number):number;
		 /**  技能类型 */
		public static getSkillTypeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> donate_prize
	class FactionDonatePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionDonatePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionDonatePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionDonatePrizeCfgInfo;
		public static getFirstInfo():cfg.FactionDonatePrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要总捐献值 */
		public static getNeedDonateByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap
	class FactionCopymapBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  章节名称 */
		public static getNameByID(value:number):string;
		 /**  怪物数据 */
		public static getMonsterByID(value:number):number;
		 /**  伤害奖励 */
		public static getDamagePrizeByID(value:number):string;
		 /**  击败奖励 */
		public static getKillPrizeByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill_reset
	class FactionSkillResetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillResetCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillResetCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillResetCfgInfo;
		public static getFirstInfo():cfg.FactionSkillResetCfgInfo;
		 /**  等级（0表示第一次）(上等级，此等级] */
		public static getLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  返还比率道具ID_万分比 */
		public static getReturnItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill_upgrade
	class FactionSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionSkillUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  需要所有技能等级 */
		public static getNeedAllSkillLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> liveness
	class FactionLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionLivenessCfgInfo;
		public static getFirstInfo():cfg.FactionLivenessCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  该等级最大经验值 */
		public static getExpByLevel(value:number):number;
		 /**  升到此级奖励 */
		public static getAddItemByLevel(value:number):string;
		 /**  此级属性 */
		public static getAddAttrByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> liveness
	class FactionLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionLivenessCfgInfo;
		public static getFirstInfo():cfg.FactionLivenessCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  该等级最大经验值 */
		public static getExpByLevel(value:number):number;
		 /**  升到此级奖励 */
		public static getAddItemByLevel(value:number):string;
		 /**  此级属性 */
		public static getAddAttrByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> donate
	class FactionDonateBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionDonateCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionDonateCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionDonateCfgInfo;
		public static getFirstInfo():cfg.FactionDonateCfgInfo;
		 /**  捐献类型 */
		public static getDonateTypeByDonateType(value:number):number;
		 /**  捐献名称 */
		public static getNameByDonateType(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByDonateType(value:number):string;
		 /**  增加帮会经验 */
		public static getAddExpByDonateType(value:number):number;
		 /**  增加帮会贡献 */
		public static getAddContriByDonateType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> donate_prize
	class FactionDonatePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionDonatePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionDonatePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionDonatePrizeCfgInfo;
		public static getFirstInfo():cfg.FactionDonatePrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要总捐献值 */
		public static getNeedDonateByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> upgrade
	class FactionUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionUpgradeCfgInfo;
		 /**  帮会等级 */
		public static getLevelByLevel(value:number):number;
		 /**  最大帮派人数 */
		public static getMemberCountByLevel(value:number):number;
		 /**  此级最大经验值 */
		public static getExpByLevel(value:number):number;
		 /**  副帮主个数 */
		public static getDeputyCountByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> donate_prize
	class FactionDonatePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionDonatePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionDonatePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionDonatePrizeCfgInfo;
		public static getFirstInfo():cfg.FactionDonatePrizeCfgInfo;
		 /**  奖励ID */
		public static getIDByID(value:number):number;
		 /**  需要总捐献值 */
		public static getNeedDonateByID(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_reset
	class FactionPvpSkillResetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillResetCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillResetCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillResetCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillResetCfgInfo;
		 /**  技能类型 */
		public static getSkillTypeBySkillType(value:number):number;
		 /**  等级（0表示第一次）(上等级，此等级] */
		public static getLevelBySkillType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySkillType(value:number):string;
		 /**  返还比率道具ID_万分比 */
		public static getReturnItemBySkillType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> upgrade
	class FactionUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionUpgradeCfgInfo;
		 /**  帮会等级 */
		public static getLevelByLevel(value:number):number;
		 /**  最大帮派人数 */
		public static getMemberCountByLevel(value:number):number;
		 /**  此级最大经验值 */
		public static getExpByLevel(value:number):number;
		 /**  副帮主个数 */
		public static getDeputyCountByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> liveness
	class FactionLivenessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionLivenessCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionLivenessCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionLivenessCfgInfo;
		public static getFirstInfo():cfg.FactionLivenessCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  该等级最大经验值 */
		public static getExpByLevel(value:number):number;
		 /**  升到此级奖励 */
		public static getAddItemByLevel(value:number):string;
		 /**  此级属性 */
		public static getAddAttrByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill
	class FactionSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillCfgInfo;
		public static getFirstInfo():cfg.FactionSkillCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  职业类型 */
		public static getJobTypeByID(value:number):number;
		 /**  技能位置 */
		public static getTypeByID(value:number):number;
		 /**  每级增加属性属性类型|属性值|属性万分比 */
		public static getAddAttrByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  评分 */
		public static getAddScoreByID(value:number):number;
		 /**  技能类型 */
		public static getSkillTypeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill_upgrade
	class FactionSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionSkillUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  需要所有技能等级 */
		public static getNeedAllSkillLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap_buycount
	class FactionCopymapBuycountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapBuycountCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapBuycountCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapBuycountCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapBuycountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> skill_reset
	class FactionSkillResetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionSkillResetCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionSkillResetCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionSkillResetCfgInfo;
		public static getFirstInfo():cfg.FactionSkillResetCfgInfo;
		 /**  等级（0表示第一次）(上等级，此等级] */
		public static getLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  返还比率道具ID_万分比 */
		public static getReturnItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap
	class FactionCopymapBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  章节名称 */
		public static getNameByID(value:number):string;
		 /**  怪物数据 */
		public static getMonsterByID(value:number):number;
		 /**  伤害奖励 */
		public static getDamagePrizeByID(value:number):string;
		 /**  击败奖励 */
		public static getKillPrizeByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap_buycount
	class FactionCopymapBuycountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapBuycountCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapBuycountCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapBuycountCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapBuycountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> monster_new
	class FactionMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionMonsterNewCfgInfo;
		public static getFirstInfo():cfg.FactionMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> copymap_topprize
	class FactionCopymapTopprizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionCopymapTopprizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionCopymapTopprizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionCopymapTopprizeCfgInfo;
		public static getFirstInfo():cfg.FactionCopymapTopprizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  ID */
		public static getIDByIndex(value:number):number;
		 /**  排名(上一名次，此名次] */
		public static getRankByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getBaseItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_index
	class FactionPvpSkillIndexBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillIndexCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillIndexCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillIndexCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillIndexCfgInfo;
		 /**  职业类型 */
		public static getJobTypeByJobType(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelByJobType(value:number):number;
		 /**  技能索引 */
		public static getSkillIDByJobType(value:number):number;
		 /**  评分 */
		public static getAddScoreByJobType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill
	class FactionPvpSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  职业类型 */
		public static getJobTypeByID(value:number):number;
		 /**  技能位置 */
		public static getSkillPosByID(value:number):number;
		 /**  技能类型 */
		public static getSkillTypeByID(value:number):number;
		 /**  每级增加属性属性类型|属性值|属性万分比 */
		public static getAddAttrByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  评分 */
		public static getAddScoreByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> pvp_skill_upgrade
	class FactionPvpSkillUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionPvpSkillUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionPvpSkillUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionPvpSkillUpgradeCfgInfo;
		public static getFirstInfo():cfg.FactionPvpSkillUpgradeCfgInfo;
		 /**  技能类型 */
		public static getSkillTypeBySkillType(value:number):number;
		 /**  等级 */
		public static getLevelBySkillType(value:number):number;
		 /**  需要其他天赋技能最低等级 */
		public static getNeedAllSkillLevelBySkillType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySkillType(value:number):string;
		 /**  需要本天赋其他技能最低等级 */
		public static getNeedOtherSkillLevelBySkillType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction.xls】 ----> impeach_time
	class FactionImpeachTimeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionImpeachTimeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionImpeachTimeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionImpeachTimeCfgInfo;
		public static getFirstInfo():cfg.FactionImpeachTimeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  需要离线时间 */
		public static getImpeachTimeByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_name.xls】 ----> name
	class FactionNameNameBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionNameNameCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionNameNameCfgInfo>):void;
		public static getInfo(value:string):cfg.FactionNameNameCfgInfo;
		public static getFirstInfo():cfg.FactionNameNameCfgInfo;
		 /**  随机名字 */
		public static getNameByName(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_name.xls】 ----> name
	class FactionNameNameBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionNameNameCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionNameNameCfgInfo>):void;
		public static getInfo(value:string):cfg.FactionNameNameCfgInfo;
		public static getFirstInfo():cfg.FactionNameNameCfgInfo;
		 /**  随机名字 */
		public static getNameByName(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_name.xls】 ----> name
	class FactionNameNameBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionNameNameCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionNameNameCfgInfo>):void;
		public static getInfo(value:string):cfg.FactionNameNameCfgInfo;
		public static getFirstInfo():cfg.FactionNameNameCfgInfo;
		 /**  随机名字 */
		public static getNameByName(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> top_prize
	class FactionWarTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarTopPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarTopPrizeCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByRank(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> box_prize
	class FactionWarBoxPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarBoxPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarBoxPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarBoxPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarBoxPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> top_prize
	class FactionWarTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarTopPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarTopPrizeCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByRank(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> const
	class FactionWarConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarConstCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarConstCfgInfo>):void;
		public static getInfo(value:string):cfg.FactionWarConstCfgInfo;
		public static getFirstInfo():cfg.FactionWarConstCfgInfo;
		 /**  玩法名称 */
		public static getNameByName(value:string):string;
		 /**  需要帮派等级 */
		public static getNeedLevelByName(value:string):number;
		 /**  需要活跃人数 */
		public static getNeedActiveCountByName(value:string):number;
		 /**  每日挑战次数 */
		public static getDayFightCountByName(value:string):number;
		 /**  废墟最大挑战次数 */
		public static getRunieFightCountByName(value:string):number;
		 /**  废墟被动技能ID */
		public static getRunieSkillIDByName(value:string):number;
		 /**  废墟最大的技能等级 */
		public static getRunieSkillMaxLevelByName(value:string):number;
		 /**  匹配时间 */
		public static getMatchTimeByName(value:string):string;
		 /**  开启时间 */
		public static getOpenTimeByName(value:string):string;
		 /**  奖励时间 */
		public static getPrizeTimeByName(value:string):string;
		 /**  宝箱领取时间 */
		public static getPrizeBoxTimeByName(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> box_prize
	class FactionWarBoxPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarBoxPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarBoxPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarBoxPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarBoxPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> fight_prize
	class FactionWarFightPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarFightPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarFightPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarFightPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarFightPrizeCfgInfo;
		 /**  难度星级 */
		public static getStarByStar(value:number):number;
		 /**  增加的被动技能技能ID_等级 */
		public static getAddSkillByStar(value:number):string;
		 /**  成功奖励 */
		public static getSucAddItemByStar(value:number):string;
		 /**  失败奖励奖励 */
		public static getFailAddItemByStar(value:number):string;
		 /**  战绩点参数 */
		public static getFightPointParamByStar(value:number):number;
		 /**  战绩点系数 */
		public static getFightPointRateByStar(value:number):number;
		 /**  失败增加战绩点 */
		public static getFailAddFightPointByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> fight_prize
	class FactionWarFightPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarFightPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarFightPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarFightPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarFightPrizeCfgInfo;
		 /**  难度星级 */
		public static getStarByStar(value:number):number;
		 /**  增加的被动技能技能ID_等级 */
		public static getAddSkillByStar(value:number):string;
		 /**  成功奖励 */
		public static getSucAddItemByStar(value:number):string;
		 /**  失败奖励奖励 */
		public static getFailAddItemByStar(value:number):string;
		 /**  战绩点参数 */
		public static getFightPointParamByStar(value:number):number;
		 /**  战绩点系数 */
		public static getFightPointRateByStar(value:number):number;
		 /**  失败增加战绩点 */
		public static getFailAddFightPointByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> const
	class FactionWarConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarConstCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarConstCfgInfo>):void;
		public static getInfo(value:string):cfg.FactionWarConstCfgInfo;
		public static getFirstInfo():cfg.FactionWarConstCfgInfo;
		 /**  玩法名称 */
		public static getNameByName(value:string):string;
		 /**  需要帮派等级 */
		public static getNeedLevelByName(value:string):number;
		 /**  需要活跃人数 */
		public static getNeedActiveCountByName(value:string):number;
		 /**  每日挑战次数 */
		public static getDayFightCountByName(value:string):number;
		 /**  废墟最大挑战次数 */
		public static getRunieFightCountByName(value:string):number;
		 /**  废墟被动技能ID */
		public static getRunieSkillIDByName(value:string):number;
		 /**  废墟最大的技能等级 */
		public static getRunieSkillMaxLevelByName(value:string):number;
		 /**  匹配时间 */
		public static getMatchTimeByName(value:string):string;
		 /**  开启时间 */
		public static getOpenTimeByName(value:string):string;
		 /**  奖励时间 */
		public static getPrizeTimeByName(value:string):string;
		 /**  宝箱领取时间 */
		public static getPrizeBoxTimeByName(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> box_prize
	class FactionWarBoxPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarBoxPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarBoxPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarBoxPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarBoxPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> fight_prize
	class FactionWarFightPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarFightPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarFightPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarFightPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarFightPrizeCfgInfo;
		 /**  难度星级 */
		public static getStarByStar(value:number):number;
		 /**  增加的被动技能技能ID_等级 */
		public static getAddSkillByStar(value:number):string;
		 /**  成功奖励 */
		public static getSucAddItemByStar(value:number):string;
		 /**  失败奖励奖励 */
		public static getFailAddItemByStar(value:number):string;
		 /**  战绩点参数 */
		public static getFightPointParamByStar(value:number):number;
		 /**  战绩点系数 */
		public static getFightPointRateByStar(value:number):number;
		 /**  失败增加战绩点 */
		public static getFailAddFightPointByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> top_prize
	class FactionWarTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.FactionWarTopPrizeCfgInfo;
		public static getFirstInfo():cfg.FactionWarTopPrizeCfgInfo;
		 /**  名次 */
		public static getRankByRank(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByRank(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_faction_war.xls】 ----> const
	class FactionWarConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FactionWarConstCfgInfo>;
			public static setup(dataArr:Array<cfg.FactionWarConstCfgInfo>):void;
		public static getInfo(value:string):cfg.FactionWarConstCfgInfo;
		public static getFirstInfo():cfg.FactionWarConstCfgInfo;
		 /**  玩法名称 */
		public static getNameByName(value:string):string;
		 /**  需要帮派等级 */
		public static getNeedLevelByName(value:string):number;
		 /**  需要活跃人数 */
		public static getNeedActiveCountByName(value:string):number;
		 /**  每日挑战次数 */
		public static getDayFightCountByName(value:string):number;
		 /**  废墟最大挑战次数 */
		public static getRunieFightCountByName(value:string):number;
		 /**  废墟被动技能ID */
		public static getRunieSkillIDByName(value:string):number;
		 /**  废墟最大的技能等级 */
		public static getRunieSkillMaxLevelByName(value:string):number;
		 /**  匹配时间 */
		public static getMatchTimeByName(value:string):string;
		 /**  开启时间 */
		public static getOpenTimeByName(value:string):string;
		 /**  奖励时间 */
		public static getPrizeTimeByName(value:string):string;
		 /**  宝箱领取时间 */
		public static getPrizeBoxTimeByName(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_family_build.xls】 ----> build
	class FamilyBuildBuildBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FamilyBuildBuildCfgInfo>;
			public static setup(dataArr:Array<cfg.FamilyBuildBuildCfgInfo>):void;
		public static getInfo(value:number):cfg.FamilyBuildBuildCfgInfo;
		public static getFirstInfo():cfg.FamilyBuildBuildCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  家具类型 */
		public static getBuildTypeByID(value:number):number;
		 /**  图片名 */
		public static getImgByID(value:number):string;
		 /**  所占行数 */
		public static getRowLengthByID(value:number):number;
		 /**  所占列数 */
		public static getColLengthByID(value:number):number;
		 /**  增加舒适度 */
		public static getAddComfortByID(value:number):number;
		 /**  获取来源_1 */
		public static getSource1ByID(value:number):number;
		 /**  获取来源_2 */
		public static getSource2ByID(value:number):number;
		 /**  所属主题ID */
		public static getThemeIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_family_build.xls】 ----> build
	class FamilyBuildBuildBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FamilyBuildBuildCfgInfo>;
			public static setup(dataArr:Array<cfg.FamilyBuildBuildCfgInfo>):void;
		public static getInfo(value:number):cfg.FamilyBuildBuildCfgInfo;
		public static getFirstInfo():cfg.FamilyBuildBuildCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  家具类型 */
		public static getBuildTypeByID(value:number):number;
		 /**  图片名 */
		public static getImgByID(value:number):string;
		 /**  所占行数 */
		public static getRowLengthByID(value:number):number;
		 /**  所占列数 */
		public static getColLengthByID(value:number):number;
		 /**  增加舒适度 */
		public static getAddComfortByID(value:number):number;
		 /**  获取来源_1 */
		public static getSource1ByID(value:number):number;
		 /**  获取来源_2 */
		public static getSource2ByID(value:number):number;
		 /**  所属主题ID */
		public static getThemeIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_family_build.xls】 ----> build
	class FamilyBuildBuildBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.FamilyBuildBuildCfgInfo>;
			public static setup(dataArr:Array<cfg.FamilyBuildBuildCfgInfo>):void;
		public static getInfo(value:number):cfg.FamilyBuildBuildCfgInfo;
		public static getFirstInfo():cfg.FamilyBuildBuildCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  家具类型 */
		public static getBuildTypeByID(value:number):number;
		 /**  图片名 */
		public static getImgByID(value:number):string;
		 /**  所占行数 */
		public static getRowLengthByID(value:number):number;
		 /**  所占列数 */
		public static getColLengthByID(value:number):number;
		 /**  增加舒适度 */
		public static getAddComfortByID(value:number):number;
		 /**  获取来源_1 */
		public static getSource1ByID(value:number):number;
		 /**  获取来源_2 */
		public static getSource2ByID(value:number):number;
		 /**  所属主题ID */
		public static getThemeIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> refine_rand
	class GodEquipRefineRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRefineRandCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRefineRandCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRefineRandCfgInfo;
		public static getFirstInfo():cfg.GodEquipRefineRandCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> quality
	class GodEquipQualityBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipQualityCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipQualityCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipQualityCfgInfo;
		public static getFirstInfo():cfg.GodEquipQualityCfgInfo;
		 /**  品质 */
		public static getQualityByQuality(value:number):number;
		 /**  随机属性条数 */
		public static getRandAttrCountByQuality(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> refine
	class GodEquipRefineBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRefineCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRefineCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRefineCfgInfo;
		public static getFirstInfo():cfg.GodEquipRefineCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemByStar(value:number):string;
		 /**  锁定一条消耗 */
		public static getLockOneNeedItemByStar(value:number):string;
		 /**  锁定两条条消耗 */
		public static getLockTwoNeedItemByStar(value:number):string;
		 /**  最大次数 */
		public static getMaxCountByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> randattr
	class GodEquipRandattrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRandattrCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRandattrCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRandattrCfgInfo;
		public static getFirstInfo():cfg.GodEquipRandattrCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  星级 */
		public static getStarByIndex(value:number):number;
		 /**  部位 */
		public static getPartByIndex(value:number):number;
		 /**  属性类型 */
		public static getAttrTypeByIndex(value:number):number;
		 /**  值区间 */
		public static getAttrValueByIndex(value:number):string;
		 /**  万分比区间 */
		public static getAttrRateByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> suit
	class GodEquipSuitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipSuitCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipSuitCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipSuitCfgInfo;
		public static getFirstInfo():cfg.GodEquipSuitCfgInfo;
		 /**  套装ID */
		public static getSuitIDBySuitID(value:number):number;
		 /**  套装名 */
		public static getSuitNameBySuitID(value:number):string;
		 /**  类型 */
		public static getTypeBySuitID(value:number):number;
		 /**  星级 */
		public static getStarBySuitID(value:number):number;
		 /**  两件属性 */
		public static getAddAttr1BySuitID(value:number):string;
		 /**  四件属性 */
		public static getAddAttr2BySuitID(value:number):string;
		 /**  四件技能技能ID_技能等级 */
		public static getAddSkillBySuitID(value:number):string;
		 /**  是否显示技能图标 */
		public static getHasSkillIconBySuitID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> suit_mgr
	class GodEquipSuitMgrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipSuitMgrCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipSuitMgrCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipSuitMgrCfgInfo;
		public static getFirstInfo():cfg.GodEquipSuitMgrCfgInfo;
		 /**  方案ID */
		public static getIDByID(value:number):number;
		 /**  方案名 */
		public static getNameByID(value:number):string;
		 /**  需要消耗 */
		public static getNeedItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> quality
	class GodEquipQualityBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipQualityCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipQualityCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipQualityCfgInfo;
		public static getFirstInfo():cfg.GodEquipQualityCfgInfo;
		 /**  品质 */
		public static getQualityByQuality(value:number):number;
		 /**  随机属性条数 */
		public static getRandAttrCountByQuality(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> suit_mgr
	class GodEquipSuitMgrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipSuitMgrCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipSuitMgrCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipSuitMgrCfgInfo;
		public static getFirstInfo():cfg.GodEquipSuitMgrCfgInfo;
		 /**  方案ID */
		public static getIDByID(value:number):number;
		 /**  方案名 */
		public static getNameByID(value:number):string;
		 /**  需要消耗 */
		public static getNeedItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> suit
	class GodEquipSuitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipSuitCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipSuitCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipSuitCfgInfo;
		public static getFirstInfo():cfg.GodEquipSuitCfgInfo;
		 /**  套装ID */
		public static getSuitIDBySuitID(value:number):number;
		 /**  套装名 */
		public static getSuitNameBySuitID(value:number):string;
		 /**  类型 */
		public static getTypeBySuitID(value:number):number;
		 /**  星级 */
		public static getStarBySuitID(value:number):number;
		 /**  两件属性 */
		public static getAddAttr1BySuitID(value:number):string;
		 /**  四件属性 */
		public static getAddAttr2BySuitID(value:number):string;
		 /**  四件技能技能ID_技能等级 */
		public static getAddSkillBySuitID(value:number):string;
		 /**  是否显示技能图标 */
		public static getHasSkillIconBySuitID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> randattr
	class GodEquipRandattrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRandattrCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRandattrCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRandattrCfgInfo;
		public static getFirstInfo():cfg.GodEquipRandattrCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  星级 */
		public static getStarByIndex(value:number):number;
		 /**  部位 */
		public static getPartByIndex(value:number):number;
		 /**  属性类型 */
		public static getAttrTypeByIndex(value:number):number;
		 /**  值区间 */
		public static getAttrValueByIndex(value:number):string;
		 /**  万分比区间 */
		public static getAttrRateByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> refine_rand
	class GodEquipRefineRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRefineRandCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRefineRandCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRefineRandCfgInfo;
		public static getFirstInfo():cfg.GodEquipRefineRandCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> refine
	class GodEquipRefineBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRefineCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRefineCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRefineCfgInfo;
		public static getFirstInfo():cfg.GodEquipRefineCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemByStar(value:number):string;
		 /**  锁定一条消耗 */
		public static getLockOneNeedItemByStar(value:number):string;
		 /**  锁定两条条消耗 */
		public static getLockTwoNeedItemByStar(value:number):string;
		 /**  最大次数 */
		public static getMaxCountByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> quality
	class GodEquipQualityBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipQualityCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipQualityCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipQualityCfgInfo;
		public static getFirstInfo():cfg.GodEquipQualityCfgInfo;
		 /**  品质 */
		public static getQualityByQuality(value:number):number;
		 /**  随机属性条数 */
		public static getRandAttrCountByQuality(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> refine
	class GodEquipRefineBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRefineCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRefineCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRefineCfgInfo;
		public static getFirstInfo():cfg.GodEquipRefineCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemByStar(value:number):string;
		 /**  锁定一条消耗 */
		public static getLockOneNeedItemByStar(value:number):string;
		 /**  锁定两条条消耗 */
		public static getLockTwoNeedItemByStar(value:number):string;
		 /**  最大次数 */
		public static getMaxCountByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> refine_rand
	class GodEquipRefineRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRefineRandCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRefineRandCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRefineRandCfgInfo;
		public static getFirstInfo():cfg.GodEquipRefineRandCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> randattr
	class GodEquipRandattrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipRandattrCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipRandattrCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipRandattrCfgInfo;
		public static getFirstInfo():cfg.GodEquipRandattrCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  星级 */
		public static getStarByIndex(value:number):number;
		 /**  部位 */
		public static getPartByIndex(value:number):number;
		 /**  属性类型 */
		public static getAttrTypeByIndex(value:number):number;
		 /**  值区间 */
		public static getAttrValueByIndex(value:number):string;
		 /**  万分比区间 */
		public static getAttrRateByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> suit_mgr
	class GodEquipSuitMgrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipSuitMgrCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipSuitMgrCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipSuitMgrCfgInfo;
		public static getFirstInfo():cfg.GodEquipSuitMgrCfgInfo;
		 /**  方案ID */
		public static getIDByID(value:number):number;
		 /**  方案名 */
		public static getNameByID(value:number):string;
		 /**  需要消耗 */
		public static getNeedItemByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_god_equip.xls】 ----> suit
	class GodEquipSuitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GodEquipSuitCfgInfo>;
			public static setup(dataArr:Array<cfg.GodEquipSuitCfgInfo>):void;
		public static getInfo(value:number):cfg.GodEquipSuitCfgInfo;
		public static getFirstInfo():cfg.GodEquipSuitCfgInfo;
		 /**  套装ID */
		public static getSuitIDBySuitID(value:number):number;
		 /**  套装名 */
		public static getSuitNameBySuitID(value:number):string;
		 /**  类型 */
		public static getTypeBySuitID(value:number):number;
		 /**  星级 */
		public static getStarBySuitID(value:number):number;
		 /**  两件属性 */
		public static getAddAttr1BySuitID(value:number):string;
		 /**  四件属性 */
		public static getAddAttr2BySuitID(value:number):string;
		 /**  四件技能技能ID_技能等级 */
		public static getAddSkillBySuitID(value:number):string;
		 /**  是否显示技能图标 */
		public static getHasSkillIconBySuitID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_guess.xls】 ----> guess
	class GuessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuessCfgInfo>;
			public static setup(dataArr:Array<cfg.GuessCfgInfo>):void;
		public static getInfo(value:number):cfg.GuessCfgInfo;
		public static getFirstInfo():cfg.GuessCfgInfo;
		 /**  问题索引 */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getDescByID(value:number):string;
		 /**  错误选项 */
		public static getWrongByID(value:number):string;
		 /**  加载图片 */
		public static getValueByID(value:number):string;
		 /**  阵营 */
		public static getPetTypeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_guess.xls】 ----> show_reward
	class GuessShowRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuessShowRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.GuessShowRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.GuessShowRewardCfgInfo;
		public static getFirstInfo():cfg.GuessShowRewardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  展示排名奖励 */
		public static getRewardsByIndex(value:number):string;
		 /**  说明 */
		public static getDesByIndex(value:number):string;
		 /**  总共可错误的次数 */
		public static getWrongCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_guess.xls】 ----> guess
	class GuessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuessCfgInfo>;
			public static setup(dataArr:Array<cfg.GuessCfgInfo>):void;
		public static getInfo(value:number):cfg.GuessCfgInfo;
		public static getFirstInfo():cfg.GuessCfgInfo;
		 /**  问题索引 */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getDescByID(value:number):string;
		 /**  错误选项 */
		public static getWrongByID(value:number):string;
		 /**  加载图片 */
		public static getValueByID(value:number):string;
		 /**  阵营 */
		public static getPetTypeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_guess.xls】 ----> show_reward
	class GuessShowRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuessShowRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.GuessShowRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.GuessShowRewardCfgInfo;
		public static getFirstInfo():cfg.GuessShowRewardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  展示排名奖励 */
		public static getRewardsByIndex(value:number):string;
		 /**  说明 */
		public static getDesByIndex(value:number):string;
		 /**  总共可错误的次数 */
		public static getWrongCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_guess.xls】 ----> show_reward
	class GuessShowRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuessShowRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.GuessShowRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.GuessShowRewardCfgInfo;
		public static getFirstInfo():cfg.GuessShowRewardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  展示排名奖励 */
		public static getRewardsByIndex(value:number):string;
		 /**  说明 */
		public static getDesByIndex(value:number):string;
		 /**  总共可错误的次数 */
		public static getWrongCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_guess.xls】 ----> guess
	class GuessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuessCfgInfo>;
			public static setup(dataArr:Array<cfg.GuessCfgInfo>):void;
		public static getInfo(value:number):cfg.GuessCfgInfo;
		public static getFirstInfo():cfg.GuessCfgInfo;
		 /**  问题索引 */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getDescByID(value:number):string;
		 /**  错误选项 */
		public static getWrongByID(value:number):string;
		 /**  加载图片 */
		public static getValueByID(value:number):string;
		 /**  阵营 */
		public static getPetTypeByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> chapter
	class HeavenChapterBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenChapterCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenChapterCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenChapterCfgInfo;
		public static getFirstInfo():cfg.HeavenChapterCfgInfo;
		 /**  章节 */
		public static getChapterByChapter(value:number):number;
		 /**  开启条件, 空白没限制，星数0表示只通关就可以没有星星限制（章节_星数;章节_星数） */
		public static getConditionByChapter(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> common
	class HeavenCommonBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenCommonCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenCommonCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenCommonCfgInfo;
		public static getFirstInfo():cfg.HeavenCommonCfgInfo;
		 /**  配置id */
		public static getIDByID(value:number):number;
		 /**  最大挑战次数 */
		public static getMaxCountByID(value:number):number;
		 /**  购买挑战次数 */
		public static getBuyCountByID(value:number):number;
		 /**  购买挑战需要物品 */
		public static getBuyNeedItemByID(value:number):string;
		 /**  祈祷免费次数 */
		public static getPrayFreeCountByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> chapter_prize
	class HeavenChapterPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenChapterPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenChapterPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenChapterPrizeCfgInfo;
		public static getFirstInfo():cfg.HeavenChapterPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  需要星数 */
		public static getStarByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_type
	class HeavenPrayPrizeTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizeTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizeTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizeTypeCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizeTypeCfgInfo;
		 /**  奖励种类 */
		public static getTypeByType(value:number):number;
		 /**  描述 */
		public static getDescByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> stage
	class HeavenStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenStageCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenStageCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenStageCfgInfo;
		public static getFirstInfo():cfg.HeavenStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonster2ByIndex(value:number):number;
		 /**  星星条件 */
		public static getStarConditionByIndex(value:number):string;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;
		 /**  首通奖励 */
		public static getFirstAccomplishAddItemByIndex(value:number):string;
		 /**  推荐战力 */
		public static getRequreFightPowerByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_items
	class HeavenPrayPrizeItemsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizeItemsCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizeItemsCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizeItemsCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizeItemsCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  奖励种类 */
		public static getTypeByIndex(value:number):number;
		 /**  概率 */
		public static getChanceByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  是否播报 */
		public static getBroadCastByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> chapter_prize
	class HeavenChapterPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenChapterPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenChapterPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenChapterPrizeCfgInfo;
		public static getFirstInfo():cfg.HeavenChapterPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  需要星数 */
		public static getStarByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_pool
	class HeavenPrayPrizePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizePoolCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizePoolCfgInfo;
		 /**  奖池类型 */
		public static getPoolByPool(value:number):number;
		 /**  奖励种类 */
		public static getTypeByPool(value:number):number;
		 /**  概率 */
		public static getChanceByPool(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> stage
	class HeavenStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenStageCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenStageCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenStageCfgInfo;
		public static getFirstInfo():cfg.HeavenStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonster2ByIndex(value:number):number;
		 /**  星星条件 */
		public static getStarConditionByIndex(value:number):string;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;
		 /**  首通奖励 */
		public static getFirstAccomplishAddItemByIndex(value:number):string;
		 /**  推荐战力 */
		public static getRequreFightPowerByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> monster_new
	class HeavenMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenMonsterNewCfgInfo;
		public static getFirstInfo():cfg.HeavenMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  附加属性值(属性|值|百分比_属性|值|百分比;)分号留空表示这个怪物没有附加属性 */
		public static getAttributeByIndex(value:number):string;
		 /**  额外技能(技能ID|技能Lv_技能ID|技能Lv;)分号留空表示这个怪物没有附加技能 */
		public static getExtraSkillByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_statue
	class HeavenPrayStatueBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayStatueCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayStatueCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayStatueCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayStatueCfgInfo;
		 /**  神像索引 */
		public static getIndexByIndex(value:number):number;
		 /**  神像名 */
		public static getNameByIndex(value:number):string;
		 /**  默认奖池 */
		public static getPoolByIndex(value:number):number;
		 /**  奖池奖励预览 */
		public static getPoolReviewByIndex(value:number):string;
		 /**  替换次数 */
		public static getAlterTimesByIndex(value:number):number;
		 /**  替换奖池 */
		public static getAlterPoolByIndex(value:number):number;
		 /**  消耗特殊道具(信物) */
		public static getNeedSpecialItemByIndex(value:number):string;
		 /**  消耗物品（钻石） */
		public static getNeedItemByIndex(value:number):string;
		 /**  10次消耗物品（钻石） */
		public static getTenNeedItemByIndex(value:number):string;
		 /**  祈祷返还物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要开启章节 */
		public static getNeedChapterByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> chapter_prize
	class HeavenChapterPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenChapterPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenChapterPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenChapterPrizeCfgInfo;
		public static getFirstInfo():cfg.HeavenChapterPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  需要星数 */
		public static getStarByIndex(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> common
	class HeavenCommonBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenCommonCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenCommonCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenCommonCfgInfo;
		public static getFirstInfo():cfg.HeavenCommonCfgInfo;
		 /**  配置id */
		public static getIDByID(value:number):number;
		 /**  最大挑战次数 */
		public static getMaxCountByID(value:number):number;
		 /**  购买挑战次数 */
		public static getBuyCountByID(value:number):number;
		 /**  购买挑战需要物品 */
		public static getBuyNeedItemByID(value:number):string;
		 /**  祈祷免费次数 */
		public static getPrayFreeCountByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> chapter
	class HeavenChapterBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenChapterCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenChapterCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenChapterCfgInfo;
		public static getFirstInfo():cfg.HeavenChapterCfgInfo;
		 /**  章节 */
		public static getChapterByChapter(value:number):number;
		 /**  开启条件, 空白没限制，星数0表示只通关就可以没有星星限制（章节_星数;章节_星数） */
		public static getConditionByChapter(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> star_condition
	class HeavenStarConditionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenStarConditionCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenStarConditionCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenStarConditionCfgInfo;
		public static getFirstInfo():cfg.HeavenStarConditionCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  参数 */
		public static getParamsByIndex(value:number):string;
		 /**  描述 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> stage
	class HeavenStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenStageCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenStageCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenStageCfgInfo;
		public static getFirstInfo():cfg.HeavenStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonster2ByIndex(value:number):number;
		 /**  星星条件 */
		public static getStarConditionByIndex(value:number):string;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;
		 /**  首通奖励 */
		public static getFirstAccomplishAddItemByIndex(value:number):string;
		 /**  推荐战力 */
		public static getRequreFightPowerByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> common
	class HeavenCommonBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenCommonCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenCommonCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenCommonCfgInfo;
		public static getFirstInfo():cfg.HeavenCommonCfgInfo;
		 /**  配置id */
		public static getIDByID(value:number):number;
		 /**  最大挑战次数 */
		public static getMaxCountByID(value:number):number;
		 /**  购买挑战次数 */
		public static getBuyCountByID(value:number):number;
		 /**  购买挑战需要物品 */
		public static getBuyNeedItemByID(value:number):string;
		 /**  祈祷免费次数 */
		public static getPrayFreeCountByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> chapter
	class HeavenChapterBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenChapterCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenChapterCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenChapterCfgInfo;
		public static getFirstInfo():cfg.HeavenChapterCfgInfo;
		 /**  章节 */
		public static getChapterByChapter(value:number):number;
		 /**  开启条件, 空白没限制，星数0表示只通关就可以没有星星限制（章节_星数;章节_星数） */
		public static getConditionByChapter(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> monster_new
	class HeavenMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenMonsterNewCfgInfo;
		public static getFirstInfo():cfg.HeavenMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  附加属性值(属性|值|百分比_属性|值|百分比;)分号留空表示这个怪物没有附加属性 */
		public static getAttributeByIndex(value:number):string;
		 /**  额外技能(技能ID|技能Lv_技能ID|技能Lv;)分号留空表示这个怪物没有附加技能 */
		public static getExtraSkillByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> monster_new
	class HeavenMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenMonsterNewCfgInfo;
		public static getFirstInfo():cfg.HeavenMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  附加属性值(属性|值|百分比_属性|值|百分比;)分号留空表示这个怪物没有附加属性 */
		public static getAttributeByIndex(value:number):string;
		 /**  额外技能(技能ID|技能Lv_技能ID|技能Lv;)分号留空表示这个怪物没有附加技能 */
		public static getExtraSkillByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> star_condition
	class HeavenStarConditionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenStarConditionCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenStarConditionCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenStarConditionCfgInfo;
		public static getFirstInfo():cfg.HeavenStarConditionCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  参数 */
		public static getParamsByIndex(value:number):string;
		 /**  描述 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_statue
	class HeavenPrayStatueBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayStatueCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayStatueCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayStatueCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayStatueCfgInfo;
		 /**  神像索引 */
		public static getIndexByIndex(value:number):number;
		 /**  神像名 */
		public static getNameByIndex(value:number):string;
		 /**  默认奖池 */
		public static getPoolByIndex(value:number):number;
		 /**  奖池奖励预览 */
		public static getPoolReviewByIndex(value:number):string;
		 /**  替换次数 */
		public static getAlterTimesByIndex(value:number):number;
		 /**  替换奖池 */
		public static getAlterPoolByIndex(value:number):number;
		 /**  消耗特殊道具(信物) */
		public static getNeedSpecialItemByIndex(value:number):string;
		 /**  消耗物品（钻石） */
		public static getNeedItemByIndex(value:number):string;
		 /**  10次消耗物品（钻石） */
		public static getTenNeedItemByIndex(value:number):string;
		 /**  祈祷返还物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要开启章节 */
		public static getNeedChapterByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_pool
	class HeavenPrayPrizePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizePoolCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizePoolCfgInfo;
		 /**  奖池类型 */
		public static getPoolByPool(value:number):number;
		 /**  奖励种类 */
		public static getTypeByPool(value:number):number;
		 /**  概率 */
		public static getChanceByPool(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_items
	class HeavenPrayPrizeItemsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizeItemsCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizeItemsCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizeItemsCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizeItemsCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  奖励种类 */
		public static getTypeByIndex(value:number):number;
		 /**  概率 */
		public static getChanceByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  是否播报 */
		public static getBroadCastByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_type
	class HeavenPrayPrizeTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizeTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizeTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizeTypeCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizeTypeCfgInfo;
		 /**  奖励种类 */
		public static getTypeByType(value:number):number;
		 /**  描述 */
		public static getDescByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_pool
	class HeavenPrayPrizePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizePoolCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizePoolCfgInfo;
		 /**  奖池类型 */
		public static getPoolByPool(value:number):number;
		 /**  奖励种类 */
		public static getTypeByPool(value:number):number;
		 /**  概率 */
		public static getChanceByPool(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> star_condition
	class HeavenStarConditionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenStarConditionCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenStarConditionCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenStarConditionCfgInfo;
		public static getFirstInfo():cfg.HeavenStarConditionCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  参数 */
		public static getParamsByIndex(value:number):string;
		 /**  描述 */
		public static getDescByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_statue
	class HeavenPrayStatueBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayStatueCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayStatueCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayStatueCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayStatueCfgInfo;
		 /**  神像索引 */
		public static getIndexByIndex(value:number):number;
		 /**  神像名 */
		public static getNameByIndex(value:number):string;
		 /**  默认奖池 */
		public static getPoolByIndex(value:number):number;
		 /**  奖池奖励预览 */
		public static getPoolReviewByIndex(value:number):string;
		 /**  替换次数 */
		public static getAlterTimesByIndex(value:number):number;
		 /**  替换奖池 */
		public static getAlterPoolByIndex(value:number):number;
		 /**  消耗特殊道具(信物) */
		public static getNeedSpecialItemByIndex(value:number):string;
		 /**  消耗物品（钻石） */
		public static getNeedItemByIndex(value:number):string;
		 /**  10次消耗物品（钻石） */
		public static getTenNeedItemByIndex(value:number):string;
		 /**  祈祷返还物品 */
		public static getAddItemByIndex(value:number):string;
		 /**  需要开启章节 */
		public static getNeedChapterByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_items
	class HeavenPrayPrizeItemsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizeItemsCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizeItemsCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizeItemsCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizeItemsCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  奖励种类 */
		public static getTypeByIndex(value:number):number;
		 /**  概率 */
		public static getChanceByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  是否播报 */
		public static getBroadCastByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_heaven.xls】 ----> pray_prize_type
	class HeavenPrayPrizeTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HeavenPrayPrizeTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.HeavenPrayPrizeTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.HeavenPrayPrizeTypeCfgInfo;
		public static getFirstInfo():cfg.HeavenPrayPrizeTypeCfgInfo;
		 /**  奖励种类 */
		public static getTypeByType(value:number):number;
		 /**  描述 */
		public static getDescByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> unlock
	class HolyUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyUnlockCfgInfo;
		public static getFirstInfo():cfg.HolyUnlockCfgInfo;
		 /**  类型1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getPetTypeByPetType(value:number):number;
		 /**  需要伙伴星级个数星级_个数 */
		public static getNeedPetCountByPetType(value:number):string;
		 /**  名称 */
		public static getNameByPetType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> advance
	class HolyAdvanceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyAdvanceCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyAdvanceCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyAdvanceCfgInfo;
		public static getFirstInfo():cfg.HolyAdvanceCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  类型1;//水2;//火3;//草4;//光5;//暗 */
		public static getPetTypeById(value:number):number;
		 /**  等级 */
		public static getLevelById(value:number):number;
		 /**  需要携带物等级 */
		public static getNeedHolyLevelById(value:number):number;
		 /**  需要伙伴星级个数星级_个数 */
		public static getNeedPetCountById(value:number):string;
		 /**  需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  增加属性属性类型_属性值 */
		public static getAddAttrById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> unlock
	class HolyUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyUnlockCfgInfo;
		public static getFirstInfo():cfg.HolyUnlockCfgInfo;
		 /**  类型1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getPetTypeByPetType(value:number):number;
		 /**  需要伙伴星级个数星级_个数 */
		public static getNeedPetCountByPetType(value:number):string;
		 /**  名称 */
		public static getNameByPetType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> upgrade
	class HolyUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyUpgradeCfgInfo;
		public static getFirstInfo():cfg.HolyUpgradeCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  类型1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getPetTypeById(value:number):number;
		 /**  等级 */
		public static getLevelById(value:number):number;
		 /**  此级最大经验 */
		public static getMaxExpById(value:number):number;
		 /**  每次增加经验 */
		public static getAddExpById(value:number):string;
		 /**  需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  增加属性属性类型|属性值 */
		public static getAddAttrById(value:number):string;
		 /**  每十点经验增加属性属性类型|属性值 */
		public static getExpAddAttrById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> upgrade
	class HolyUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyUpgradeCfgInfo;
		public static getFirstInfo():cfg.HolyUpgradeCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  类型1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getPetTypeById(value:number):number;
		 /**  等级 */
		public static getLevelById(value:number):number;
		 /**  此级最大经验 */
		public static getMaxExpById(value:number):number;
		 /**  每次增加经验 */
		public static getAddExpById(value:number):string;
		 /**  需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  增加属性属性类型|属性值 */
		public static getAddAttrById(value:number):string;
		 /**  每十点经验增加属性属性类型|属性值 */
		public static getExpAddAttrById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> advance
	class HolyAdvanceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyAdvanceCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyAdvanceCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyAdvanceCfgInfo;
		public static getFirstInfo():cfg.HolyAdvanceCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  类型1;//水2;//火3;//草4;//光5;//暗 */
		public static getPetTypeById(value:number):number;
		 /**  等级 */
		public static getLevelById(value:number):number;
		 /**  需要携带物等级 */
		public static getNeedHolyLevelById(value:number):number;
		 /**  需要伙伴星级个数星级_个数 */
		public static getNeedPetCountById(value:number):string;
		 /**  需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  增加属性属性类型_属性值 */
		public static getAddAttrById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> upgrade
	class HolyUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyUpgradeCfgInfo;
		public static getFirstInfo():cfg.HolyUpgradeCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  类型1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getPetTypeById(value:number):number;
		 /**  等级 */
		public static getLevelById(value:number):number;
		 /**  此级最大经验 */
		public static getMaxExpById(value:number):number;
		 /**  每次增加经验 */
		public static getAddExpById(value:number):string;
		 /**  需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  增加属性属性类型|属性值 */
		public static getAddAttrById(value:number):string;
		 /**  每十点经验增加属性属性类型|属性值 */
		public static getExpAddAttrById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> unlock
	class HolyUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyUnlockCfgInfo;
		public static getFirstInfo():cfg.HolyUnlockCfgInfo;
		 /**  类型1;//水2;//火3;//风4;//太阳5;//月亮 */
		public static getPetTypeByPetType(value:number):number;
		 /**  需要伙伴星级个数星级_个数 */
		public static getNeedPetCountByPetType(value:number):string;
		 /**  名称 */
		public static getNameByPetType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_holy.xls】 ----> advance
	class HolyAdvanceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HolyAdvanceCfgInfo>;
			public static setup(dataArr:Array<cfg.HolyAdvanceCfgInfo>):void;
		public static getInfo(value:number):cfg.HolyAdvanceCfgInfo;
		public static getFirstInfo():cfg.HolyAdvanceCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  类型1;//水2;//火3;//草4;//光5;//暗 */
		public static getPetTypeById(value:number):number;
		 /**  等级 */
		public static getLevelById(value:number):number;
		 /**  需要携带物等级 */
		public static getNeedHolyLevelById(value:number):number;
		 /**  需要伙伴星级个数星级_个数 */
		public static getNeedPetCountById(value:number):string;
		 /**  需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  增加属性属性类型_属性值 */
		public static getAddAttrById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> activity_drop
	class HookActivityDropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookActivityDropCfgInfo>;
			public static setup(dataArr:Array<cfg.HookActivityDropCfgInfo>):void;
		public static getInfo(value:number):cfg.HookActivityDropCfgInfo;
		public static getFirstInfo():cfg.HookActivityDropCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  每小时固定掉落个数 */
		public static getHourCountByActivityID(value:number):number;
		 /**  道具ID */
		public static getItemIDByActivityID(value:number):number;
		 /**  持续天数(0与活动一致) */
		public static getDaysByActivityID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> monster_new
	class HookMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.HookMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.HookMonsterNewCfgInfo;
		public static getFirstInfo():cfg.HookMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  fuck ,为什么不加描述 */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  Boss名称 */
		public static getBossNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> chapter_unlock
	class HookChapterUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookChapterUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.HookChapterUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.HookChapterUnlockCfgInfo;
		public static getFirstInfo():cfg.HookChapterUnlockCfgInfo;
		 /**  区域ID */
		public static getIDByID(value:number):number;
		 /**  区域名 */
		public static getAreaNameByID(value:number):string;
		 /**  场景列表 */
		public static getSceneListByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> stage
	class HookStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookStageCfgInfo>;
			public static setup(dataArr:Array<cfg.HookStageCfgInfo>):void;
		public static getInfo(value:number):cfg.HookStageCfgInfo;
		public static getFirstInfo():cfg.HookStageCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  场景ID */
		public static getSceneIDByStageID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByStageID(value:number):number;
		 /**  最大回合 */
		public static getMaxRoundByStageID(value:number):number;
		 /**  刷怪boss */
		public static getBossGroupIDByStageID(value:number):number;
		 /**  普通掉落 */
		public static getHookDropIDByStageID(value:number):number;
		 /**  Boss掉落 */
		public static getBossDropIDByStageID(value:number):number;
		 /**  使用道具掉落 */
		public static getUseItemDropIDByStageID(value:number):number;
		 /**  战斗完CD */
		public static getFightCDByStageID(value:number):number;
		 /**  最大远航积分 */
		public static getMaxSailPointByStageID(value:number):number;
		 /**  推荐战力 */
		public static getPowerByStageID(value:number):number;
		 /**  BOSS来袭形象 */
		public static getBossShapeByStageID(value:number):number;
		 /**  奖励预览 */
		public static getPrizePreviewByStageID(value:number):number;
		 /**  背景图 */
		public static getBgmapByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> normal_dropInfo
	class HookNormalDropInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookNormalDropInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.HookNormalDropInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.HookNormalDropInfoCfgInfo;
		public static getFirstInfo():cfg.HookNormalDropInfoCfgInfo;
		 /**  ID */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  道具列表 */
		public static getItemListByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> stage
	class HookStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookStageCfgInfo>;
			public static setup(dataArr:Array<cfg.HookStageCfgInfo>):void;
		public static getInfo(value:number):cfg.HookStageCfgInfo;
		public static getFirstInfo():cfg.HookStageCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  场景ID */
		public static getSceneIDByStageID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByStageID(value:number):number;
		 /**  最大回合 */
		public static getMaxRoundByStageID(value:number):number;
		 /**  刷怪boss */
		public static getBossGroupIDByStageID(value:number):number;
		 /**  普通掉落 */
		public static getHookDropIDByStageID(value:number):number;
		 /**  Boss掉落 */
		public static getBossDropIDByStageID(value:number):number;
		 /**  使用道具掉落 */
		public static getUseItemDropIDByStageID(value:number):number;
		 /**  战斗完CD */
		public static getFightCDByStageID(value:number):number;
		 /**  最大远航积分 */
		public static getMaxSailPointByStageID(value:number):number;
		 /**  推荐战力 */
		public static getPowerByStageID(value:number):number;
		 /**  BOSS来袭形象 */
		public static getBossShapeByStageID(value:number):number;
		 /**  奖励预览 */
		public static getPrizePreviewByStageID(value:number):number;
		 /**  背景图 */
		public static getBgmapByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> scene
	class HookSceneBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookSceneCfgInfo>;
			public static setup(dataArr:Array<cfg.HookSceneCfgInfo>):void;
		public static getInfo(value:number):cfg.HookSceneCfgInfo;
		public static getFirstInfo():cfg.HookSceneCfgInfo;
		 /**  场景ID */
		public static getSceneIDBySceneID(value:number):number;
		 /**  章节 */
		public static getChapterNameBySceneID(value:number):string;
		 /**  场景名称 */
		public static getSceneNameBySceneID(value:number):string;
		 /**  场景类型 */
		public static getBelongTypeBySceneID(value:number):number;
		 /**  需要等级 */
		public static getNeedLevelBySceneID(value:number):number;
		 /**  需要前置关卡 */
		public static getNeedStageBySceneID(value:number):number;
		 /**  场景资源名称 */
		public static getSceneResourceBySceneID(value:number):string;
		 /**  场景背景音乐 */
		public static getBGMPathBySceneID(value:number):string;
		 /**  关卡数 */
		public static getStageBySceneID(value:number):string;
		 /**  节点 */
		public static getNodenunmBySceneID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> stage_prize
	class HookStagePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookStagePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.HookStagePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.HookStagePrizeCfgInfo;
		public static getFirstInfo():cfg.HookStagePrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;
		 /**  广播 */
		public static getBroadcastByStageID(value:number):number;
		 /**  是否预告 */
		public static getIsTargetByStageID(value:number):number;
		 /**  是否御三家 */
		public static getThreeHomeByStageID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> boss_dropInfo
	class HookBossDropInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookBossDropInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.HookBossDropInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.HookBossDropInfoCfgInfo;
		public static getFirstInfo():cfg.HookBossDropInfoCfgInfo;
		 /**  ID */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  道具列表 */
		public static getItemListByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> stage_prize
	class HookStagePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookStagePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.HookStagePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.HookStagePrizeCfgInfo;
		public static getFirstInfo():cfg.HookStagePrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;
		 /**  广播 */
		public static getBroadcastByStageID(value:number):number;
		 /**  是否预告 */
		public static getIsTargetByStageID(value:number):number;
		 /**  是否御三家 */
		public static getThreeHomeByStageID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> buy_sweepcount
	class HookBuySweepcountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookBuySweepcountCfgInfo>;
			public static setup(dataArr:Array<cfg.HookBuySweepcountCfgInfo>):void;
		public static getInfo(value:number):cfg.HookBuySweepcountCfgInfo;
		public static getFirstInfo():cfg.HookBuySweepcountCfgInfo;
		 /**  次数 */
		public static getBuyCountByBuyCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByBuyCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> activity_drop
	class HookActivityDropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookActivityDropCfgInfo>;
			public static setup(dataArr:Array<cfg.HookActivityDropCfgInfo>):void;
		public static getInfo(value:number):cfg.HookActivityDropCfgInfo;
		public static getFirstInfo():cfg.HookActivityDropCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  每小时固定掉落个数 */
		public static getHourCountByActivityID(value:number):number;
		 /**  道具ID */
		public static getItemIDByActivityID(value:number):number;
		 /**  持续天数(0与活动一致) */
		public static getDaysByActivityID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> buy_sweepcount
	class HookBuySweepcountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookBuySweepcountCfgInfo>;
			public static setup(dataArr:Array<cfg.HookBuySweepcountCfgInfo>):void;
		public static getInfo(value:number):cfg.HookBuySweepcountCfgInfo;
		public static getFirstInfo():cfg.HookBuySweepcountCfgInfo;
		 /**  次数 */
		public static getBuyCountByBuyCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByBuyCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> activity_drop
	class HookActivityDropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookActivityDropCfgInfo>;
			public static setup(dataArr:Array<cfg.HookActivityDropCfgInfo>):void;
		public static getInfo(value:number):cfg.HookActivityDropCfgInfo;
		public static getFirstInfo():cfg.HookActivityDropCfgInfo;
		 /**  活动ID */
		public static getActivityIDByActivityID(value:number):number;
		 /**  每小时固定掉落个数 */
		public static getHourCountByActivityID(value:number):number;
		 /**  道具ID */
		public static getItemIDByActivityID(value:number):number;
		 /**  持续天数(0与活动一致) */
		public static getDaysByActivityID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> scene
	class HookSceneBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookSceneCfgInfo>;
			public static setup(dataArr:Array<cfg.HookSceneCfgInfo>):void;
		public static getInfo(value:number):cfg.HookSceneCfgInfo;
		public static getFirstInfo():cfg.HookSceneCfgInfo;
		 /**  场景ID */
		public static getSceneIDBySceneID(value:number):number;
		 /**  章节 */
		public static getChapterNameBySceneID(value:number):string;
		 /**  场景名称 */
		public static getSceneNameBySceneID(value:number):string;
		 /**  场景类型 */
		public static getBelongTypeBySceneID(value:number):number;
		 /**  需要等级 */
		public static getNeedLevelBySceneID(value:number):number;
		 /**  需要前置关卡 */
		public static getNeedStageBySceneID(value:number):number;
		 /**  场景资源名称 */
		public static getSceneResourceBySceneID(value:number):string;
		 /**  场景背景音乐 */
		public static getBGMPathBySceneID(value:number):string;
		 /**  关卡数 */
		public static getStageBySceneID(value:number):string;
		 /**  节点 */
		public static getNodenunmBySceneID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> boss_dropInfo
	class HookBossDropInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookBossDropInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.HookBossDropInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.HookBossDropInfoCfgInfo;
		public static getFirstInfo():cfg.HookBossDropInfoCfgInfo;
		 /**  ID */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  道具列表 */
		public static getItemListByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> normal_dropInfo
	class HookNormalDropInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookNormalDropInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.HookNormalDropInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.HookNormalDropInfoCfgInfo;
		public static getFirstInfo():cfg.HookNormalDropInfoCfgInfo;
		 /**  ID */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  道具列表 */
		public static getItemListByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> chapter_unlock
	class HookChapterUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookChapterUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.HookChapterUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.HookChapterUnlockCfgInfo;
		public static getFirstInfo():cfg.HookChapterUnlockCfgInfo;
		 /**  区域ID */
		public static getIDByID(value:number):number;
		 /**  区域名 */
		public static getAreaNameByID(value:number):string;
		 /**  场景列表 */
		public static getSceneListByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> normal_dropInfo
	class HookNormalDropInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookNormalDropInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.HookNormalDropInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.HookNormalDropInfoCfgInfo;
		public static getFirstInfo():cfg.HookNormalDropInfoCfgInfo;
		 /**  ID */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  道具列表 */
		public static getItemListByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> chapter_unlock
	class HookChapterUnlockBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookChapterUnlockCfgInfo>;
			public static setup(dataArr:Array<cfg.HookChapterUnlockCfgInfo>):void;
		public static getInfo(value:number):cfg.HookChapterUnlockCfgInfo;
		public static getFirstInfo():cfg.HookChapterUnlockCfgInfo;
		 /**  区域ID */
		public static getIDByID(value:number):number;
		 /**  区域名 */
		public static getAreaNameByID(value:number):string;
		 /**  场景列表 */
		public static getSceneListByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> monster_new
	class HookMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.HookMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.HookMonsterNewCfgInfo;
		public static getFirstInfo():cfg.HookMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  fuck ,为什么不加描述 */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  Boss名称 */
		public static getBossNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> buy_sweepcount
	class HookBuySweepcountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookBuySweepcountCfgInfo>;
			public static setup(dataArr:Array<cfg.HookBuySweepcountCfgInfo>):void;
		public static getInfo(value:number):cfg.HookBuySweepcountCfgInfo;
		public static getFirstInfo():cfg.HookBuySweepcountCfgInfo;
		 /**  次数 */
		public static getBuyCountByBuyCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByBuyCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> monster_new
	class HookMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.HookMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.HookMonsterNewCfgInfo;
		public static getFirstInfo():cfg.HookMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  fuck ,为什么不加描述 */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  Boss名称 */
		public static getBossNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> stage_prize
	class HookStagePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookStagePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.HookStagePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.HookStagePrizeCfgInfo;
		public static getFirstInfo():cfg.HookStagePrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;
		 /**  广播 */
		public static getBroadcastByStageID(value:number):number;
		 /**  是否预告 */
		public static getIsTargetByStageID(value:number):number;
		 /**  是否御三家 */
		public static getThreeHomeByStageID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> stage
	class HookStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookStageCfgInfo>;
			public static setup(dataArr:Array<cfg.HookStageCfgInfo>):void;
		public static getInfo(value:number):cfg.HookStageCfgInfo;
		public static getFirstInfo():cfg.HookStageCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  场景ID */
		public static getSceneIDByStageID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByStageID(value:number):number;
		 /**  最大回合 */
		public static getMaxRoundByStageID(value:number):number;
		 /**  刷怪boss */
		public static getBossGroupIDByStageID(value:number):number;
		 /**  普通掉落 */
		public static getHookDropIDByStageID(value:number):number;
		 /**  Boss掉落 */
		public static getBossDropIDByStageID(value:number):number;
		 /**  使用道具掉落 */
		public static getUseItemDropIDByStageID(value:number):number;
		 /**  战斗完CD */
		public static getFightCDByStageID(value:number):number;
		 /**  最大远航积分 */
		public static getMaxSailPointByStageID(value:number):number;
		 /**  推荐战力 */
		public static getPowerByStageID(value:number):number;
		 /**  BOSS来袭形象 */
		public static getBossShapeByStageID(value:number):number;
		 /**  奖励预览 */
		public static getPrizePreviewByStageID(value:number):number;
		 /**  背景图 */
		public static getBgmapByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> scene
	class HookSceneBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookSceneCfgInfo>;
			public static setup(dataArr:Array<cfg.HookSceneCfgInfo>):void;
		public static getInfo(value:number):cfg.HookSceneCfgInfo;
		public static getFirstInfo():cfg.HookSceneCfgInfo;
		 /**  场景ID */
		public static getSceneIDBySceneID(value:number):number;
		 /**  章节 */
		public static getChapterNameBySceneID(value:number):string;
		 /**  场景名称 */
		public static getSceneNameBySceneID(value:number):string;
		 /**  场景类型 */
		public static getBelongTypeBySceneID(value:number):number;
		 /**  需要等级 */
		public static getNeedLevelBySceneID(value:number):number;
		 /**  需要前置关卡 */
		public static getNeedStageBySceneID(value:number):number;
		 /**  场景资源名称 */
		public static getSceneResourceBySceneID(value:number):string;
		 /**  场景背景音乐 */
		public static getBGMPathBySceneID(value:number):string;
		 /**  关卡数 */
		public static getStageBySceneID(value:number):string;
		 /**  节点 */
		public static getNodenunmBySceneID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_hook.xls】 ----> boss_dropInfo
	class HookBossDropInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HookBossDropInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.HookBossDropInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.HookBossDropInfoCfgInfo;
		public static getFirstInfo():cfg.HookBossDropInfoCfgInfo;
		 /**  ID */
		public static getIndexByIndex(value:number):number;
		 /**  章节 */
		public static getChapterByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  道具列表 */
		public static getItemListByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> const
	class HorcruxConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxConstCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxConstCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxConstCfgInfo;
		public static getFirstInfo():cfg.HorcruxConstCfgInfo;
		 /**  可觉醒星级 */
		public static getAwakeStarByAwakeStar(value:number):number;
		 /**  30级后升级所需星级 */
		public static getContinueStarByAwakeStar(value:number):string;
		 /**  新技能等级 */
		public static getNewSkillLevelByAwakeStar(value:number):number;
		 /**  消耗本体最低等级 */
		public static getConsumeSelfLevelByAwakeStar(value:number):number;
		 /**  描述对应等级 */
		public static getDesLevelByAwakeStar(value:number):string;
		 /**  拥有魂器最低星级 */
		public static getMinBeginStarByAwakeStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> horcrux_prop
	class HorcruxPropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxPropCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxPropCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxPropCfgInfo;
		public static getFirstInfo():cfg.HorcruxPropCfgInfo;
		 /**  携带物ID */
		public static getIDByID(value:number):number;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  强化所需材料_数量 */
		public static getMaterialsByID(value:number):string;
		 /**  精灵本体ID_星级_数量 */
		public static getPetSelfByID(value:number):string;
		 /**  获取道具 */
		public static getGetItemByID(value:number):string;
		 /**  追加属性 */
		public static getPropNumByID(value:number):string;
		 /**  技能 */
		public static getSkillByID(value:number):string;
		 /**  战力 */
		public static getFightPowerByID(value:number):number;
		 /**  携带物评分 */
		public static getScoreByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> const
	class HorcruxConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxConstCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxConstCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxConstCfgInfo;
		public static getFirstInfo():cfg.HorcruxConstCfgInfo;
		 /**  可觉醒星级 */
		public static getAwakeStarByAwakeStar(value:number):number;
		 /**  30级后升级所需星级 */
		public static getContinueStarByAwakeStar(value:number):string;
		 /**  新技能等级 */
		public static getNewSkillLevelByAwakeStar(value:number):number;
		 /**  消耗本体最低等级 */
		public static getConsumeSelfLevelByAwakeStar(value:number):number;
		 /**  描述对应等级 */
		public static getDesLevelByAwakeStar(value:number):string;
		 /**  拥有魂器最低星级 */
		public static getMinBeginStarByAwakeStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> horcrux_prop
	class HorcruxPropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxPropCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxPropCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxPropCfgInfo;
		public static getFirstInfo():cfg.HorcruxPropCfgInfo;
		 /**  携带物ID */
		public static getIDByID(value:number):number;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  强化所需材料_数量 */
		public static getMaterialsByID(value:number):string;
		 /**  精灵本体ID_星级_数量 */
		public static getPetSelfByID(value:number):string;
		 /**  获取道具 */
		public static getGetItemByID(value:number):string;
		 /**  追加属性 */
		public static getPropNumByID(value:number):string;
		 /**  技能 */
		public static getSkillByID(value:number):string;
		 /**  战力 */
		public static getFightPowerByID(value:number):number;
		 /**  携带物评分 */
		public static getScoreByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> horcrux
	class HorcruxBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxCfgInfo;
		public static getFirstInfo():cfg.HorcruxCfgInfo;
		 /**  携带物ID */
		public static getIDByID(value:number):number;
		 /**  携带物名 */
		public static getNameByID(value:number):string;
		 /**  所属精灵 */
		public static getPetIDByID(value:number):number;
		 /**  效果描述文本1 */
		public static getEffectDesc1ByID(value:number):string;
		 /**  效果描述文本2 */
		public static getEffectDesc2ByID(value:number):string;
		 /**  效果描述文本3 */
		public static getEffectDesc3ByID(value:number):string;
		 /**  效果描述文本4 */
		public static getEffectDesc4ByID(value:number):string;
		 /**  背景文案 */
		public static getBackGroundByID(value:number):string;
		 /**  美术图标 */
		public static getIconByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> const
	class HorcruxConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxConstCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxConstCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxConstCfgInfo;
		public static getFirstInfo():cfg.HorcruxConstCfgInfo;
		 /**  可觉醒星级 */
		public static getAwakeStarByAwakeStar(value:number):number;
		 /**  30级后升级所需星级 */
		public static getContinueStarByAwakeStar(value:number):string;
		 /**  新技能等级 */
		public static getNewSkillLevelByAwakeStar(value:number):number;
		 /**  消耗本体最低等级 */
		public static getConsumeSelfLevelByAwakeStar(value:number):number;
		 /**  描述对应等级 */
		public static getDesLevelByAwakeStar(value:number):string;
		 /**  拥有魂器最低星级 */
		public static getMinBeginStarByAwakeStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> horcrux
	class HorcruxBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxCfgInfo;
		public static getFirstInfo():cfg.HorcruxCfgInfo;
		 /**  携带物ID */
		public static getIDByID(value:number):number;
		 /**  携带物名 */
		public static getNameByID(value:number):string;
		 /**  所属精灵 */
		public static getPetIDByID(value:number):number;
		 /**  效果描述文本1 */
		public static getEffectDesc1ByID(value:number):string;
		 /**  效果描述文本2 */
		public static getEffectDesc2ByID(value:number):string;
		 /**  效果描述文本3 */
		public static getEffectDesc3ByID(value:number):string;
		 /**  效果描述文本4 */
		public static getEffectDesc4ByID(value:number):string;
		 /**  背景文案 */
		public static getBackGroundByID(value:number):string;
		 /**  美术图标 */
		public static getIconByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> horcrux_prop
	class HorcruxPropBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxPropCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxPropCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxPropCfgInfo;
		public static getFirstInfo():cfg.HorcruxPropCfgInfo;
		 /**  携带物ID */
		public static getIDByID(value:number):number;
		 /**  等级 */
		public static getLevelByID(value:number):number;
		 /**  强化所需材料_数量 */
		public static getMaterialsByID(value:number):string;
		 /**  精灵本体ID_星级_数量 */
		public static getPetSelfByID(value:number):string;
		 /**  获取道具 */
		public static getGetItemByID(value:number):string;
		 /**  追加属性 */
		public static getPropNumByID(value:number):string;
		 /**  技能 */
		public static getSkillByID(value:number):string;
		 /**  战力 */
		public static getFightPowerByID(value:number):number;
		 /**  携带物评分 */
		public static getScoreByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_horcrux.xls】 ----> horcrux
	class HorcruxBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.HorcruxCfgInfo>;
			public static setup(dataArr:Array<cfg.HorcruxCfgInfo>):void;
		public static getInfo(value:number):cfg.HorcruxCfgInfo;
		public static getFirstInfo():cfg.HorcruxCfgInfo;
		 /**  携带物ID */
		public static getIDByID(value:number):number;
		 /**  携带物名 */
		public static getNameByID(value:number):string;
		 /**  所属精灵 */
		public static getPetIDByID(value:number):number;
		 /**  效果描述文本1 */
		public static getEffectDesc1ByID(value:number):string;
		 /**  效果描述文本2 */
		public static getEffectDesc2ByID(value:number):string;
		 /**  效果描述文本3 */
		public static getEffectDesc3ByID(value:number):string;
		 /**  效果描述文本4 */
		public static getEffectDesc4ByID(value:number):string;
		 /**  背景文案 */
		public static getBackGroundByID(value:number):string;
		 /**  美术图标 */
		public static getIconByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> achieve
	class IllustrationAchieveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationAchieveCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationAchieveCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationAchieveCfgInfo;
		public static getFirstInfo():cfg.IllustrationAchieveCfgInfo;
		 /**  成就id */
		public static getIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeById(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeById(value:number):number;
		 /**  值 */
		public static getValueById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  完成后的奖励 */
		public static getAddItemById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> trammel
	class IllustrationTrammelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationTrammelCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationTrammelCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationTrammelCfgInfo;
		public static getFirstInfo():cfg.IllustrationTrammelCfgInfo;
		 /**  羁绊id */
		public static getIdById(value:number):number;
		 /**  需要的皮肤id */
		public static getNeedSkinsById(value:number):string;
		 /**  激活后加的属性 */
		public static getAddAttrById(value:number):string;
		 /**  加成属性战力值 */
		public static getFightPowerById(value:number):number;
		 /**  精灵组合称号 */
		public static getCombinationtitleById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> power
	class IllustrationPowerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationPowerCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationPowerCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationPowerCfgInfo;
		public static getFirstInfo():cfg.IllustrationPowerCfgInfo;
		 /**  成就id */
		public static getIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeById(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeById(value:number):number;
		 /**  值 */
		public static getValueById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  完成后的奖励 */
		public static getAddItemById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> power
	class IllustrationPowerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationPowerCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationPowerCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationPowerCfgInfo;
		public static getFirstInfo():cfg.IllustrationPowerCfgInfo;
		 /**  成就id */
		public static getIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeById(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeById(value:number):number;
		 /**  值 */
		public static getValueById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  完成后的奖励 */
		public static getAddItemById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> trammel
	class IllustrationTrammelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationTrammelCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationTrammelCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationTrammelCfgInfo;
		public static getFirstInfo():cfg.IllustrationTrammelCfgInfo;
		 /**  羁绊id */
		public static getIdById(value:number):number;
		 /**  需要的皮肤id */
		public static getNeedSkinsById(value:number):string;
		 /**  激活后加的属性 */
		public static getAddAttrById(value:number):string;
		 /**  加成属性战力值 */
		public static getFightPowerById(value:number):number;
		 /**  精灵组合称号 */
		public static getCombinationtitleById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> power
	class IllustrationPowerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationPowerCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationPowerCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationPowerCfgInfo;
		public static getFirstInfo():cfg.IllustrationPowerCfgInfo;
		 /**  成就id */
		public static getIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeById(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeById(value:number):number;
		 /**  值 */
		public static getValueById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  完成后的奖励 */
		public static getAddItemById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> achieve
	class IllustrationAchieveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationAchieveCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationAchieveCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationAchieveCfgInfo;
		public static getFirstInfo():cfg.IllustrationAchieveCfgInfo;
		 /**  成就id */
		public static getIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeById(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeById(value:number):number;
		 /**  值 */
		public static getValueById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  完成后的奖励 */
		public static getAddItemById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> trammel
	class IllustrationTrammelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationTrammelCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationTrammelCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationTrammelCfgInfo;
		public static getFirstInfo():cfg.IllustrationTrammelCfgInfo;
		 /**  羁绊id */
		public static getIdById(value:number):number;
		 /**  需要的皮肤id */
		public static getNeedSkinsById(value:number):string;
		 /**  激活后加的属性 */
		public static getAddAttrById(value:number):string;
		 /**  加成属性战力值 */
		public static getFightPowerById(value:number):number;
		 /**  精灵组合称号 */
		public static getCombinationtitleById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_illustration.xls】 ----> achieve
	class IllustrationAchieveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IllustrationAchieveCfgInfo>;
			public static setup(dataArr:Array<cfg.IllustrationAchieveCfgInfo>):void;
		public static getInfo(value:number):cfg.IllustrationAchieveCfgInfo;
		public static getFirstInfo():cfg.IllustrationAchieveCfgInfo;
		 /**  成就id */
		public static getIdById(value:number):number;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  成就类型 */
		public static getAchieveTypeById(value:number):number;
		 /**  成就子类型 */
		public static getAchieveSubTypeById(value:number):number;
		 /**  值 */
		public static getValueById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  完成后的奖励 */
		public static getAddItemById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> const
	class IncubateConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubateConstCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubateConstCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubateConstCfgInfo;
		public static getFirstInfo():cfg.IncubateConstCfgInfo;
		 /**  每分钟步数 */
		public static getMinStepByMinStep(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> const
	class IncubateConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubateConstCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubateConstCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubateConstCfgInfo;
		public static getFirstInfo():cfg.IncubateConstCfgInfo;
		 /**  每分钟步数 */
		public static getMinStepByMinStep(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> speed_up
	class IncubateSpeedUpBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubateSpeedUpCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubateSpeedUpCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubateSpeedUpCfgInfo;
		public static getFirstInfo():cfg.IncubateSpeedUpCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  道具ID */
		public static getItemIDByIndex(value:number):number;
		 /**  道具类型 */
		public static getItemTypeByIndex(value:number):number;
		 /**  加速参数 */
		public static getSpeedUpParamByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> pet_egg
	class IncubatePetEggBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubatePetEggCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubatePetEggCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubatePetEggCfgInfo;
		public static getFirstInfo():cfg.IncubatePetEggCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  精灵ID */
		public static getPetIdByIndex(value:number):number;
		 /**  精灵星级 */
		public static getPetStarByIndex(value:number):number;
		 /**  孵蛋价格 */
		public static getEggPriceByIndex(value:number):string;
		 /**  需求步数 */
		public static getNeedStepByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> pet_egg
	class IncubatePetEggBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubatePetEggCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubatePetEggCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubatePetEggCfgInfo;
		public static getFirstInfo():cfg.IncubatePetEggCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  精灵ID */
		public static getPetIdByIndex(value:number):number;
		 /**  精灵星级 */
		public static getPetStarByIndex(value:number):number;
		 /**  孵蛋价格 */
		public static getEggPriceByIndex(value:number):string;
		 /**  需求步数 */
		public static getNeedStepByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> speed_up
	class IncubateSpeedUpBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubateSpeedUpCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubateSpeedUpCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubateSpeedUpCfgInfo;
		public static getFirstInfo():cfg.IncubateSpeedUpCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  道具ID */
		public static getItemIDByIndex(value:number):number;
		 /**  道具类型 */
		public static getItemTypeByIndex(value:number):number;
		 /**  加速参数 */
		public static getSpeedUpParamByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> const
	class IncubateConstBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubateConstCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubateConstCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubateConstCfgInfo;
		public static getFirstInfo():cfg.IncubateConstCfgInfo;
		 /**  每分钟步数 */
		public static getMinStepByMinStep(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> pet_egg
	class IncubatePetEggBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubatePetEggCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubatePetEggCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubatePetEggCfgInfo;
		public static getFirstInfo():cfg.IncubatePetEggCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  精灵ID */
		public static getPetIdByIndex(value:number):number;
		 /**  精灵星级 */
		public static getPetStarByIndex(value:number):number;
		 /**  孵蛋价格 */
		public static getEggPriceByIndex(value:number):string;
		 /**  需求步数 */
		public static getNeedStepByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_incubate.xls】 ----> speed_up
	class IncubateSpeedUpBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.IncubateSpeedUpCfgInfo>;
			public static setup(dataArr:Array<cfg.IncubateSpeedUpCfgInfo>):void;
		public static getInfo(value:number):cfg.IncubateSpeedUpCfgInfo;
		public static getFirstInfo():cfg.IncubateSpeedUpCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  道具ID */
		public static getItemIDByIndex(value:number):number;
		 /**  道具类型 */
		public static getItemTypeByIndex(value:number):number;
		 /**  加速参数 */
		public static getSpeedUpParamByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pettype_rand
	class ItemPettypeRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPettypeRandCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPettypeRandCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPettypeRandCfgInfo;
		public static getFirstInfo():cfg.ItemPettypeRandCfgInfo;
		 /**  种族 */
		public static getPetTypeByPetType(value:number):number;
		 /**  概率 */
		public static getRateByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> petcount_compound
	class ItemPetcountCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetcountCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetcountCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetcountCompoundCfgInfo;
		public static getFirstInfo():cfg.ItemPetcountCompoundCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  需要碎片个数 */
		public static getNeedItemCountByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pet_split
	class ItemPetSplitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetSplitCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetSplitCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetSplitCfgInfo;
		public static getFirstInfo():cfg.ItemPetSplitCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  增加道具道具ID_数量; */
		public static getAddItemByPetStar(value:number):string;
		 /**  碎片增加道具道具ID_数量; */
		public static getPieceAddItemByPetStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pack
	class ItemPackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPackCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPackCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPackCfgInfo;
		public static getFirstInfo():cfg.ItemPackCfgInfo;
		 /**  编号  */
		public static getIdById(value:number):number;
		 /**  名字 */
		public static getNameById(value:number):string;
		 /**  礼包类型_1_emItemPackType */
		public static getTypeById(value:number):number;
		 /**  参数道具id_道具个数_概率万分比_职业； */
		public static getParamById(value:number):string;
		 /**  参数2仅礼包类型5生效填drop id */
		public static getParam2ById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> item
	class ItemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemCfgInfo;
		public static getFirstInfo():cfg.ItemCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  名字 */
		public static getNameById(value:number):string;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  作用 */
		public static getDesc2ById(value:number):string;
		 /**  类型 */
		public static getDesc3ById(value:number):string;
		 /**  背包类型_emBagType */
		public static getBagTypeById(value:number):number;
		 /**  物品大类_emItemType */
		public static getTypeById(value:number):number;
		 /**  物品子类型装备类型1：  1;//武器  2;//护甲  3;//鞋子  4;//头盔星石类型2：  1;//星辰符文  2;//月亮符文  3;//太阳符文  4;//彩虹符文  5;//闪烁符文英雄类型3：  1;//伙伴ID  2;//伙伴种族  3;//随机任意  4;//升星材料任意英雄  5;//升星材料指定英雄6：碎片随机池，配置方案为：组权重_组ID；组权重_组ID；神装类型5：  1;//耳环  2;//项链  3;//戒指  4;//手镯特权类型6：  特权卡ID（cs_privilege-card-CardID）   */
		public static getSubTypeById(value:number):number;
		 /**  使用类型_emItemUseType */
		public static getUseTypeById(value:number):number;
		 /**  每日使用次数 */
		public static getMaxDayUseCountById(value:number):number;
		 /**  每周使用次数 */
		public static getMaxWeekUseCountById(value:number):number;
		 /**  每月使用次数 */
		public static getMaxMonthUseCountById(value:number):number;
		 /**  永久使用次数 */
		public static getMaxForeverUseCountById(value:number):number;
		 /**  掩码_emItemMark */
		public static getMarkById(value:number):string;
		 /**  是否自动使用0 //不提示不使用；1 //弹出提示且20s倒计时自动使用；2 //弹出提示但不自动使用；默认0 */
		public static getSmartUseById(value:number):number;
		 /**  物品等级 */
		public static getLevelById(value:number):number;
		 /**  物品星数 */
		public static getStarNumById(value:number):number;
		 /**  最大堆叠数量 默认为0，表示无限叠加 */
		public static getMaxCountById(value:number):number;
		 /**  品质 _emItemQualityType */
		public static getQualityById(value:number):number;
		 /**  闪光特效 */
		public static getFlashById(value:number):number;
		 /**  商店回收价格(0标示不能回收) */
		public static getSellPriceById(value:number):string;
		 /**  CD(时间ms) */
		public static getCDById(value:number):number;
		 /**  有效时间(秒) */
		public static getExpireTimeById(value:number):number;
		 /**  合成的ID道具表示ID伙伴表示ID/种族 */
		public static getCompoundIDById(value:number):number;
		 /**  使用参数 */
		public static getUseParamById(value:number):string;
		 /**  购买价格全额价格钻石 */
		public static getBuyNeedDiamondById(value:number):number;
		 /**  评分 */
		public static getAddScoreById(value:number):number;
		 /**  属性点类型|值;类型|值;类型:_emBattleAttribute */
		public static getAddAttriById(value:number):string;
		 /**   物品获取途径，对应uiconfig */
		public static getGetwayById(value:number):string;
		 /**  使用跳转途径 */
		public static getUseWayById(value:number):number;
		 /**  图标名称 */
		public static getIconNameById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> petid_rand
	class ItemPetidRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetidRandCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetidRandCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetidRandCfgInfo;
		public static getFirstInfo():cfg.ItemPetidRandCfgInfo;
		 /**  种族 */
		public static getPetTypeByPetType(value:number):number;
		 /**  星级 */
		public static getPetStarByPetType(value:number):number;
		 /**  概率 */
		public static getRateByPetType(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pack
	class ItemPackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPackCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPackCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPackCfgInfo;
		public static getFirstInfo():cfg.ItemPackCfgInfo;
		 /**  编号  */
		public static getIdById(value:number):number;
		 /**  名字 */
		public static getNameById(value:number):string;
		 /**  礼包类型_1_emItemPackType */
		public static getTypeById(value:number):number;
		 /**  参数道具id_道具个数_概率万分比_职业； */
		public static getParamById(value:number):string;
		 /**  参数2仅礼包类型5生效填drop id */
		public static getParam2ById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> compound
	class ItemCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemCompoundCfgInfo;
		public static getFirstInfo():cfg.ItemCompoundCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByItemID(value:number):string;
		 /**  需要道具道具ID_数量; */
		public static getNeedItemByItemID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> petcount_compound
	class ItemPetcountCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetcountCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetcountCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetcountCompoundCfgInfo;
		public static getFirstInfo():cfg.ItemPetcountCompoundCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  需要碎片个数 */
		public static getNeedItemCountByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pettype_rand
	class ItemPettypeRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPettypeRandCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPettypeRandCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPettypeRandCfgInfo;
		public static getFirstInfo():cfg.ItemPettypeRandCfgInfo;
		 /**  种族 */
		public static getPetTypeByPetType(value:number):number;
		 /**  概率 */
		public static getRateByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> petid_rand
	class ItemPetidRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetidRandCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetidRandCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetidRandCfgInfo;
		public static getFirstInfo():cfg.ItemPetidRandCfgInfo;
		 /**  种族 */
		public static getPetTypeByPetType(value:number):number;
		 /**  星级 */
		public static getPetStarByPetType(value:number):number;
		 /**  概率 */
		public static getRateByPetType(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pet_split
	class ItemPetSplitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetSplitCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetSplitCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetSplitCfgInfo;
		public static getFirstInfo():cfg.ItemPetSplitCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  增加道具道具ID_数量; */
		public static getAddItemByPetStar(value:number):string;
		 /**  碎片增加道具道具ID_数量; */
		public static getPieceAddItemByPetStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> gift_pack
	class ItemGiftPackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemGiftPackCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemGiftPackCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemGiftPackCfgInfo;
		public static getFirstInfo():cfg.ItemGiftPackCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  礼包对应的道具ID */
		public static getItemIDById(value:number):number;
		 /**  礼包类型 */
		public static getBagTypeById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  道具组列表 */
		public static getItemGroupById(value:number):string;
		 /**  获得道具组数量 */
		public static getAwardNumById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> compound
	class ItemCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemCompoundCfgInfo;
		public static getFirstInfo():cfg.ItemCompoundCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByItemID(value:number):string;
		 /**  需要道具道具ID_数量; */
		public static getNeedItemByItemID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> item
	class ItemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemCfgInfo;
		public static getFirstInfo():cfg.ItemCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  名字 */
		public static getNameById(value:number):string;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  作用 */
		public static getDesc2ById(value:number):string;
		 /**  类型 */
		public static getDesc3ById(value:number):string;
		 /**  背包类型_emBagType */
		public static getBagTypeById(value:number):number;
		 /**  物品大类_emItemType */
		public static getTypeById(value:number):number;
		 /**  物品子类型装备类型1：  1;//武器  2;//护甲  3;//鞋子  4;//头盔星石类型2：  1;//星辰符文  2;//月亮符文  3;//太阳符文  4;//彩虹符文  5;//闪烁符文英雄类型3：  1;//伙伴ID  2;//伙伴种族  3;//随机任意  4;//升星材料任意英雄  5;//升星材料指定英雄6：碎片随机池，配置方案为：组权重_组ID；组权重_组ID；神装类型5：  1;//耳环  2;//项链  3;//戒指  4;//手镯特权类型6：  特权卡ID（cs_privilege-card-CardID）   */
		public static getSubTypeById(value:number):number;
		 /**  使用类型_emItemUseType */
		public static getUseTypeById(value:number):number;
		 /**  每日使用次数 */
		public static getMaxDayUseCountById(value:number):number;
		 /**  每周使用次数 */
		public static getMaxWeekUseCountById(value:number):number;
		 /**  每月使用次数 */
		public static getMaxMonthUseCountById(value:number):number;
		 /**  永久使用次数 */
		public static getMaxForeverUseCountById(value:number):number;
		 /**  掩码_emItemMark */
		public static getMarkById(value:number):string;
		 /**  是否自动使用0 //不提示不使用；1 //弹出提示且20s倒计时自动使用；2 //弹出提示但不自动使用；默认0 */
		public static getSmartUseById(value:number):number;
		 /**  物品等级 */
		public static getLevelById(value:number):number;
		 /**  物品星数 */
		public static getStarNumById(value:number):number;
		 /**  最大堆叠数量 默认为0，表示无限叠加 */
		public static getMaxCountById(value:number):number;
		 /**  品质 _emItemQualityType */
		public static getQualityById(value:number):number;
		 /**  闪光特效 */
		public static getFlashById(value:number):number;
		 /**  商店回收价格(0标示不能回收) */
		public static getSellPriceById(value:number):string;
		 /**  CD(时间ms) */
		public static getCDById(value:number):number;
		 /**  有效时间(秒) */
		public static getExpireTimeById(value:number):number;
		 /**  合成的ID道具表示ID伙伴表示ID/种族 */
		public static getCompoundIDById(value:number):number;
		 /**  使用参数 */
		public static getUseParamById(value:number):string;
		 /**  购买价格全额价格钻石 */
		public static getBuyNeedDiamondById(value:number):number;
		 /**  评分 */
		public static getAddScoreById(value:number):number;
		 /**  属性点类型|值;类型|值;类型:_emBattleAttribute */
		public static getAddAttriById(value:number):string;
		 /**   物品获取途径，对应uiconfig */
		public static getGetwayById(value:number):string;
		 /**  使用跳转途径 */
		public static getUseWayById(value:number):number;
		 /**  图标名称 */
		public static getIconNameById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pack
	class ItemPackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPackCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPackCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPackCfgInfo;
		public static getFirstInfo():cfg.ItemPackCfgInfo;
		 /**  编号  */
		public static getIdById(value:number):number;
		 /**  名字 */
		public static getNameById(value:number):string;
		 /**  礼包类型_1_emItemPackType */
		public static getTypeById(value:number):number;
		 /**  参数道具id_道具个数_概率万分比_职业； */
		public static getParamById(value:number):string;
		 /**  参数2仅礼包类型5生效填drop id */
		public static getParam2ById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> compound
	class ItemCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemCompoundCfgInfo;
		public static getFirstInfo():cfg.ItemCompoundCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByItemID(value:number):string;
		 /**  需要道具道具ID_数量; */
		public static getNeedItemByItemID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> petcount_compound
	class ItemPetcountCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetcountCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetcountCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetcountCompoundCfgInfo;
		public static getFirstInfo():cfg.ItemPetcountCompoundCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  需要碎片个数 */
		public static getNeedItemCountByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pettype_rand
	class ItemPettypeRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPettypeRandCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPettypeRandCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPettypeRandCfgInfo;
		public static getFirstInfo():cfg.ItemPettypeRandCfgInfo;
		 /**  种族 */
		public static getPetTypeByPetType(value:number):number;
		 /**  概率 */
		public static getRateByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> petid_rand
	class ItemPetidRandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetidRandCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetidRandCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetidRandCfgInfo;
		public static getFirstInfo():cfg.ItemPetidRandCfgInfo;
		 /**  种族 */
		public static getPetTypeByPetType(value:number):number;
		 /**  星级 */
		public static getPetStarByPetType(value:number):number;
		 /**  概率 */
		public static getRateByPetType(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> equip_suit
	class ItemEquipSuitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemEquipSuitCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemEquipSuitCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemEquipSuitCfgInfo;
		public static getFirstInfo():cfg.ItemEquipSuitCfgInfo;
		 /**  装备等级 */
		public static getEquipLevelByEquipLevel(value:number):number;
		 /**  2件加属性属性类型|属性值|属性万分比 */
		public static getAddAttr2ByEquipLevel(value:number):string;
		 /**  3件加属性 */
		public static getAddAttr3ByEquipLevel(value:number):string;
		 /**  4件加属性 */
		public static getAddAttr4ByEquipLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> equip_suit
	class ItemEquipSuitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemEquipSuitCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemEquipSuitCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemEquipSuitCfgInfo;
		public static getFirstInfo():cfg.ItemEquipSuitCfgInfo;
		 /**  装备等级 */
		public static getEquipLevelByEquipLevel(value:number):number;
		 /**  2件加属性属性类型|属性值|属性万分比 */
		public static getAddAttr2ByEquipLevel(value:number):string;
		 /**  3件加属性 */
		public static getAddAttr3ByEquipLevel(value:number):string;
		 /**  4件加属性 */
		public static getAddAttr4ByEquipLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> gift_pack
	class ItemGiftPackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemGiftPackCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemGiftPackCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemGiftPackCfgInfo;
		public static getFirstInfo():cfg.ItemGiftPackCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  礼包对应的道具ID */
		public static getItemIDById(value:number):number;
		 /**  礼包类型 */
		public static getBagTypeById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  道具组列表 */
		public static getItemGroupById(value:number):string;
		 /**  获得道具组数量 */
		public static getAwardNumById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> gift_pack
	class ItemGiftPackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemGiftPackCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemGiftPackCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemGiftPackCfgInfo;
		public static getFirstInfo():cfg.ItemGiftPackCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  礼包对应的道具ID */
		public static getItemIDById(value:number):number;
		 /**  礼包类型 */
		public static getBagTypeById(value:number):number;
		 /**  参数 */
		public static getParamById(value:number):number;
		 /**  道具组列表 */
		public static getItemGroupById(value:number):string;
		 /**  获得道具组数量 */
		public static getAwardNumById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> item
	class ItemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemCfgInfo;
		public static getFirstInfo():cfg.ItemCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  名字 */
		public static getNameById(value:number):string;
		 /**  描述 */
		public static getDescById(value:number):string;
		 /**  作用 */
		public static getDesc2ById(value:number):string;
		 /**  类型 */
		public static getDesc3ById(value:number):string;
		 /**  背包类型_emBagType */
		public static getBagTypeById(value:number):number;
		 /**  物品大类_emItemType */
		public static getTypeById(value:number):number;
		 /**  物品子类型装备类型1：  1;//武器  2;//护甲  3;//鞋子  4;//头盔星石类型2：  1;//星辰符文  2;//月亮符文  3;//太阳符文  4;//彩虹符文  5;//闪烁符文英雄类型3：  1;//伙伴ID  2;//伙伴种族  3;//随机任意  4;//升星材料任意英雄  5;//升星材料指定英雄6：碎片随机池，配置方案为：组权重_组ID；组权重_组ID；神装类型5：  1;//耳环  2;//项链  3;//戒指  4;//手镯特权类型6：  特权卡ID（cs_privilege-card-CardID）   */
		public static getSubTypeById(value:number):number;
		 /**  使用类型_emItemUseType */
		public static getUseTypeById(value:number):number;
		 /**  每日使用次数 */
		public static getMaxDayUseCountById(value:number):number;
		 /**  每周使用次数 */
		public static getMaxWeekUseCountById(value:number):number;
		 /**  每月使用次数 */
		public static getMaxMonthUseCountById(value:number):number;
		 /**  永久使用次数 */
		public static getMaxForeverUseCountById(value:number):number;
		 /**  掩码_emItemMark */
		public static getMarkById(value:number):string;
		 /**  是否自动使用0 //不提示不使用；1 //弹出提示且20s倒计时自动使用；2 //弹出提示但不自动使用；默认0 */
		public static getSmartUseById(value:number):number;
		 /**  物品等级 */
		public static getLevelById(value:number):number;
		 /**  物品星数 */
		public static getStarNumById(value:number):number;
		 /**  最大堆叠数量 默认为0，表示无限叠加 */
		public static getMaxCountById(value:number):number;
		 /**  品质 _emItemQualityType */
		public static getQualityById(value:number):number;
		 /**  闪光特效 */
		public static getFlashById(value:number):number;
		 /**  商店回收价格(0标示不能回收) */
		public static getSellPriceById(value:number):string;
		 /**  CD(时间ms) */
		public static getCDById(value:number):number;
		 /**  有效时间(秒) */
		public static getExpireTimeById(value:number):number;
		 /**  合成的ID道具表示ID伙伴表示ID/种族 */
		public static getCompoundIDById(value:number):number;
		 /**  使用参数 */
		public static getUseParamById(value:number):string;
		 /**  购买价格全额价格钻石 */
		public static getBuyNeedDiamondById(value:number):number;
		 /**  评分 */
		public static getAddScoreById(value:number):number;
		 /**  属性点类型|值;类型|值;类型:_emBattleAttribute */
		public static getAddAttriById(value:number):string;
		 /**   物品获取途径，对应uiconfig */
		public static getGetwayById(value:number):string;
		 /**  使用跳转途径 */
		public static getUseWayById(value:number):number;
		 /**  图标名称 */
		public static getIconNameById(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> equip_suit
	class ItemEquipSuitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemEquipSuitCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemEquipSuitCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemEquipSuitCfgInfo;
		public static getFirstInfo():cfg.ItemEquipSuitCfgInfo;
		 /**  装备等级 */
		public static getEquipLevelByEquipLevel(value:number):number;
		 /**  2件加属性属性类型|属性值|属性万分比 */
		public static getAddAttr2ByEquipLevel(value:number):string;
		 /**  3件加属性 */
		public static getAddAttr3ByEquipLevel(value:number):string;
		 /**  4件加属性 */
		public static getAddAttr4ByEquipLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_item.xls】 ----> pet_split
	class ItemPetSplitBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ItemPetSplitCfgInfo>;
			public static setup(dataArr:Array<cfg.ItemPetSplitCfgInfo>):void;
		public static getInfo(value:number):cfg.ItemPetSplitCfgInfo;
		public static getFirstInfo():cfg.ItemPetSplitCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  增加道具道具ID_数量; */
		public static getAddItemByPetStar(value:number):string;
		 /**  碎片增加道具道具ID_数量; */
		public static getPieceAddItemByPetStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> joyous_linkup
	class JoyousLinkupJoyousLinkupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupJoyousLinkupCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupJoyousLinkupCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupJoyousLinkupCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupJoyousLinkupCfgInfo;
		 /**  棋盘类型 */
		public static getTypeByType(value:number):number;
		 /**  行数 */
		public static getHRowByType(value:number):number;
		 /**  列数 */
		public static getVRowByType(value:number):number;
		 /**  棋子种类 */
		public static getChessNumByType(value:number):number;
		 /**  难度系数 */
		public static getDifficultByType(value:number):number;
		 /**  单步时间 */
		public static getStepTimeByType(value:number):number;
		 /**  刷新次数 */
		public static getRefreshNumByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> stage
	class JoyousLinkupStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupStageCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupStageCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupStageCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupStageCfgInfo;
		 /**  关卡id */
		public static getStageIDByStageID(value:number):number;
		 /**  棋盘类型 */
		public static getLinkupTypeByStageID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> joyous_linkup
	class JoyousLinkupJoyousLinkupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupJoyousLinkupCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupJoyousLinkupCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupJoyousLinkupCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupJoyousLinkupCfgInfo;
		 /**  棋盘类型 */
		public static getTypeByType(value:number):number;
		 /**  行数 */
		public static getHRowByType(value:number):number;
		 /**  列数 */
		public static getVRowByType(value:number):number;
		 /**  棋子种类 */
		public static getChessNumByType(value:number):number;
		 /**  难度系数 */
		public static getDifficultByType(value:number):number;
		 /**  单步时间 */
		public static getStepTimeByType(value:number):number;
		 /**  刷新次数 */
		public static getRefreshNumByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> joyous_linkup_chess
	class JoyousLinkupJoyousLinkupChessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupJoyousLinkupChessCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupJoyousLinkupChessCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupJoyousLinkupChessCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupJoyousLinkupChessCfgInfo;
		 /**  棋子类型 */
		public static getIndexByIndex(value:number):number;
		 /**  棋子图标 */
		public static getImgByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> joyous_linkup
	class JoyousLinkupJoyousLinkupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupJoyousLinkupCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupJoyousLinkupCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupJoyousLinkupCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupJoyousLinkupCfgInfo;
		 /**  棋盘类型 */
		public static getTypeByType(value:number):number;
		 /**  行数 */
		public static getHRowByType(value:number):number;
		 /**  列数 */
		public static getVRowByType(value:number):number;
		 /**  棋子种类 */
		public static getChessNumByType(value:number):number;
		 /**  难度系数 */
		public static getDifficultByType(value:number):number;
		 /**  单步时间 */
		public static getStepTimeByType(value:number):number;
		 /**  刷新次数 */
		public static getRefreshNumByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> stage
	class JoyousLinkupStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupStageCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupStageCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupStageCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupStageCfgInfo;
		 /**  关卡id */
		public static getStageIDByStageID(value:number):number;
		 /**  棋盘类型 */
		public static getLinkupTypeByStageID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> joyous_linkup_chess
	class JoyousLinkupJoyousLinkupChessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupJoyousLinkupChessCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupJoyousLinkupChessCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupJoyousLinkupChessCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupJoyousLinkupChessCfgInfo;
		 /**  棋子类型 */
		public static getIndexByIndex(value:number):number;
		 /**  棋子图标 */
		public static getImgByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> joyous_linkup_chess
	class JoyousLinkupJoyousLinkupChessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupJoyousLinkupChessCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupJoyousLinkupChessCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupJoyousLinkupChessCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupJoyousLinkupChessCfgInfo;
		 /**  棋子类型 */
		public static getIndexByIndex(value:number):number;
		 /**  棋子图标 */
		public static getImgByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_joyous_linkup.xls】 ----> stage
	class JoyousLinkupStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.JoyousLinkupStageCfgInfo>;
			public static setup(dataArr:Array<cfg.JoyousLinkupStageCfgInfo>):void;
		public static getInfo(value:number):cfg.JoyousLinkupStageCfgInfo;
		public static getFirstInfo():cfg.JoyousLinkupStageCfgInfo;
		 /**  关卡id */
		public static getStageIDByStageID(value:number):number;
		 /**  棋盘类型 */
		public static getLinkupTypeByStageID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> const_info
	class LadderConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderConstInfoCfgInfo;
		public static getFirstInfo():cfg.LadderConstInfoCfgInfo;
		 /**  免费挑战次数 */
		public static getDayFightCountByDayFightCount(value:number):number;
		 /**  购买次数 */
		public static getDayBuyCountByDayFightCount(value:number):number;
		 /**  刷新间隔时间秒 */
		public static getRefreshStepByDayFightCount(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByDayFightCount(value:number):string;
		 /**  奖励时间 */
		public static getPrizeTimeByDayFightCount(value:number):string;
		 /**  胜利奖励 */
		public static getWinPrizeByDayFightCount(value:number):string;
		 /**  失败奖励 */
		public static getFailPrizeByDayFightCount(value:number):string;
		 /**  点赞奖励 */
		public static getLikePrizeByDayFightCount(value:number):string;
		 /**  我的记录个数 */
		public static getMaxRecNumByDayFightCount(value:number):number;
		 /**  大神记录个数 */
		public static getMaxPublicRecNumByDayFightCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> const_info
	class LadderConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderConstInfoCfgInfo;
		public static getFirstInfo():cfg.LadderConstInfoCfgInfo;
		 /**  免费挑战次数 */
		public static getDayFightCountByDayFightCount(value:number):number;
		 /**  购买次数 */
		public static getDayBuyCountByDayFightCount(value:number):number;
		 /**  刷新间隔时间秒 */
		public static getRefreshStepByDayFightCount(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByDayFightCount(value:number):string;
		 /**  奖励时间 */
		public static getPrizeTimeByDayFightCount(value:number):string;
		 /**  胜利奖励 */
		public static getWinPrizeByDayFightCount(value:number):string;
		 /**  失败奖励 */
		public static getFailPrizeByDayFightCount(value:number):string;
		 /**  点赞奖励 */
		public static getLikePrizeByDayFightCount(value:number):string;
		 /**  我的记录个数 */
		public static getMaxRecNumByDayFightCount(value:number):number;
		 /**  大神记录个数 */
		public static getMaxPublicRecNumByDayFightCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> robot
	class LadderRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderRobotCfgInfo;
		public static getFirstInfo():cfg.LadderRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> top_prize
	class LadderTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderTopPrizeCfgInfo;
		public static getFirstInfo():cfg.LadderTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> buy_count
	class LadderBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderBuyCountCfgInfo;
		public static getFirstInfo():cfg.LadderBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;
		 /**  需要VIP等级 */
		public static getNeedVIPByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> monster_new
	class LadderMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderMonsterNewCfgInfo;
		public static getFirstInfo():cfg.LadderMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> robot
	class LadderRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderRobotCfgInfo;
		public static getFirstInfo():cfg.LadderRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> top_prize
	class LadderTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderTopPrizeCfgInfo;
		public static getFirstInfo():cfg.LadderTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> monster_new
	class LadderMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderMonsterNewCfgInfo;
		public static getFirstInfo():cfg.LadderMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> buy_count
	class LadderBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderBuyCountCfgInfo;
		public static getFirstInfo():cfg.LadderBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;
		 /**  需要VIP等级 */
		public static getNeedVIPByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> monster_new
	class LadderMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderMonsterNewCfgInfo;
		public static getFirstInfo():cfg.LadderMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> buy_count
	class LadderBuyCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderBuyCountCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderBuyCountCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderBuyCountCfgInfo;
		public static getFirstInfo():cfg.LadderBuyCountCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;
		 /**  需要VIP等级 */
		public static getNeedVIPByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> robot
	class LadderRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderRobotCfgInfo;
		public static getFirstInfo():cfg.LadderRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> top_prize
	class LadderTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderTopPrizeCfgInfo;
		public static getFirstInfo():cfg.LadderTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getOrderByOrder(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByOrder(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_ladder.xls】 ----> const_info
	class LadderConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LadderConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.LadderConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.LadderConstInfoCfgInfo;
		public static getFirstInfo():cfg.LadderConstInfoCfgInfo;
		 /**  免费挑战次数 */
		public static getDayFightCountByDayFightCount(value:number):number;
		 /**  购买次数 */
		public static getDayBuyCountByDayFightCount(value:number):number;
		 /**  刷新间隔时间秒 */
		public static getRefreshStepByDayFightCount(value:number):number;
		 /**  开启时间 */
		public static getOpenTimeByDayFightCount(value:number):string;
		 /**  奖励时间 */
		public static getPrizeTimeByDayFightCount(value:number):string;
		 /**  胜利奖励 */
		public static getWinPrizeByDayFightCount(value:number):string;
		 /**  失败奖励 */
		public static getFailPrizeByDayFightCount(value:number):string;
		 /**  点赞奖励 */
		public static getLikePrizeByDayFightCount(value:number):string;
		 /**  我的记录个数 */
		public static getMaxRecNumByDayFightCount(value:number):number;
		 /**  大神记录个数 */
		public static getMaxPublicRecNumByDayFightCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_type
	class LotteryTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryTypeCfgInfo;
		public static getFirstInfo():cfg.LotteryTypeCfgInfo;
		 /**  活动id */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  每日免费刷新次数 */
		public static getFreeCountByIndex(value:number):number;
		 /**  保底次数 */
		public static getMaxCountByIndex(value:number):number;
		 /**  保底奖励（奖池序号） */
		public static getLuckyByIndex(value:number):number;
		 /**  跳转路径（对应uiconfig） */
		public static getGetwayByIndex(value:number):string;
		 /**  奖励池保底限制展示个数 */
		public static getLimitByIndex(value:number):number;
		 /**  精灵故事 */
		public static getPetIdByIndex(value:number):number;
		 /**  展示精灵 */
		public static getPetIdsByIndex(value:number):string;
		 /**  UI背景图 */
		public static getUIbgByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_cost
	class LotteryCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryCostCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryCostCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryCostCfgInfo;
		public static getFirstInfo():cfg.LotteryCostCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  次数 */
		public static getTimesByType(value:number):number;
		 /**  消耗数量1 */
		public static getNeedItem1ByType(value:number):string;
		 /**  消耗道具2 */
		public static getNeedItem2ByType(value:number):string;
		 /**  需要VIP */
		public static getVIPByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_hunt
	class LotteryHuntBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryHuntCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryHuntCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryHuntCfgInfo;
		public static getFirstInfo():cfg.LotteryHuntCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  位置(从1开始) */
		public static getPositionByType(value:number):number;
		 /**  刷出概率 */
		public static getChanceByType(value:number):number;
		 /**  摇中概率 */
		public static getRollChanceByType(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByType(value:number):string;
		 /**  是否展示 */
		public static getShowByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_pool
	class LotteryPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryPoolCfgInfo;
		public static getFirstInfo():cfg.LotteryPoolCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  保底道具 */
		public static getItemByType(value:number):string;
		 /**  单物品最大保底次数 */
		public static getItemcountByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_hunt
	class LotteryHuntBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryHuntCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryHuntCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryHuntCfgInfo;
		public static getFirstInfo():cfg.LotteryHuntCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  位置(从1开始) */
		public static getPositionByType(value:number):number;
		 /**  刷出概率 */
		public static getChanceByType(value:number):number;
		 /**  摇中概率 */
		public static getRollChanceByType(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByType(value:number):string;
		 /**  是否展示 */
		public static getShowByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_hunt
	class LotteryHuntBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryHuntCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryHuntCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryHuntCfgInfo;
		public static getFirstInfo():cfg.LotteryHuntCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  位置(从1开始) */
		public static getPositionByType(value:number):number;
		 /**  刷出概率 */
		public static getChanceByType(value:number):number;
		 /**  摇中概率 */
		public static getRollChanceByType(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByType(value:number):string;
		 /**  是否展示 */
		public static getShowByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_cost
	class LotteryCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryCostCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryCostCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryCostCfgInfo;
		public static getFirstInfo():cfg.LotteryCostCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  次数 */
		public static getTimesByType(value:number):number;
		 /**  消耗数量1 */
		public static getNeedItem1ByType(value:number):string;
		 /**  消耗道具2 */
		public static getNeedItem2ByType(value:number):string;
		 /**  需要VIP */
		public static getVIPByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_type
	class LotteryTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryTypeCfgInfo;
		public static getFirstInfo():cfg.LotteryTypeCfgInfo;
		 /**  活动id */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  每日免费刷新次数 */
		public static getFreeCountByIndex(value:number):number;
		 /**  保底次数 */
		public static getMaxCountByIndex(value:number):number;
		 /**  保底奖励（奖池序号） */
		public static getLuckyByIndex(value:number):number;
		 /**  跳转路径（对应uiconfig） */
		public static getGetwayByIndex(value:number):string;
		 /**  奖励池保底限制展示个数 */
		public static getLimitByIndex(value:number):number;
		 /**  精灵故事 */
		public static getPetIdByIndex(value:number):number;
		 /**  展示精灵 */
		public static getPetIdsByIndex(value:number):string;
		 /**  UI背景图 */
		public static getUIbgByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_pool
	class LotteryPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryPoolCfgInfo;
		public static getFirstInfo():cfg.LotteryPoolCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  保底道具 */
		public static getItemByType(value:number):string;
		 /**  单物品最大保底次数 */
		public static getItemcountByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_type
	class LotteryTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryTypeCfgInfo;
		public static getFirstInfo():cfg.LotteryTypeCfgInfo;
		 /**  活动id */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  每日免费刷新次数 */
		public static getFreeCountByIndex(value:number):number;
		 /**  保底次数 */
		public static getMaxCountByIndex(value:number):number;
		 /**  保底奖励（奖池序号） */
		public static getLuckyByIndex(value:number):number;
		 /**  跳转路径（对应uiconfig） */
		public static getGetwayByIndex(value:number):string;
		 /**  奖励池保底限制展示个数 */
		public static getLimitByIndex(value:number):number;
		 /**  精灵故事 */
		public static getPetIdByIndex(value:number):number;
		 /**  展示精灵 */
		public static getPetIdsByIndex(value:number):string;
		 /**  UI背景图 */
		public static getUIbgByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_pool
	class LotteryPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryPoolCfgInfo;
		public static getFirstInfo():cfg.LotteryPoolCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  保底道具 */
		public static getItemByType(value:number):string;
		 /**  单物品最大保底次数 */
		public static getItemcountByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_lottery.xls】 ----> lottery_cost
	class LotteryCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.LotteryCostCfgInfo>;
			public static setup(dataArr:Array<cfg.LotteryCostCfgInfo>):void;
		public static getInfo(value:number):cfg.LotteryCostCfgInfo;
		public static getFirstInfo():cfg.LotteryCostCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  索引 */
		public static getIndexByType(value:number):number;
		 /**  次数 */
		public static getTimesByType(value:number):number;
		 /**  消耗数量1 */
		public static getNeedItem1ByType(value:number):string;
		 /**  消耗道具2 */
		public static getNeedItem2ByType(value:number):string;
		 /**  需要VIP */
		public static getVIPByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_mail.xls】 ----> mail
	class MailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.MailCfgInfo>;
			public static setup(dataArr:Array<cfg.MailCfgInfo>):void;
		public static getInfo(value:number):cfg.MailCfgInfo;
		public static getFirstInfo():cfg.MailCfgInfo;
		 /**  邮件类型 */
		public static getMailTypeByMailType(value:number):number;
		 /**  有效天数 */
		public static getExpireDayByMailType(value:number):number;
		 /**  邮件标题 */
		public static getMailTitleByMailType(value:number):string;
		 /**  消息展示内容 */
		public static getContentByMailType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_mail.xls】 ----> mail
	class MailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.MailCfgInfo>;
			public static setup(dataArr:Array<cfg.MailCfgInfo>):void;
		public static getInfo(value:number):cfg.MailCfgInfo;
		public static getFirstInfo():cfg.MailCfgInfo;
		 /**  邮件类型 */
		public static getMailTypeByMailType(value:number):number;
		 /**  有效天数 */
		public static getExpireDayByMailType(value:number):number;
		 /**  邮件标题 */
		public static getMailTitleByMailType(value:number):string;
		 /**  消息展示内容 */
		public static getContentByMailType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_mail.xls】 ----> mail
	class MailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.MailCfgInfo>;
			public static setup(dataArr:Array<cfg.MailCfgInfo>):void;
		public static getInfo(value:number):cfg.MailCfgInfo;
		public static getFirstInfo():cfg.MailCfgInfo;
		 /**  邮件类型 */
		public static getMailTypeByMailType(value:number):number;
		 /**  有效天数 */
		public static getExpireDayByMailType(value:number):number;
		 /**  邮件标题 */
		public static getMailTitleByMailType(value:number):string;
		 /**  消息展示内容 */
		public static getContentByMailType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upStar
	class PetUpStarBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpStarCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpStarCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpStarCfgInfo;
		public static getFirstInfo():cfg.PetUpStarCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  星星数 */
		public static getStarById(value:number):number;
		 /**  升到此星需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  升到此阶需要伙伴伙伴ID_伙伴星级_个数; */
		public static getNeedStarCountById(value:number):string;
		 /**  升到此星需要伙伴星级_个数; */
		public static getNeedStarPetById(value:number):string;
		 /**  升到任意需要伙伴星级_个数; */
		public static getNeedAnyStarPetById(value:number):string;
		 /**  此等级上限 */
		public static getMaxLevelById(value:number):number;
		 /**  最大阶数 */
		public static getMaxAdvanceById(value:number):number;
		 /**  增加评分 */
		public static getAddScoreById(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> advance
	class PetAdvanceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetAdvanceCfgInfo>;
			public static setup(dataArr:Array<cfg.PetAdvanceCfgInfo>):void;
		public static getInfo(value:number):cfg.PetAdvanceCfgInfo;
		public static getFirstInfo():cfg.PetAdvanceCfgInfo;
		 /**  进阶等级 */
		public static getAdvanceByAdvance(value:number):number;
		 /**  此等级上限 */
		public static getMaxPetLevelByAdvance(value:number):number;
		 /**  升到此阶需要道具 */
		public static getNeedItemByAdvance(value:number):string;
		 /**  技能等级 */
		public static getAddSkillByAdvance(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByAdvance(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> formation
	class PetFormationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetFormationCfgInfo>;
			public static setup(dataArr:Array<cfg.PetFormationCfgInfo>):void;
		public static getInfo(value:number):cfg.PetFormationCfgInfo;
		public static getFirstInfo():cfg.PetFormationCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  解锁等级 */
		public static getNeedLevelByID(value:number):number;
		 /**  位置 */
		public static getPosByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> rune_pos
	class PetRunePosBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetRunePosCfgInfo>;
			public static setup(dataArr:Array<cfg.PetRunePosCfgInfo>):void;
		public static getInfo(value:number):cfg.PetRunePosCfgInfo;
		public static getFirstInfo():cfg.PetRunePosCfgInfo;
		 /**  位置 */
		public static getPosByPos(value:number):number;
		 /**  解锁等级 */
		public static getNeedLevelByPos(value:number):number;
		 /**  解锁星级 */
		public static getNeedStarByPos(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> pet
	class PetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCfgInfo;
		public static getFirstInfo():cfg.PetCfgInfo;
		 /**  英雄ID */
		public static getPetIDByPetID(value:number):number;
		 /**  描述 */
		public static getDescByPetID(value:number):string;
		 /**  阵营 */
		public static getPetTypeByPetID(value:number):number;
		 /**  职业 */
		public static getPetJobTypeByPetID(value:number):number;
		 /**  基础Skin */
		public static getBaseSkinByPetID(value:number):number;
		 /**  展示音效（1.wav;2.wav） */
		public static getVoiceByPetID(value:number):string;
		 /**  初始最大阶数 */
		public static getInitMaxAdvanceByPetID(value:number):number;
		 /**  起始星级 */
		public static getMinStarByPetID(value:number):number;
		 /**  最高星级 */
		public static getMaxStarByPetID(value:number):number;
		 /**  最高等级 */
		public static getMaxLevelByPetID(value:number):number;
		 /**  基础属性 */
		public static getInitAttrByPetID(value:number):string;
		 /**  初始成长 */
		public static getAdvanceRate0ByPetID(value:number):string;
		 /**  1阶成长加成 */
		public static getAdvanceRate1ByPetID(value:number):string;
		 /**  2阶成长加成 */
		public static getAdvanceRate2ByPetID(value:number):string;
		 /**  3阶成长加成 */
		public static getAdvanceRate3ByPetID(value:number):string;
		 /**  4阶成长加成 */
		public static getAdvanceRate4ByPetID(value:number):string;
		 /**  5阶成长加成 */
		public static getAdvanceRate5ByPetID(value:number):string;
		 /**  6阶成长加成 */
		public static getAdvanceRate6ByPetID(value:number):string;
		 /**  升阶附加属性0-1阶 */
		public static getAdvanceFix1ByPetID(value:number):string;
		 /**  升阶附加属性1-2阶 */
		public static getAdvanceFix2ByPetID(value:number):string;
		 /**  升阶附加属性2-3阶 */
		public static getAdvanceFix3ByPetID(value:number):string;
		 /**  升阶附加属性3-4阶 */
		public static getAdvanceFix4ByPetID(value:number):string;
		 /**  升阶附加属性4-5阶 */
		public static getAdvanceFix5ByPetID(value:number):string;
		 /**  升阶附加属性5-6阶 */
		public static getAdvanceFix6ByPetID(value:number):string;
		 /**  6星成长加成 */
		public static getStarRate6ByPetID(value:number):string;
		 /**  7星成长加成 */
		public static getStarRate7ByPetID(value:number):string;
		 /**  8星成长加成 */
		public static getStarRate8ByPetID(value:number):string;
		 /**  9星成长加成 */
		public static getStarRate9ByPetID(value:number):string;
		 /**  10星成长加成 */
		public static getStarRate10ByPetID(value:number):string;
		 /**  11星成长加成 */
		public static getStarRate11ByPetID(value:number):string;
		 /**  12星成长加成 */
		public static getStarRate12ByPetID(value:number):string;
		 /**  13星成长加成 */
		public static getStarRate13ByPetID(value:number):string;
		 /**  14星成长加成 */
		public static getStarRate14ByPetID(value:number):string;
		 /**  15星成长加成 */
		public static getStarRate15ByPetID(value:number):string;
		 /**  升星附加属性4-5星 */
		public static getStarFix5ByPetID(value:number):string;
		 /**  升星附加属性5-6星 */
		public static getStarFix6ByPetID(value:number):string;
		 /**  升星附加属性6-7星 */
		public static getStarFix7ByPetID(value:number):string;
		 /**  升星附加属性7-8星 */
		public static getStarFix8ByPetID(value:number):string;
		 /**  升星附加属性8-9星 */
		public static getStarFix9ByPetID(value:number):string;
		 /**  升星附加属性9-10星 */
		public static getStarFix10ByPetID(value:number):string;
		 /**  升星附加属性10-11星 */
		public static getStarFix11ByPetID(value:number):string;
		 /**  升星附加属性11-12星 */
		public static getStarFix12ByPetID(value:number):string;
		 /**  升星附加属性12-13星 */
		public static getStarFix13ByPetID(value:number):string;
		 /**  升星附加属性13-14星 */
		public static getStarFix14ByPetID(value:number):string;
		 /**  升星附加属性14-15星 */
		public static getStarFix15ByPetID(value:number):string;
		 /**  种族值 */
		public static getRacialvalueByPetID(value:number):string;
		 /**  图鉴属性 */
		public static getIllustrationAttrAddByPetID(value:number):string;
		 /**  加成属性战力值 */
		public static getFightPowerByPetID(value:number):string;
		 /**  携带物 */
		public static getHorcruxByPetID(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> star_score
	class PetStarScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetStarScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.PetStarScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.PetStarScoreCfgInfo;
		public static getFirstInfo():cfg.PetStarScoreCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  总计评分 */
		public static getTotalScoreByPetStar(value:number):number;
		 /**  等级评分 */
		public static getLevelScoreByPetStar(value:number):number;
		 /**  装备评分 */
		public static getEquipScoreByPetStar(value:number):number;
		 /**  星级评分 */
		public static getStarScoreByPetStar(value:number):number;
		 /**  进阶评分 */
		public static getAdvanceScoreByPetStar(value:number):number;
		 /**  神器评分 */
		public static getArtifactScoreByPetStar(value:number):number;
		 /**  公会技能评分 */
		public static getFactionSkillScoreByPetStar(value:number):number;
		 /**  符文评分 */
		public static getRuneScoreByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upsart_skill
	class PetUpsartSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpsartSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpsartSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpsartSkillCfgInfo;
		public static getFirstInfo():cfg.PetUpsartSkillCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  技能等级 */
		public static getAddSkillByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> evolve
	class PetEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.PetEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.PetEvolveCfgInfo;
		public static getFirstInfo():cfg.PetEvolveCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  进化段数 */
		public static getEvolveById(value:number):number;
		 /**  升到此段需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  属性加成(属性|值|百分比;) */
		public static getAttrById(value:number):string;
		 /**  皮肤ID */
		public static getSkinIDById(value:number):number;
		 /**  最大段数 */
		public static getMaxEvolveById(value:number):number;
		 /**  增加评分 */
		public static getAddScoreById(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upgrade
	class PetUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpgradeCfgInfo;
		public static getFirstInfo():cfg.PetUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> formation_type
	class PetFormationTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetFormationTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetFormationTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetFormationTypeCfgInfo;
		public static getFirstInfo():cfg.PetFormationTypeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  名称 */
		public static getNameByType(value:number):string;
		 /**  解锁等级 */
		public static getNeedLevelByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> master_match
	class PetMasterMatchBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetMasterMatchCfgInfo>;
			public static setup(dataArr:Array<cfg.PetMasterMatchCfgInfo>):void;
		public static getInfo(value:number):cfg.PetMasterMatchCfgInfo;
		public static getFirstInfo():cfg.PetMasterMatchCfgInfo;
		 /**  排行榜人数 */
		public static getTopListNumByTopListNum(value:number):number;
		 /**  天赋展示数量 */
		public static getTalentShowNumByTopListNum(value:number):number;
		 /**  阵容推荐人数 */
		public static getPetStoryByTopListNum(value:number):number;
		 /**  热门评论上限 */
		public static getHotReviewMaxByTopListNum(value:number):number;
		 /**  近期评论上限 */
		public static getRecentReviewMaxByTopListNum(value:number):number;
		 /**  点赞奖励 */
		public static getLikePrizeByTopListNum(value:number):string;
		 /**  精灵解锁奖励 */
		public static getPetUnlockPrizeByTopListNum(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> star_exp
	class PetStarExpBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetStarExpCfgInfo>;
			public static setup(dataArr:Array<cfg.PetStarExpCfgInfo>):void;
		public static getInfo(value:number):cfg.PetStarExpCfgInfo;
		public static getFirstInfo():cfg.PetStarExpCfgInfo;
		 /**  星星 */
		public static getStarByStar(value:number):number;
		 /**  吞噬极化值 */
		public static getExpByStar(value:number):number;
		 /**  最大极化值 */
		public static getMaxExpByStar(value:number):number;
		 /**  属性加成(属性|值|百分比;) */
		public static getAttrByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> highstar_reborn
	class PetHighstarRebornBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetHighstarRebornCfgInfo>;
			public static setup(dataArr:Array<cfg.PetHighstarRebornCfgInfo>):void;
		public static getInfo(value:number):cfg.PetHighstarRebornCfgInfo;
		public static getFirstInfo():cfg.PetHighstarRebornCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  星星数 */
		public static getStarById(value:number):number;
		 /**  高星重生需要道具 */
		public static getRebornItemById(value:number):string;
		 /**  高星重生返还百变怪 */
		public static getRebornReturnItemById(value:number):string;
		 /**  降星返还糖果 */
		public static getNeedItemById(value:number):string;
		 /**  高星重生返还本体 */
		public static getRebornReturnItem1ById(value:number):string;
		 /**  高星重生返还百变怪 */
		public static getRebornReturnItem2ById(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> evolve
	class PetEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.PetEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.PetEvolveCfgInfo;
		public static getFirstInfo():cfg.PetEvolveCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  进化段数 */
		public static getEvolveById(value:number):number;
		 /**  升到此段需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  属性加成(属性|值|百分比;) */
		public static getAttrById(value:number):string;
		 /**  皮肤ID */
		public static getSkinIDById(value:number):number;
		 /**  最大段数 */
		public static getMaxEvolveById(value:number):number;
		 /**  增加评分 */
		public static getAddScoreById(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> master_match
	class PetMasterMatchBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetMasterMatchCfgInfo>;
			public static setup(dataArr:Array<cfg.PetMasterMatchCfgInfo>):void;
		public static getInfo(value:number):cfg.PetMasterMatchCfgInfo;
		public static getFirstInfo():cfg.PetMasterMatchCfgInfo;
		 /**  排行榜人数 */
		public static getTopListNumByTopListNum(value:number):number;
		 /**  天赋展示数量 */
		public static getTalentShowNumByTopListNum(value:number):number;
		 /**  阵容推荐人数 */
		public static getPetStoryByTopListNum(value:number):number;
		 /**  热门评论上限 */
		public static getHotReviewMaxByTopListNum(value:number):number;
		 /**  近期评论上限 */
		public static getRecentReviewMaxByTopListNum(value:number):number;
		 /**  点赞奖励 */
		public static getLikePrizeByTopListNum(value:number):string;
		 /**  精灵解锁奖励 */
		public static getPetUnlockPrizeByTopListNum(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> highstar_reborn
	class PetHighstarRebornBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetHighstarRebornCfgInfo>;
			public static setup(dataArr:Array<cfg.PetHighstarRebornCfgInfo>):void;
		public static getInfo(value:number):cfg.PetHighstarRebornCfgInfo;
		public static getFirstInfo():cfg.PetHighstarRebornCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  星星数 */
		public static getStarById(value:number):number;
		 /**  高星重生需要道具 */
		public static getRebornItemById(value:number):string;
		 /**  高星重生返还百变怪 */
		public static getRebornReturnItemById(value:number):string;
		 /**  降星返还糖果 */
		public static getNeedItemById(value:number):string;
		 /**  高星重生返还本体 */
		public static getRebornReturnItem1ById(value:number):string;
		 /**  高星重生返还百变怪 */
		public static getRebornReturnItem2ById(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> star_exp
	class PetStarExpBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetStarExpCfgInfo>;
			public static setup(dataArr:Array<cfg.PetStarExpCfgInfo>):void;
		public static getInfo(value:number):cfg.PetStarExpCfgInfo;
		public static getFirstInfo():cfg.PetStarExpCfgInfo;
		 /**  星星 */
		public static getStarByStar(value:number):number;
		 /**  吞噬极化值 */
		public static getExpByStar(value:number):number;
		 /**  最大极化值 */
		public static getMaxExpByStar(value:number):number;
		 /**  属性加成(属性|值|百分比;) */
		public static getAttrByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> reborn_cost
	class PetRebornCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetRebornCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetRebornCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetRebornCostCfgInfo;
		public static getFirstInfo():cfg.PetRebornCostCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> degenerate_substitude
	class PetDegenerateSubstitudeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetDegenerateSubstitudeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetDegenerateSubstitudeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetDegenerateSubstitudeCfgInfo;
		public static getFirstInfo():cfg.PetDegenerateSubstitudeCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  类型（0代表全系） */
		public static getTypeByStar(value:number):number;
		 /**  替代品道具 */
		public static getItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> degenerate_cost
	class PetDegenerateCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetDegenerateCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetDegenerateCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetDegenerateCostCfgInfo;
		public static getFirstInfo():cfg.PetDegenerateCostCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要消耗道具 */
		public static getNeedItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> replace
	class PetReplaceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetReplaceCfgInfo>;
			public static setup(dataArr:Array<cfg.PetReplaceCfgInfo>):void;
		public static getInfo(value:number):cfg.PetReplaceCfgInfo;
		public static getFirstInfo():cfg.PetReplaceCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要消耗道具 */
		public static getNeedItemByStar(value:number):string;
		 /**  需要消耗5星英雄数量 */
		public static getNeedHeroByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> replace
	class PetReplaceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetReplaceCfgInfo>;
			public static setup(dataArr:Array<cfg.PetReplaceCfgInfo>):void;
		public static getInfo(value:number):cfg.PetReplaceCfgInfo;
		public static getFirstInfo():cfg.PetReplaceCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要消耗道具 */
		public static getNeedItemByStar(value:number):string;
		 /**  需要消耗5星英雄数量 */
		public static getNeedHeroByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> talent_pos
	class PetTalentPosBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetTalentPosCfgInfo>;
			public static setup(dataArr:Array<cfg.PetTalentPosCfgInfo>):void;
		public static getInfo(value:number):cfg.PetTalentPosCfgInfo;
		public static getFirstInfo():cfg.PetTalentPosCfgInfo;
		 /**  位置 */
		public static getPosByPos(value:number):number;
		 /**  解锁星级 */
		public static getNeedStarByPos(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> buy_bag
	class PetBuyBagBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetBuyBagCfgInfo>;
			public static setup(dataArr:Array<cfg.PetBuyBagCfgInfo>):void;
		public static getInfo(value:number):cfg.PetBuyBagCfgInfo;
		public static getFirstInfo():cfg.PetBuyBagCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  当前购买的总格子数 */
		public static getTotalBuySpaceById(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondById(value:number):number;
		 /**  增加格子数 */
		public static getAddSpaceById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> book
	class PetBookBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetBookCfgInfo>;
			public static setup(dataArr:Array<cfg.PetBookCfgInfo>):void;
		public static getInfo(value:number):cfg.PetBookCfgInfo;
		public static getFirstInfo():cfg.PetBookCfgInfo;
		 /**  伙伴索引 */
		public static getIndexByIndex(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByIndex(value:number):number;
		 /**  图鉴 */
		public static getBookMarkByIndex(value:number):number;
		 /**  图书馆 */
		public static getLibraryMarkByIndex(value:number):number;
		 /**  星级 */
		public static getStarByIndex(value:number):number;
		 /**  显示等级 */
		public static getMaxLevelByIndex(value:number):number;
		 /**  属性 */
		public static getAttrByIndex(value:number):string;
		 /**  战力 */
		public static getPowerByIndex(value:number):number;
		 /**  评论开关 */
		public static getReviewSwitchByIndex(value:number):number;
		 /**  大神搭配开关 */
		public static getMasterMatchSwitchByIndex(value:number):number;
		 /**  精灵档案开关 */
		public static getPetStorySwitchByIndex(value:number):number;
		 /**  精灵故事 */
		public static getPetStoryByIndex(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> book
	class PetBookBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetBookCfgInfo>;
			public static setup(dataArr:Array<cfg.PetBookCfgInfo>):void;
		public static getInfo(value:number):cfg.PetBookCfgInfo;
		public static getFirstInfo():cfg.PetBookCfgInfo;
		 /**  伙伴索引 */
		public static getIndexByIndex(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByIndex(value:number):number;
		 /**  图鉴 */
		public static getBookMarkByIndex(value:number):number;
		 /**  图书馆 */
		public static getLibraryMarkByIndex(value:number):number;
		 /**  星级 */
		public static getStarByIndex(value:number):number;
		 /**  显示等级 */
		public static getMaxLevelByIndex(value:number):number;
		 /**  属性 */
		public static getAttrByIndex(value:number):string;
		 /**  战力 */
		public static getPowerByIndex(value:number):number;
		 /**  评论开关 */
		public static getReviewSwitchByIndex(value:number):number;
		 /**  大神搭配开关 */
		public static getMasterMatchSwitchByIndex(value:number):number;
		 /**  精灵档案开关 */
		public static getPetStorySwitchByIndex(value:number):number;
		 /**  精灵故事 */
		public static getPetStoryByIndex(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> star_score
	class PetStarScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetStarScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.PetStarScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.PetStarScoreCfgInfo;
		public static getFirstInfo():cfg.PetStarScoreCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  总计评分 */
		public static getTotalScoreByPetStar(value:number):number;
		 /**  等级评分 */
		public static getLevelScoreByPetStar(value:number):number;
		 /**  装备评分 */
		public static getEquipScoreByPetStar(value:number):number;
		 /**  星级评分 */
		public static getStarScoreByPetStar(value:number):number;
		 /**  进阶评分 */
		public static getAdvanceScoreByPetStar(value:number):number;
		 /**  神器评分 */
		public static getArtifactScoreByPetStar(value:number):number;
		 /**  公会技能评分 */
		public static getFactionSkillScoreByPetStar(value:number):number;
		 /**  符文评分 */
		public static getRuneScoreByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> buy_bag
	class PetBuyBagBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetBuyBagCfgInfo>;
			public static setup(dataArr:Array<cfg.PetBuyBagCfgInfo>):void;
		public static getInfo(value:number):cfg.PetBuyBagCfgInfo;
		public static getFirstInfo():cfg.PetBuyBagCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  当前购买的总格子数 */
		public static getTotalBuySpaceById(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondById(value:number):number;
		 /**  增加格子数 */
		public static getAddSpaceById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upgrade
	class PetUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpgradeCfgInfo;
		public static getFirstInfo():cfg.PetUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> degenerate_cost
	class PetDegenerateCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetDegenerateCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetDegenerateCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetDegenerateCostCfgInfo;
		public static getFirstInfo():cfg.PetDegenerateCostCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要消耗道具 */
		public static getNeedItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> rune_pos
	class PetRunePosBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetRunePosCfgInfo>;
			public static setup(dataArr:Array<cfg.PetRunePosCfgInfo>):void;
		public static getInfo(value:number):cfg.PetRunePosCfgInfo;
		public static getFirstInfo():cfg.PetRunePosCfgInfo;
		 /**  位置 */
		public static getPosByPos(value:number):number;
		 /**  解锁等级 */
		public static getNeedLevelByPos(value:number):number;
		 /**  解锁星级 */
		public static getNeedStarByPos(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> advance
	class PetAdvanceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetAdvanceCfgInfo>;
			public static setup(dataArr:Array<cfg.PetAdvanceCfgInfo>):void;
		public static getInfo(value:number):cfg.PetAdvanceCfgInfo;
		public static getFirstInfo():cfg.PetAdvanceCfgInfo;
		 /**  进阶等级 */
		public static getAdvanceByAdvance(value:number):number;
		 /**  此等级上限 */
		public static getMaxPetLevelByAdvance(value:number):number;
		 /**  升到此阶需要道具 */
		public static getNeedItemByAdvance(value:number):string;
		 /**  技能等级 */
		public static getAddSkillByAdvance(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByAdvance(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> reborn_cost
	class PetRebornCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetRebornCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetRebornCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetRebornCostCfgInfo;
		public static getFirstInfo():cfg.PetRebornCostCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> formation_type
	class PetFormationTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetFormationTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetFormationTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetFormationTypeCfgInfo;
		public static getFirstInfo():cfg.PetFormationTypeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  名称 */
		public static getNameByType(value:number):string;
		 /**  解锁等级 */
		public static getNeedLevelByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> formation
	class PetFormationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetFormationCfgInfo>;
			public static setup(dataArr:Array<cfg.PetFormationCfgInfo>):void;
		public static getInfo(value:number):cfg.PetFormationCfgInfo;
		public static getFirstInfo():cfg.PetFormationCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  解锁等级 */
		public static getNeedLevelByID(value:number):number;
		 /**  位置 */
		public static getPosByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upStar
	class PetUpStarBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpStarCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpStarCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpStarCfgInfo;
		public static getFirstInfo():cfg.PetUpStarCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  星星数 */
		public static getStarById(value:number):number;
		 /**  升到此星需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  升到此阶需要伙伴伙伴ID_伙伴星级_个数; */
		public static getNeedStarCountById(value:number):string;
		 /**  升到此星需要伙伴星级_个数; */
		public static getNeedStarPetById(value:number):string;
		 /**  升到任意需要伙伴星级_个数; */
		public static getNeedAnyStarPetById(value:number):string;
		 /**  此等级上限 */
		public static getMaxLevelById(value:number):number;
		 /**  最大阶数 */
		public static getMaxAdvanceById(value:number):number;
		 /**  增加评分 */
		public static getAddScoreById(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> degenerate_substitude
	class PetDegenerateSubstitudeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetDegenerateSubstitudeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetDegenerateSubstitudeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetDegenerateSubstitudeCfgInfo;
		public static getFirstInfo():cfg.PetDegenerateSubstitudeCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  类型（0代表全系） */
		public static getTypeByStar(value:number):number;
		 /**  替代品道具 */
		public static getItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> talent_pos
	class PetTalentPosBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetTalentPosCfgInfo>;
			public static setup(dataArr:Array<cfg.PetTalentPosCfgInfo>):void;
		public static getInfo(value:number):cfg.PetTalentPosCfgInfo;
		public static getFirstInfo():cfg.PetTalentPosCfgInfo;
		 /**  位置 */
		public static getPosByPos(value:number):number;
		 /**  解锁星级 */
		public static getNeedStarByPos(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> reborn_cost
	class PetRebornCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetRebornCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetRebornCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetRebornCostCfgInfo;
		public static getFirstInfo():cfg.PetRebornCostCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> star_exp
	class PetStarExpBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetStarExpCfgInfo>;
			public static setup(dataArr:Array<cfg.PetStarExpCfgInfo>):void;
		public static getInfo(value:number):cfg.PetStarExpCfgInfo;
		public static getFirstInfo():cfg.PetStarExpCfgInfo;
		 /**  星星 */
		public static getStarByStar(value:number):number;
		 /**  吞噬极化值 */
		public static getExpByStar(value:number):number;
		 /**  最大极化值 */
		public static getMaxExpByStar(value:number):number;
		 /**  属性加成(属性|值|百分比;) */
		public static getAttrByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> pet
	class PetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCfgInfo;
		public static getFirstInfo():cfg.PetCfgInfo;
		 /**  英雄ID */
		public static getPetIDByPetID(value:number):number;
		 /**  描述 */
		public static getDescByPetID(value:number):string;
		 /**  阵营 */
		public static getPetTypeByPetID(value:number):number;
		 /**  职业 */
		public static getPetJobTypeByPetID(value:number):number;
		 /**  基础Skin */
		public static getBaseSkinByPetID(value:number):number;
		 /**  展示音效（1.wav;2.wav） */
		public static getVoiceByPetID(value:number):string;
		 /**  初始最大阶数 */
		public static getInitMaxAdvanceByPetID(value:number):number;
		 /**  起始星级 */
		public static getMinStarByPetID(value:number):number;
		 /**  最高星级 */
		public static getMaxStarByPetID(value:number):number;
		 /**  最高等级 */
		public static getMaxLevelByPetID(value:number):number;
		 /**  基础属性 */
		public static getInitAttrByPetID(value:number):string;
		 /**  初始成长 */
		public static getAdvanceRate0ByPetID(value:number):string;
		 /**  1阶成长加成 */
		public static getAdvanceRate1ByPetID(value:number):string;
		 /**  2阶成长加成 */
		public static getAdvanceRate2ByPetID(value:number):string;
		 /**  3阶成长加成 */
		public static getAdvanceRate3ByPetID(value:number):string;
		 /**  4阶成长加成 */
		public static getAdvanceRate4ByPetID(value:number):string;
		 /**  5阶成长加成 */
		public static getAdvanceRate5ByPetID(value:number):string;
		 /**  6阶成长加成 */
		public static getAdvanceRate6ByPetID(value:number):string;
		 /**  升阶附加属性0-1阶 */
		public static getAdvanceFix1ByPetID(value:number):string;
		 /**  升阶附加属性1-2阶 */
		public static getAdvanceFix2ByPetID(value:number):string;
		 /**  升阶附加属性2-3阶 */
		public static getAdvanceFix3ByPetID(value:number):string;
		 /**  升阶附加属性3-4阶 */
		public static getAdvanceFix4ByPetID(value:number):string;
		 /**  升阶附加属性4-5阶 */
		public static getAdvanceFix5ByPetID(value:number):string;
		 /**  升阶附加属性5-6阶 */
		public static getAdvanceFix6ByPetID(value:number):string;
		 /**  6星成长加成 */
		public static getStarRate6ByPetID(value:number):string;
		 /**  7星成长加成 */
		public static getStarRate7ByPetID(value:number):string;
		 /**  8星成长加成 */
		public static getStarRate8ByPetID(value:number):string;
		 /**  9星成长加成 */
		public static getStarRate9ByPetID(value:number):string;
		 /**  10星成长加成 */
		public static getStarRate10ByPetID(value:number):string;
		 /**  11星成长加成 */
		public static getStarRate11ByPetID(value:number):string;
		 /**  12星成长加成 */
		public static getStarRate12ByPetID(value:number):string;
		 /**  13星成长加成 */
		public static getStarRate13ByPetID(value:number):string;
		 /**  14星成长加成 */
		public static getStarRate14ByPetID(value:number):string;
		 /**  15星成长加成 */
		public static getStarRate15ByPetID(value:number):string;
		 /**  升星附加属性4-5星 */
		public static getStarFix5ByPetID(value:number):string;
		 /**  升星附加属性5-6星 */
		public static getStarFix6ByPetID(value:number):string;
		 /**  升星附加属性6-7星 */
		public static getStarFix7ByPetID(value:number):string;
		 /**  升星附加属性7-8星 */
		public static getStarFix8ByPetID(value:number):string;
		 /**  升星附加属性8-9星 */
		public static getStarFix9ByPetID(value:number):string;
		 /**  升星附加属性9-10星 */
		public static getStarFix10ByPetID(value:number):string;
		 /**  升星附加属性10-11星 */
		public static getStarFix11ByPetID(value:number):string;
		 /**  升星附加属性11-12星 */
		public static getStarFix12ByPetID(value:number):string;
		 /**  升星附加属性12-13星 */
		public static getStarFix13ByPetID(value:number):string;
		 /**  升星附加属性13-14星 */
		public static getStarFix14ByPetID(value:number):string;
		 /**  升星附加属性14-15星 */
		public static getStarFix15ByPetID(value:number):string;
		 /**  种族值 */
		public static getRacialvalueByPetID(value:number):string;
		 /**  图鉴属性 */
		public static getIllustrationAttrAddByPetID(value:number):string;
		 /**  加成属性战力值 */
		public static getFightPowerByPetID(value:number):string;
		 /**  携带物 */
		public static getHorcruxByPetID(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upsart_skill
	class PetUpsartSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpsartSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpsartSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpsartSkillCfgInfo;
		public static getFirstInfo():cfg.PetUpsartSkillCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  技能等级 */
		public static getAddSkillByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> pet
	class PetBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCfgInfo;
		public static getFirstInfo():cfg.PetCfgInfo;
		 /**  英雄ID */
		public static getPetIDByPetID(value:number):number;
		 /**  描述 */
		public static getDescByPetID(value:number):string;
		 /**  阵营 */
		public static getPetTypeByPetID(value:number):number;
		 /**  职业 */
		public static getPetJobTypeByPetID(value:number):number;
		 /**  基础Skin */
		public static getBaseSkinByPetID(value:number):number;
		 /**  展示音效（1.wav;2.wav） */
		public static getVoiceByPetID(value:number):string;
		 /**  初始最大阶数 */
		public static getInitMaxAdvanceByPetID(value:number):number;
		 /**  起始星级 */
		public static getMinStarByPetID(value:number):number;
		 /**  最高星级 */
		public static getMaxStarByPetID(value:number):number;
		 /**  最高等级 */
		public static getMaxLevelByPetID(value:number):number;
		 /**  基础属性 */
		public static getInitAttrByPetID(value:number):string;
		 /**  初始成长 */
		public static getAdvanceRate0ByPetID(value:number):string;
		 /**  1阶成长加成 */
		public static getAdvanceRate1ByPetID(value:number):string;
		 /**  2阶成长加成 */
		public static getAdvanceRate2ByPetID(value:number):string;
		 /**  3阶成长加成 */
		public static getAdvanceRate3ByPetID(value:number):string;
		 /**  4阶成长加成 */
		public static getAdvanceRate4ByPetID(value:number):string;
		 /**  5阶成长加成 */
		public static getAdvanceRate5ByPetID(value:number):string;
		 /**  6阶成长加成 */
		public static getAdvanceRate6ByPetID(value:number):string;
		 /**  升阶附加属性0-1阶 */
		public static getAdvanceFix1ByPetID(value:number):string;
		 /**  升阶附加属性1-2阶 */
		public static getAdvanceFix2ByPetID(value:number):string;
		 /**  升阶附加属性2-3阶 */
		public static getAdvanceFix3ByPetID(value:number):string;
		 /**  升阶附加属性3-4阶 */
		public static getAdvanceFix4ByPetID(value:number):string;
		 /**  升阶附加属性4-5阶 */
		public static getAdvanceFix5ByPetID(value:number):string;
		 /**  升阶附加属性5-6阶 */
		public static getAdvanceFix6ByPetID(value:number):string;
		 /**  6星成长加成 */
		public static getStarRate6ByPetID(value:number):string;
		 /**  7星成长加成 */
		public static getStarRate7ByPetID(value:number):string;
		 /**  8星成长加成 */
		public static getStarRate8ByPetID(value:number):string;
		 /**  9星成长加成 */
		public static getStarRate9ByPetID(value:number):string;
		 /**  10星成长加成 */
		public static getStarRate10ByPetID(value:number):string;
		 /**  11星成长加成 */
		public static getStarRate11ByPetID(value:number):string;
		 /**  12星成长加成 */
		public static getStarRate12ByPetID(value:number):string;
		 /**  13星成长加成 */
		public static getStarRate13ByPetID(value:number):string;
		 /**  14星成长加成 */
		public static getStarRate14ByPetID(value:number):string;
		 /**  15星成长加成 */
		public static getStarRate15ByPetID(value:number):string;
		 /**  升星附加属性4-5星 */
		public static getStarFix5ByPetID(value:number):string;
		 /**  升星附加属性5-6星 */
		public static getStarFix6ByPetID(value:number):string;
		 /**  升星附加属性6-7星 */
		public static getStarFix7ByPetID(value:number):string;
		 /**  升星附加属性7-8星 */
		public static getStarFix8ByPetID(value:number):string;
		 /**  升星附加属性8-9星 */
		public static getStarFix9ByPetID(value:number):string;
		 /**  升星附加属性9-10星 */
		public static getStarFix10ByPetID(value:number):string;
		 /**  升星附加属性10-11星 */
		public static getStarFix11ByPetID(value:number):string;
		 /**  升星附加属性11-12星 */
		public static getStarFix12ByPetID(value:number):string;
		 /**  升星附加属性12-13星 */
		public static getStarFix13ByPetID(value:number):string;
		 /**  升星附加属性13-14星 */
		public static getStarFix14ByPetID(value:number):string;
		 /**  升星附加属性14-15星 */
		public static getStarFix15ByPetID(value:number):string;
		 /**  种族值 */
		public static getRacialvalueByPetID(value:number):string;
		 /**  图鉴属性 */
		public static getIllustrationAttrAddByPetID(value:number):string;
		 /**  加成属性战力值 */
		public static getFightPowerByPetID(value:number):string;
		 /**  携带物 */
		public static getHorcruxByPetID(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upgrade
	class PetUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpgradeCfgInfo;
		public static getFirstInfo():cfg.PetUpgradeCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByLevel(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> advance
	class PetAdvanceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetAdvanceCfgInfo>;
			public static setup(dataArr:Array<cfg.PetAdvanceCfgInfo>):void;
		public static getInfo(value:number):cfg.PetAdvanceCfgInfo;
		public static getFirstInfo():cfg.PetAdvanceCfgInfo;
		 /**  进阶等级 */
		public static getAdvanceByAdvance(value:number):number;
		 /**  此等级上限 */
		public static getMaxPetLevelByAdvance(value:number):number;
		 /**  升到此阶需要道具 */
		public static getNeedItemByAdvance(value:number):string;
		 /**  技能等级 */
		public static getAddSkillByAdvance(value:number):string;
		 /**  增加评分 */
		public static getAddScoreByAdvance(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upsart_skill
	class PetUpsartSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpsartSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpsartSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpsartSkillCfgInfo;
		public static getFirstInfo():cfg.PetUpsartSkillCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  技能等级 */
		public static getAddSkillByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> upStar
	class PetUpStarBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetUpStarCfgInfo>;
			public static setup(dataArr:Array<cfg.PetUpStarCfgInfo>):void;
		public static getInfo(value:number):cfg.PetUpStarCfgInfo;
		public static getFirstInfo():cfg.PetUpStarCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  星星数 */
		public static getStarById(value:number):number;
		 /**  升到此星需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  升到此阶需要伙伴伙伴ID_伙伴星级_个数; */
		public static getNeedStarCountById(value:number):string;
		 /**  升到此星需要伙伴星级_个数; */
		public static getNeedStarPetById(value:number):string;
		 /**  升到任意需要伙伴星级_个数; */
		public static getNeedAnyStarPetById(value:number):string;
		 /**  此等级上限 */
		public static getMaxLevelById(value:number):number;
		 /**  最大阶数 */
		public static getMaxAdvanceById(value:number):number;
		 /**  增加评分 */
		public static getAddScoreById(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> formation
	class PetFormationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetFormationCfgInfo>;
			public static setup(dataArr:Array<cfg.PetFormationCfgInfo>):void;
		public static getInfo(value:number):cfg.PetFormationCfgInfo;
		public static getFirstInfo():cfg.PetFormationCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  解锁等级 */
		public static getNeedLevelByID(value:number):number;
		 /**  位置 */
		public static getPosByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> formation_type
	class PetFormationTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetFormationTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetFormationTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetFormationTypeCfgInfo;
		public static getFirstInfo():cfg.PetFormationTypeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  名称 */
		public static getNameByType(value:number):string;
		 /**  解锁等级 */
		public static getNeedLevelByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> rune_pos
	class PetRunePosBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetRunePosCfgInfo>;
			public static setup(dataArr:Array<cfg.PetRunePosCfgInfo>):void;
		public static getInfo(value:number):cfg.PetRunePosCfgInfo;
		public static getFirstInfo():cfg.PetRunePosCfgInfo;
		 /**  位置 */
		public static getPosByPos(value:number):number;
		 /**  解锁等级 */
		public static getNeedLevelByPos(value:number):number;
		 /**  解锁星级 */
		public static getNeedStarByPos(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> talent_pos
	class PetTalentPosBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetTalentPosCfgInfo>;
			public static setup(dataArr:Array<cfg.PetTalentPosCfgInfo>):void;
		public static getInfo(value:number):cfg.PetTalentPosCfgInfo;
		public static getFirstInfo():cfg.PetTalentPosCfgInfo;
		 /**  位置 */
		public static getPosByPos(value:number):number;
		 /**  解锁星级 */
		public static getNeedStarByPos(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> master_match
	class PetMasterMatchBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetMasterMatchCfgInfo>;
			public static setup(dataArr:Array<cfg.PetMasterMatchCfgInfo>):void;
		public static getInfo(value:number):cfg.PetMasterMatchCfgInfo;
		public static getFirstInfo():cfg.PetMasterMatchCfgInfo;
		 /**  排行榜人数 */
		public static getTopListNumByTopListNum(value:number):number;
		 /**  天赋展示数量 */
		public static getTalentShowNumByTopListNum(value:number):number;
		 /**  阵容推荐人数 */
		public static getPetStoryByTopListNum(value:number):number;
		 /**  热门评论上限 */
		public static getHotReviewMaxByTopListNum(value:number):number;
		 /**  近期评论上限 */
		public static getRecentReviewMaxByTopListNum(value:number):number;
		 /**  点赞奖励 */
		public static getLikePrizeByTopListNum(value:number):string;
		 /**  精灵解锁奖励 */
		public static getPetUnlockPrizeByTopListNum(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> evolve
	class PetEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.PetEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.PetEvolveCfgInfo;
		public static getFirstInfo():cfg.PetEvolveCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  进化段数 */
		public static getEvolveById(value:number):number;
		 /**  升到此段需要道具 */
		public static getNeedItemById(value:number):string;
		 /**  属性加成(属性|值|百分比;) */
		public static getAttrById(value:number):string;
		 /**  皮肤ID */
		public static getSkinIDById(value:number):number;
		 /**  最大段数 */
		public static getMaxEvolveById(value:number):number;
		 /**  增加评分 */
		public static getAddScoreById(value:number):number;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> highstar_reborn
	class PetHighstarRebornBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetHighstarRebornCfgInfo>;
			public static setup(dataArr:Array<cfg.PetHighstarRebornCfgInfo>):void;
		public static getInfo(value:number):cfg.PetHighstarRebornCfgInfo;
		public static getFirstInfo():cfg.PetHighstarRebornCfgInfo;
		 /**  唯一ID */
		public static getIdById(value:number):number;
		 /**  伙伴ID */
		public static getPetIDById(value:number):number;
		 /**  星星数 */
		public static getStarById(value:number):number;
		 /**  高星重生需要道具 */
		public static getRebornItemById(value:number):string;
		 /**  高星重生返还百变怪 */
		public static getRebornReturnItemById(value:number):string;
		 /**  降星返还糖果 */
		public static getNeedItemById(value:number):string;
		 /**  高星重生返还本体 */
		public static getRebornReturnItem1ById(value:number):string;
		 /**  高星重生返还百变怪 */
		public static getRebornReturnItem2ById(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> degenerate_cost
	class PetDegenerateCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetDegenerateCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetDegenerateCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetDegenerateCostCfgInfo;
		public static getFirstInfo():cfg.PetDegenerateCostCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要消耗道具 */
		public static getNeedItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> buy_bag
	class PetBuyBagBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetBuyBagCfgInfo>;
			public static setup(dataArr:Array<cfg.PetBuyBagCfgInfo>):void;
		public static getInfo(value:number):cfg.PetBuyBagCfgInfo;
		public static getFirstInfo():cfg.PetBuyBagCfgInfo;
		 /**  索引 */
		public static getIdById(value:number):number;
		 /**  当前购买的总格子数 */
		public static getTotalBuySpaceById(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondById(value:number):number;
		 /**  增加格子数 */
		public static getAddSpaceById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> replace
	class PetReplaceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetReplaceCfgInfo>;
			public static setup(dataArr:Array<cfg.PetReplaceCfgInfo>):void;
		public static getInfo(value:number):cfg.PetReplaceCfgInfo;
		public static getFirstInfo():cfg.PetReplaceCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  需要消耗道具 */
		public static getNeedItemByStar(value:number):string;
		 /**  需要消耗5星英雄数量 */
		public static getNeedHeroByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> degenerate_substitude
	class PetDegenerateSubstitudeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetDegenerateSubstitudeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetDegenerateSubstitudeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetDegenerateSubstitudeCfgInfo;
		public static getFirstInfo():cfg.PetDegenerateSubstitudeCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  类型（0代表全系） */
		public static getTypeByStar(value:number):number;
		 /**  替代品道具 */
		public static getItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> book
	class PetBookBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetBookCfgInfo>;
			public static setup(dataArr:Array<cfg.PetBookCfgInfo>):void;
		public static getInfo(value:number):cfg.PetBookCfgInfo;
		public static getFirstInfo():cfg.PetBookCfgInfo;
		 /**  伙伴索引 */
		public static getIndexByIndex(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByIndex(value:number):number;
		 /**  图鉴 */
		public static getBookMarkByIndex(value:number):number;
		 /**  图书馆 */
		public static getLibraryMarkByIndex(value:number):number;
		 /**  星级 */
		public static getStarByIndex(value:number):number;
		 /**  显示等级 */
		public static getMaxLevelByIndex(value:number):number;
		 /**  属性 */
		public static getAttrByIndex(value:number):string;
		 /**  战力 */
		public static getPowerByIndex(value:number):number;
		 /**  评论开关 */
		public static getReviewSwitchByIndex(value:number):number;
		 /**  大神搭配开关 */
		public static getMasterMatchSwitchByIndex(value:number):number;
		 /**  精灵档案开关 */
		public static getPetStorySwitchByIndex(value:number):number;
		 /**  精灵故事 */
		public static getPetStoryByIndex(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet.xls】 ----> star_score
	class PetStarScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetStarScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.PetStarScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.PetStarScoreCfgInfo;
		public static getFirstInfo():cfg.PetStarScoreCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  总计评分 */
		public static getTotalScoreByPetStar(value:number):number;
		 /**  等级评分 */
		public static getLevelScoreByPetStar(value:number):number;
		 /**  装备评分 */
		public static getEquipScoreByPetStar(value:number):number;
		 /**  星级评分 */
		public static getStarScoreByPetStar(value:number):number;
		 /**  进阶评分 */
		public static getAdvanceScoreByPetStar(value:number):number;
		 /**  神器评分 */
		public static getArtifactScoreByPetStar(value:number):number;
		 /**  公会技能评分 */
		public static getFactionSkillScoreByPetStar(value:number):number;
		 /**  符文评分 */
		public static getRuneScoreByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> change
	class PetCallChangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallChangeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallChangeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallChangeCfgInfo;
		public static getFirstInfo():cfg.PetCallChangeCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  限制类型 */
		public static getNeedPetTypeByPetStar(value:number):string;
		 /**  消耗道具 */
		public static getNeedItemByPetStar(value:number):string;
		 /**  库ID */
		public static getRandIDByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> fix_change
	class PetCallFixChangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallFixChangeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallFixChangeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallFixChangeCfgInfo;
		public static getFirstInfo():cfg.PetCallFixChangeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  精灵ID */
		public static getPetIDByType(value:number):number;
		 /**  最低等级 */
		public static getMinLevelByType(value:number):number;
		 /**  最高等级 */
		public static getMaxLevelByType(value:number):number;
		 /**  最低星级 */
		public static getMinStarByType(value:number):number;
		 /**  最高星级 */
		public static getMaxStarByType(value:number):number;
		 /**  最低进化 */
		public static getMinEvolveByType(value:number):number;
		 /**  最高进化 */
		public static getMaxEvolveByType(value:number):number;
		 /**  最低进阶 */
		public static getMinAdvanceByType(value:number):number;
		 /**  最高进阶 */
		public static getMaxAdvanceByType(value:number):number;
		 /**  消耗道具 */
		public static getRemoveItemsByType(value:number):string;
		 /**  转换后精灵ID */
		public static getToPetIDByType(value:number):number;
		 /**  控制标识 */
		public static getFlagByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call_pool
	class PetCallCallPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallCallPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  召唤类型 */
		public static getCallTypeByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> common_pool
	class PetCallCommonPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCommonPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCommonPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCommonPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallCommonPoolCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  种族 */
		public static getPetTypeByPetStar(value:number):number;
		 /**  概率 */
		public static getRateByPetStar(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByPetStar(value:number):number;
		 /**  得分 */
		public static getPetScoreByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call_cost
	class PetCallCallCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallCostCfgInfo;
		public static getFirstInfo():cfg.PetCallCallCostCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  次数 */
		public static getCountByIndex(value:number):number;
		 /**  消耗道具 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> specail_pool
	class PetCallSpecailPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallSpecailPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallSpecailPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallSpecailPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallSpecailPoolCfgInfo;
		 /**  召唤类型 */
		public static getCallTypeByCallType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> change_pool
	class PetCallChangePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallChangePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallChangePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallChangePoolCfgInfo;
		public static getFirstInfo():cfg.PetCallChangePoolCfgInfo;
		 /**  伙伴种族 */
		public static getPetTypeByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> fix_change
	class PetCallFixChangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallFixChangeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallFixChangeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallFixChangeCfgInfo;
		public static getFirstInfo():cfg.PetCallFixChangeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  精灵ID */
		public static getPetIDByType(value:number):number;
		 /**  最低等级 */
		public static getMinLevelByType(value:number):number;
		 /**  最高等级 */
		public static getMaxLevelByType(value:number):number;
		 /**  最低星级 */
		public static getMinStarByType(value:number):number;
		 /**  最高星级 */
		public static getMaxStarByType(value:number):number;
		 /**  最低进化 */
		public static getMinEvolveByType(value:number):number;
		 /**  最高进化 */
		public static getMaxEvolveByType(value:number):number;
		 /**  最低进阶 */
		public static getMinAdvanceByType(value:number):number;
		 /**  最高进阶 */
		public static getMaxAdvanceByType(value:number):number;
		 /**  消耗道具 */
		public static getRemoveItemsByType(value:number):string;
		 /**  转换后精灵ID */
		public static getToPetIDByType(value:number):number;
		 /**  控制标识 */
		public static getFlagByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> change
	class PetCallChangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallChangeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallChangeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallChangeCfgInfo;
		public static getFirstInfo():cfg.PetCallChangeCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  限制类型 */
		public static getNeedPetTypeByPetStar(value:number):string;
		 /**  消耗道具 */
		public static getNeedItemByPetStar(value:number):string;
		 /**  库ID */
		public static getRandIDByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call
	class PetCallCallBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallCfgInfo;
		public static getFirstInfo():cfg.PetCallCallCfgInfo;
		 /**  抽卡类型 */
		public static getCallTypeByCallType(value:number):number;
		 /**  名称 */
		public static getNameByCallType(value:number):string;
		 /**  描述 */
		public static getDescByCallType(value:number):string;
		 /**  需要VIP等级 */
		public static getNeedVipLevelByCallType(value:number):number;
		 /**  免费重置时间时间:分 */
		public static getFreeResetTimeByCallType(value:number):string;
		 /**  首次必出五星次数 */
		public static getFirstContinueCountByCallType(value:number):number;
		 /**  必出五星次数 */
		public static getContinueCountByCallType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByCallType(value:number):string;
		 /**  星级概率概率_星级; */
		public static getStarRateByCallType(value:number):string;
		 /**  种族概率概率_种族; */
		public static getTypeRateByCallType(value:number):string;
		 /**  随机四星以下种族概率概率_种族; */
		public static getSpecialTypeRateByCallType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> common_pool
	class PetCallCommonPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCommonPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCommonPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCommonPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallCommonPoolCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  种族 */
		public static getPetTypeByPetStar(value:number):number;
		 /**  概率 */
		public static getRateByPetStar(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByPetStar(value:number):number;
		 /**  得分 */
		public static getPetScoreByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call_cost
	class PetCallCallCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallCostCfgInfo;
		public static getFirstInfo():cfg.PetCallCallCostCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  次数 */
		public static getCountByIndex(value:number):number;
		 /**  消耗道具 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call
	class PetCallCallBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallCfgInfo;
		public static getFirstInfo():cfg.PetCallCallCfgInfo;
		 /**  抽卡类型 */
		public static getCallTypeByCallType(value:number):number;
		 /**  名称 */
		public static getNameByCallType(value:number):string;
		 /**  描述 */
		public static getDescByCallType(value:number):string;
		 /**  需要VIP等级 */
		public static getNeedVipLevelByCallType(value:number):number;
		 /**  免费重置时间时间:分 */
		public static getFreeResetTimeByCallType(value:number):string;
		 /**  首次必出五星次数 */
		public static getFirstContinueCountByCallType(value:number):number;
		 /**  必出五星次数 */
		public static getContinueCountByCallType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByCallType(value:number):string;
		 /**  星级概率概率_星级; */
		public static getStarRateByCallType(value:number):string;
		 /**  种族概率概率_种族; */
		public static getTypeRateByCallType(value:number):string;
		 /**  随机四星以下种族概率概率_种族; */
		public static getSpecialTypeRateByCallType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> change_pool
	class PetCallChangePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallChangePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallChangePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallChangePoolCfgInfo;
		public static getFirstInfo():cfg.PetCallChangePoolCfgInfo;
		 /**  伙伴种族 */
		public static getPetTypeByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> specail_pool
	class PetCallSpecailPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallSpecailPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallSpecailPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallSpecailPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallSpecailPoolCfgInfo;
		 /**  召唤类型 */
		public static getCallTypeByCallType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call
	class PetCallCallBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallCfgInfo;
		public static getFirstInfo():cfg.PetCallCallCfgInfo;
		 /**  抽卡类型 */
		public static getCallTypeByCallType(value:number):number;
		 /**  名称 */
		public static getNameByCallType(value:number):string;
		 /**  描述 */
		public static getDescByCallType(value:number):string;
		 /**  需要VIP等级 */
		public static getNeedVipLevelByCallType(value:number):number;
		 /**  免费重置时间时间:分 */
		public static getFreeResetTimeByCallType(value:number):string;
		 /**  首次必出五星次数 */
		public static getFirstContinueCountByCallType(value:number):number;
		 /**  必出五星次数 */
		public static getContinueCountByCallType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByCallType(value:number):string;
		 /**  星级概率概率_星级; */
		public static getStarRateByCallType(value:number):string;
		 /**  种族概率概率_种族; */
		public static getTypeRateByCallType(value:number):string;
		 /**  随机四星以下种族概率概率_种族; */
		public static getSpecialTypeRateByCallType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call_cost
	class PetCallCallCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallCostCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallCostCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallCostCfgInfo;
		public static getFirstInfo():cfg.PetCallCallCostCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  次数 */
		public static getCountByIndex(value:number):number;
		 /**  消耗道具 */
		public static getNeedItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> common_pool
	class PetCallCommonPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCommonPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCommonPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCommonPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallCommonPoolCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  种族 */
		public static getPetTypeByPetStar(value:number):number;
		 /**  概率 */
		public static getRateByPetStar(value:number):number;
		 /**  伙伴ID */
		public static getPetIDByPetStar(value:number):number;
		 /**  得分 */
		public static getPetScoreByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call_pool
	class PetCallCallPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallCallPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  召唤类型 */
		public static getCallTypeByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> change
	class PetCallChangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallChangeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallChangeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallChangeCfgInfo;
		public static getFirstInfo():cfg.PetCallChangeCfgInfo;
		 /**  星级 */
		public static getPetStarByPetStar(value:number):number;
		 /**  限制类型 */
		public static getNeedPetTypeByPetStar(value:number):string;
		 /**  消耗道具 */
		public static getNeedItemByPetStar(value:number):string;
		 /**  库ID */
		public static getRandIDByPetStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> fix_change
	class PetCallFixChangeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallFixChangeCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallFixChangeCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallFixChangeCfgInfo;
		public static getFirstInfo():cfg.PetCallFixChangeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  精灵ID */
		public static getPetIDByType(value:number):number;
		 /**  最低等级 */
		public static getMinLevelByType(value:number):number;
		 /**  最高等级 */
		public static getMaxLevelByType(value:number):number;
		 /**  最低星级 */
		public static getMinStarByType(value:number):number;
		 /**  最高星级 */
		public static getMaxStarByType(value:number):number;
		 /**  最低进化 */
		public static getMinEvolveByType(value:number):number;
		 /**  最高进化 */
		public static getMaxEvolveByType(value:number):number;
		 /**  最低进阶 */
		public static getMinAdvanceByType(value:number):number;
		 /**  最高进阶 */
		public static getMaxAdvanceByType(value:number):number;
		 /**  消耗道具 */
		public static getRemoveItemsByType(value:number):string;
		 /**  转换后精灵ID */
		public static getToPetIDByType(value:number):number;
		 /**  控制标识 */
		public static getFlagByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> change_pool
	class PetCallChangePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallChangePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallChangePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallChangePoolCfgInfo;
		public static getFirstInfo():cfg.PetCallChangePoolCfgInfo;
		 /**  伙伴种族 */
		public static getPetTypeByPetType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> specail_pool
	class PetCallSpecailPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallSpecailPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallSpecailPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallSpecailPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallSpecailPoolCfgInfo;
		 /**  召唤类型 */
		public static getCallTypeByCallType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_call.xls】 ----> call_pool
	class PetCallCallPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetCallCallPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.PetCallCallPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.PetCallCallPoolCfgInfo;
		public static getFirstInfo():cfg.PetCallCallPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  召唤类型 */
		public static getCallTypeByIndex(value:number):number;
		 /**  概率 */
		public static getRateByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> s_replaceEvolve
	class PetSkinSReplaceEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinSReplaceEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinSReplaceEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinSReplaceEvolveCfgInfo;
		public static getFirstInfo():cfg.PetSkinSReplaceEvolveCfgInfo;
		 /**  伙伴ID */
		public static getPetIDByPetID(value:number):number;
		 /**  进化段数 */
		public static getEvolveByPetID(value:number):number;
		 /**  皮肤ID */
		public static getSkinIDByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> s_replaceEvolve
	class PetSkinSReplaceEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinSReplaceEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinSReplaceEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinSReplaceEvolveCfgInfo;
		public static getFirstInfo():cfg.PetSkinSReplaceEvolveCfgInfo;
		 /**  伙伴ID */
		public static getPetIDByPetID(value:number):number;
		 /**  进化段数 */
		public static getEvolveByPetID(value:number):number;
		 /**  皮肤ID */
		public static getSkinIDByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> s_replaceSkin
	class PetSkinSReplaceSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinSReplaceSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinSReplaceSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinSReplaceSkinCfgInfo;
		public static getFirstInfo():cfg.PetSkinSReplaceSkinCfgInfo;
		 /**  精灵ID */
		public static getPetIDByPetID(value:number):number;
		 /**  进化段数 */
		public static getEvolveByPetID(value:number):number;
		 /**  皮肤ID */
		public static getSkinIDByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> petSkin
	class PetSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinCfgInfo;
		public static getFirstInfo():cfg.PetSkinCfgInfo;
		 /**  皮肤ID */
		public static getIdById(value:number):number;
		 /**  文件名 */
		public static getFileNameById(value:number):string;
		 /**  骨骼资源名称 */
		public static getSkelNameById(value:number):string;
		 /**  角色实际高度 */
		public static getTrueHeightById(value:number):number;
		 /**  是否有例会 */
		public static getHaveVDrawById(value:number):number;
		 /**  是否新资源 */
		public static getNewResById(value:number):number;
		 /**  角色高度偏移值 */
		public static getDetalHeightById(value:number):number;
		 /**  展示界面缩放比例 */
		public static getShowScaleById(value:number):number;
		 /**  战斗缩放比例 */
		public static getFightScaleById(value:number):number;
		 /**  初始动作名称 */
		public static getFirstActById(value:number):string;
		 /**  技能数据技能ID;技能ID */
		public static getAddSkillById(value:number):string;
		 /**  图标(106*106) res\Unpack\Icon\Head */
		public static getIconNameById(value:number):number;
		 /**  全身(180*226) res\Unpack\Icon\card_new */
		public static getCardById(value:number):number;
		 /**  大全身(644*566) res\Unpack\Icon\BigCard */
		public static getBigCardById(value:number):number;
		 /**  皮肤对应的原始精灵ID */
		public static getPetIDById(value:number):number;
		 /**  增加属性类型|值|万分比; */
		public static getRiskAddAttrById(value:number):string;
		 /**  形象达成条件条件_值_emPreCondition1; //需要皮肤ID3; //需要星级4; //需要玩家等级5; //需要VIP等级 */
		public static getRiskNeedConditionById(value:number):string;
		 /**  头像激活说明 */
		public static getHeadActiveDescById(value:number):string;
		 /**  是否在玩家冒险形象中显示 1显示0不显示 */
		public static getShowInPlayerBodyById(value:number):number;
		 /**  是否在玩家头像中显示 1显示0不显示 */
		public static getShowInPlayerHeadById(value:number):number;
		 /**  是否在图鉴中显示 1显示0不显示 */
		public static getShowInIllustrationById(value:number):number;
		 /**  上阵图鉴的bigCard缩放值 */
		public static getIllustrationBigCardScaleById(value:number):number;
		 /**  上阵图鉴的bigCard偏移值 */
		public static getIllustrationBigCardOffById(value:number):string;
		 /**  上阵图鉴增加的属性 */
		public static getOnIllustrationAttrById(value:number):string;
		 /**  皮肤星级(展示用) */
		public static getStarById(value:number):number;
		 /**  加成属性战力值 */
		public static getFightPowerById(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> petSkin
	class PetSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinCfgInfo;
		public static getFirstInfo():cfg.PetSkinCfgInfo;
		 /**  皮肤ID */
		public static getIdById(value:number):number;
		 /**  文件名 */
		public static getFileNameById(value:number):string;
		 /**  骨骼资源名称 */
		public static getSkelNameById(value:number):string;
		 /**  角色实际高度 */
		public static getTrueHeightById(value:number):number;
		 /**  是否有例会 */
		public static getHaveVDrawById(value:number):number;
		 /**  是否新资源 */
		public static getNewResById(value:number):number;
		 /**  角色高度偏移值 */
		public static getDetalHeightById(value:number):number;
		 /**  展示界面缩放比例 */
		public static getShowScaleById(value:number):number;
		 /**  战斗缩放比例 */
		public static getFightScaleById(value:number):number;
		 /**  初始动作名称 */
		public static getFirstActById(value:number):string;
		 /**  技能数据技能ID;技能ID */
		public static getAddSkillById(value:number):string;
		 /**  图标(106*106) res\Unpack\Icon\Head */
		public static getIconNameById(value:number):number;
		 /**  全身(180*226) res\Unpack\Icon\card_new */
		public static getCardById(value:number):number;
		 /**  大全身(644*566) res\Unpack\Icon\BigCard */
		public static getBigCardById(value:number):number;
		 /**  皮肤对应的原始精灵ID */
		public static getPetIDById(value:number):number;
		 /**  增加属性类型|值|万分比; */
		public static getRiskAddAttrById(value:number):string;
		 /**  形象达成条件条件_值_emPreCondition1; //需要皮肤ID3; //需要星级4; //需要玩家等级5; //需要VIP等级 */
		public static getRiskNeedConditionById(value:number):string;
		 /**  头像激活说明 */
		public static getHeadActiveDescById(value:number):string;
		 /**  是否在玩家冒险形象中显示 1显示0不显示 */
		public static getShowInPlayerBodyById(value:number):number;
		 /**  是否在玩家头像中显示 1显示0不显示 */
		public static getShowInPlayerHeadById(value:number):number;
		 /**  是否在图鉴中显示 1显示0不显示 */
		public static getShowInIllustrationById(value:number):number;
		 /**  上阵图鉴的bigCard缩放值 */
		public static getIllustrationBigCardScaleById(value:number):number;
		 /**  上阵图鉴的bigCard偏移值 */
		public static getIllustrationBigCardOffById(value:number):string;
		 /**  上阵图鉴增加的属性 */
		public static getOnIllustrationAttrById(value:number):string;
		 /**  皮肤星级(展示用) */
		public static getStarById(value:number):number;
		 /**  加成属性战力值 */
		public static getFightPowerById(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> s_replaceEvolve
	class PetSkinSReplaceEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinSReplaceEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinSReplaceEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinSReplaceEvolveCfgInfo;
		public static getFirstInfo():cfg.PetSkinSReplaceEvolveCfgInfo;
		 /**  伙伴ID */
		public static getPetIDByPetID(value:number):number;
		 /**  进化段数 */
		public static getEvolveByPetID(value:number):number;
		 /**  皮肤ID */
		public static getSkinIDByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> s_replaceSkin
	class PetSkinSReplaceSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinSReplaceSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinSReplaceSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinSReplaceSkinCfgInfo;
		public static getFirstInfo():cfg.PetSkinSReplaceSkinCfgInfo;
		 /**  精灵ID */
		public static getPetIDByPetID(value:number):number;
		 /**  进化段数 */
		public static getEvolveByPetID(value:number):number;
		 /**  皮肤ID */
		public static getSkinIDByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> petSkin
	class PetSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinCfgInfo;
		public static getFirstInfo():cfg.PetSkinCfgInfo;
		 /**  皮肤ID */
		public static getIdById(value:number):number;
		 /**  文件名 */
		public static getFileNameById(value:number):string;
		 /**  骨骼资源名称 */
		public static getSkelNameById(value:number):string;
		 /**  角色实际高度 */
		public static getTrueHeightById(value:number):number;
		 /**  是否有例会 */
		public static getHaveVDrawById(value:number):number;
		 /**  是否新资源 */
		public static getNewResById(value:number):number;
		 /**  角色高度偏移值 */
		public static getDetalHeightById(value:number):number;
		 /**  展示界面缩放比例 */
		public static getShowScaleById(value:number):number;
		 /**  战斗缩放比例 */
		public static getFightScaleById(value:number):number;
		 /**  初始动作名称 */
		public static getFirstActById(value:number):string;
		 /**  技能数据技能ID;技能ID */
		public static getAddSkillById(value:number):string;
		 /**  图标(106*106) res\Unpack\Icon\Head */
		public static getIconNameById(value:number):number;
		 /**  全身(180*226) res\Unpack\Icon\card_new */
		public static getCardById(value:number):number;
		 /**  大全身(644*566) res\Unpack\Icon\BigCard */
		public static getBigCardById(value:number):number;
		 /**  皮肤对应的原始精灵ID */
		public static getPetIDById(value:number):number;
		 /**  增加属性类型|值|万分比; */
		public static getRiskAddAttrById(value:number):string;
		 /**  形象达成条件条件_值_emPreCondition1; //需要皮肤ID3; //需要星级4; //需要玩家等级5; //需要VIP等级 */
		public static getRiskNeedConditionById(value:number):string;
		 /**  头像激活说明 */
		public static getHeadActiveDescById(value:number):string;
		 /**  是否在玩家冒险形象中显示 1显示0不显示 */
		public static getShowInPlayerBodyById(value:number):number;
		 /**  是否在玩家头像中显示 1显示0不显示 */
		public static getShowInPlayerHeadById(value:number):number;
		 /**  是否在图鉴中显示 1显示0不显示 */
		public static getShowInIllustrationById(value:number):number;
		 /**  上阵图鉴的bigCard缩放值 */
		public static getIllustrationBigCardScaleById(value:number):number;
		 /**  上阵图鉴的bigCard偏移值 */
		public static getIllustrationBigCardOffById(value:number):string;
		 /**  上阵图鉴增加的属性 */
		public static getOnIllustrationAttrById(value:number):string;
		 /**  皮肤星级(展示用) */
		public static getStarById(value:number):number;
		 /**  加成属性战力值 */
		public static getFightPowerById(value:number):string;
		 /**  是否不启用精灵 */
		public static getInvalidById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_pet_skin.xls】 ----> s_replaceSkin
	class PetSkinSReplaceSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PetSkinSReplaceSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.PetSkinSReplaceSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.PetSkinSReplaceSkinCfgInfo;
		public static getFirstInfo():cfg.PetSkinSReplaceSkinCfgInfo;
		 /**  精灵ID */
		public static getPetIDByPetID(value:number):number;
		 /**  进化段数 */
		public static getEvolveByPetID(value:number):number;
		 /**  皮肤ID */
		public static getSkinIDByPetID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_player.xls】 ----> Level
	class PlayerLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PlayerLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.PlayerLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.PlayerLevelCfgInfo;
		public static getFirstInfo():cfg.PlayerLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升级到下一级经验 */
		public static getNeedExpByLevel(value:number):number;
		 /**  升级奖励（升到当前级的奖励） */
		public static getAddPrizeByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_player.xls】 ----> Level
	class PlayerLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PlayerLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.PlayerLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.PlayerLevelCfgInfo;
		public static getFirstInfo():cfg.PlayerLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升级到下一级经验 */
		public static getNeedExpByLevel(value:number):number;
		 /**  升级奖励（升到当前级的奖励） */
		public static getAddPrizeByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_player.xls】 ----> Level
	class PlayerLevelBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PlayerLevelCfgInfo>;
			public static setup(dataArr:Array<cfg.PlayerLevelCfgInfo>):void;
		public static getInfo(value:number):cfg.PlayerLevelCfgInfo;
		public static getFirstInfo():cfg.PlayerLevelCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  升级到下一级经验 */
		public static getNeedExpByLevel(value:number):number;
		 /**  升级奖励（升到当前级的奖励） */
		public static getAddPrizeByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_player_name.xls】 ----> Name
	class PlayerNameNameBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PlayerNameNameCfgInfo>;
			public static setup(dataArr:Array<cfg.PlayerNameNameCfgInfo>):void;
		public static getInfo(value:number):cfg.PlayerNameNameCfgInfo;
		public static getFirstInfo():cfg.PlayerNameNameCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  姓氏 */
		public static getSurNameByIndex(value:number):string;
		 /**  男名 */
		public static getMaleNameByIndex(value:number):string;
		 /**  女名 */
		public static getFemaleNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_player_name.xls】 ----> Name
	class PlayerNameNameBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PlayerNameNameCfgInfo>;
			public static setup(dataArr:Array<cfg.PlayerNameNameCfgInfo>):void;
		public static getInfo(value:number):cfg.PlayerNameNameCfgInfo;
		public static getFirstInfo():cfg.PlayerNameNameCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  姓氏 */
		public static getSurNameByIndex(value:number):string;
		 /**  男名 */
		public static getMaleNameByIndex(value:number):string;
		 /**  女名 */
		public static getFemaleNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_player_name.xls】 ----> Name
	class PlayerNameNameBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PlayerNameNameCfgInfo>;
			public static setup(dataArr:Array<cfg.PlayerNameNameCfgInfo>):void;
		public static getInfo(value:number):cfg.PlayerNameNameCfgInfo;
		public static getFirstInfo():cfg.PlayerNameNameCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  姓氏 */
		public static getSurNameByIndex(value:number):string;
		 /**  男名 */
		public static getMaleNameByIndex(value:number):string;
		 /**  女名 */
		public static getFemaleNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> daily_prize
	class PrivilegeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeDailyPrizeCfgInfo;
		 /**  类型_emPrivilegeDailyPacket */
		public static getTypeByType(value:number):number;
		 /**  需要特权卡_emPrivilegeCard */
		public static getNeedCardIDByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> shop
	class PrivilegeShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeShopCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeShopCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeShopCfgInfo;
		public static getFirstInfo():cfg.PrivilegeShopCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  描述 */
		public static getDescribeByIndex(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  对应特权cardid */
		public static getCardIDByIndex(value:number):number;
		 /**  补偿奖励 */
		public static getCompensationByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> vip
	class PrivilegeVipBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeVipCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeVipCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeVipCfgInfo;
		public static getFirstInfo():cfg.PrivilegeVipCfgInfo;
		 /**  vip等级 */
		public static getVipLevelByVipLevel(value:number):number;
		 /**  需要最低经验（充值元宝） */
		public static getNeedExpByVipLevel(value:number):number;
		 /**  是否广播（1广播） */
		public static getIsBroadcastByVipLevel(value:number):number;
		 /**  礼包原价 */
		public static getOldPriceByVipLevel(value:number):number;
		 /**  礼包需要的道具 */
		public static getNeedItemByVipLevel(value:number):string;
		 /**  增加礼包 */
		public static getAddPacketByVipLevel(value:number):string;
		 /**  至尊月卡每日礼包 */
		public static getMonthPacketByVipLevel(value:number):string;
		 /**  增加特权 */
		public static getAddPrivilegeByVipLevel(value:number):string;
		 /**  内容 */
		public static getContentByVipLevel(value:number):string;
		 /**  增加头像框 */
		public static getAddHeadIconByVipLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> card
	class PrivilegeCardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeCardCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeCardCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeCardCfgInfo;
		public static getFirstInfo():cfg.PrivilegeCardCfgInfo;
		 /**  特权卡_emPrivilegeCard */
		public static getCardIDByCardID(value:number):number;
		 /**  名称 */
		public static getNameByCardID(value:number):string;
		 /**  需要充值 */
		public static getNeedMoneyByCardID(value:number):number;
		 /**  有效天数 */
		public static getExpireDaysByCardID(value:number):number;
		 /**  特权ID特权1_值;特权2_值; */
		public static getAddPrivilegeByCardID(value:number):string;
		 /**  充值金额有效时间 */
		public static getRechargeExpireDaysByCardID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> daily_first_charge
	class PrivilegeDailyFirstChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeDailyFirstChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeDailyFirstChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeDailyFirstChargeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeDailyFirstChargeCfgInfo;
		 /**  等级要求 */
		public static getNeedLevelByNeedLevel(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByNeedLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> privilege
	class PrivilegeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeCfgInfo;
		 /**  特权类型_emPrivilegeType */
		public static getPrivilegeTypeByPrivilegeType(value:number):number;
		 /**  名字 */
		public static getNameByPrivilegeType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> card
	class PrivilegeCardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeCardCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeCardCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeCardCfgInfo;
		public static getFirstInfo():cfg.PrivilegeCardCfgInfo;
		 /**  特权卡_emPrivilegeCard */
		public static getCardIDByCardID(value:number):number;
		 /**  名称 */
		public static getNameByCardID(value:number):string;
		 /**  需要充值 */
		public static getNeedMoneyByCardID(value:number):number;
		 /**  有效天数 */
		public static getExpireDaysByCardID(value:number):number;
		 /**  特权ID特权1_值;特权2_值; */
		public static getAddPrivilegeByCardID(value:number):string;
		 /**  充值金额有效时间 */
		public static getRechargeExpireDaysByCardID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> privilege
	class PrivilegeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeCfgInfo;
		 /**  特权类型_emPrivilegeType */
		public static getPrivilegeTypeByPrivilegeType(value:number):number;
		 /**  名字 */
		public static getNameByPrivilegeType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> shop
	class PrivilegeShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeShopCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeShopCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeShopCfgInfo;
		public static getFirstInfo():cfg.PrivilegeShopCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  描述 */
		public static getDescribeByIndex(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  对应特权cardid */
		public static getCardIDByIndex(value:number):number;
		 /**  补偿奖励 */
		public static getCompensationByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> vip
	class PrivilegeVipBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeVipCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeVipCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeVipCfgInfo;
		public static getFirstInfo():cfg.PrivilegeVipCfgInfo;
		 /**  vip等级 */
		public static getVipLevelByVipLevel(value:number):number;
		 /**  需要最低经验（充值元宝） */
		public static getNeedExpByVipLevel(value:number):number;
		 /**  是否广播（1广播） */
		public static getIsBroadcastByVipLevel(value:number):number;
		 /**  礼包原价 */
		public static getOldPriceByVipLevel(value:number):number;
		 /**  礼包需要的道具 */
		public static getNeedItemByVipLevel(value:number):string;
		 /**  增加礼包 */
		public static getAddPacketByVipLevel(value:number):string;
		 /**  至尊月卡每日礼包 */
		public static getMonthPacketByVipLevel(value:number):string;
		 /**  增加特权 */
		public static getAddPrivilegeByVipLevel(value:number):string;
		 /**  内容 */
		public static getContentByVipLevel(value:number):string;
		 /**  增加头像框 */
		public static getAddHeadIconByVipLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> daily_first_charge
	class PrivilegeDailyFirstChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeDailyFirstChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeDailyFirstChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeDailyFirstChargeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeDailyFirstChargeCfgInfo;
		 /**  等级要求 */
		public static getNeedLevelByNeedLevel(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByNeedLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> card
	class PrivilegeCardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeCardCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeCardCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeCardCfgInfo;
		public static getFirstInfo():cfg.PrivilegeCardCfgInfo;
		 /**  特权卡_emPrivilegeCard */
		public static getCardIDByCardID(value:number):number;
		 /**  名称 */
		public static getNameByCardID(value:number):string;
		 /**  需要充值 */
		public static getNeedMoneyByCardID(value:number):number;
		 /**  有效天数 */
		public static getExpireDaysByCardID(value:number):number;
		 /**  特权ID特权1_值;特权2_值; */
		public static getAddPrivilegeByCardID(value:number):string;
		 /**  充值金额有效时间 */
		public static getRechargeExpireDaysByCardID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> daily_prize
	class PrivilegeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeDailyPrizeCfgInfo;
		 /**  类型_emPrivilegeDailyPacket */
		public static getTypeByType(value:number):number;
		 /**  需要特权卡_emPrivilegeCard */
		public static getNeedCardIDByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> daily_first_charge
	class PrivilegeDailyFirstChargeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeDailyFirstChargeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeDailyFirstChargeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeDailyFirstChargeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeDailyFirstChargeCfgInfo;
		 /**  等级要求 */
		public static getNeedLevelByNeedLevel(value:number):number;
		 /**  奖励物品 */
		public static getAddItemByNeedLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> privilege
	class PrivilegeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeCfgInfo;
		 /**  特权类型_emPrivilegeType */
		public static getPrivilegeTypeByPrivilegeType(value:number):number;
		 /**  名字 */
		public static getNameByPrivilegeType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> vip
	class PrivilegeVipBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeVipCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeVipCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeVipCfgInfo;
		public static getFirstInfo():cfg.PrivilegeVipCfgInfo;
		 /**  vip等级 */
		public static getVipLevelByVipLevel(value:number):number;
		 /**  需要最低经验（充值元宝） */
		public static getNeedExpByVipLevel(value:number):number;
		 /**  是否广播（1广播） */
		public static getIsBroadcastByVipLevel(value:number):number;
		 /**  礼包原价 */
		public static getOldPriceByVipLevel(value:number):number;
		 /**  礼包需要的道具 */
		public static getNeedItemByVipLevel(value:number):string;
		 /**  增加礼包 */
		public static getAddPacketByVipLevel(value:number):string;
		 /**  至尊月卡每日礼包 */
		public static getMonthPacketByVipLevel(value:number):string;
		 /**  增加特权 */
		public static getAddPrivilegeByVipLevel(value:number):string;
		 /**  内容 */
		public static getContentByVipLevel(value:number):string;
		 /**  增加头像框 */
		public static getAddHeadIconByVipLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> shop
	class PrivilegeShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeShopCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeShopCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeShopCfgInfo;
		public static getFirstInfo():cfg.PrivilegeShopCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  名称 */
		public static getNameByIndex(value:number):string;
		 /**  描述 */
		public static getDescribeByIndex(value:number):string;
		 /**  需要道具 */
		public static getNeedItemByIndex(value:number):string;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  对应特权cardid */
		public static getCardIDByIndex(value:number):number;
		 /**  补偿奖励 */
		public static getCompensationByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_privilege.xls】 ----> daily_prize
	class PrivilegeDailyPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrivilegeDailyPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrivilegeDailyPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrivilegeDailyPrizeCfgInfo;
		public static getFirstInfo():cfg.PrivilegeDailyPrizeCfgInfo;
		 /**  类型_emPrivilegeDailyPacket */
		public static getTypeByType(value:number):number;
		 /**  需要特权卡_emPrivilegeCard */
		public static getNeedCardIDByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> Prize
	class PrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeCfgInfo;
		 /**  奖励ID */
		public static getPrizeIDByPrizeID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> common_prize
	class PrizeCommonPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeCommonPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeCommonPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeCommonPrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeCommonPrizeCfgInfo;
		 /**  ID_emCommonPrizeType */
		public static getIDByID(value:number):number;
		 /**  道具奖励ID_数量;ID_数量; */
		public static getAddItemByID(value:number):string;
		 /**  按钮文字 */
		public static getNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> friend_prize
	class PrizeFriendPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeFriendPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeFriendPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeFriendPrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeFriendPrizeCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> Prize
	class PrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeCfgInfo;
		 /**  奖励ID */
		public static getPrizeIDByPrizeID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> Prize
	class PrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeCfgInfo;
		 /**  奖励ID */
		public static getPrizeIDByPrizeID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> friend_prize
	class PrizeFriendPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeFriendPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeFriendPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeFriendPrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeFriendPrizeCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> common_prize
	class PrizeCommonPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeCommonPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeCommonPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeCommonPrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeCommonPrizeCfgInfo;
		 /**  ID_emCommonPrizeType */
		public static getIDByID(value:number):number;
		 /**  道具奖励ID_数量;ID_数量; */
		public static getAddItemByID(value:number):string;
		 /**  按钮文字 */
		public static getNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> friend_prize
	class PrizeFriendPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeFriendPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeFriendPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeFriendPrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeFriendPrizeCfgInfo;
		 /**  次数 */
		public static getCountByCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_prize.xls】 ----> common_prize
	class PrizeCommonPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.PrizeCommonPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.PrizeCommonPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.PrizeCommonPrizeCfgInfo;
		public static getFirstInfo():cfg.PrizeCommonPrizeCfgInfo;
		 /**  ID_emCommonPrizeType */
		public static getIDByID(value:number):number;
		 /**  道具奖励ID_数量;ID_数量; */
		public static getAddItemByID(value:number):string;
		 /**  按钮文字 */
		public static getNameByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> star
	class ResonanceStarBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceStarCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceStarCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceStarCfgInfo;
		public static getFirstInfo():cfg.ResonanceStarCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  升到下一级需要消耗道具数量 */
		public static getNeedItemCountByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> grid
	class ResonanceGridBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceGridCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceGridCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceGridCfgInfo;
		public static getFirstInfo():cfg.ResonanceGridCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  格子索引 */
		public static getGridIdxByType(value:number):number;
		 /**  开启条件 */
		public static getConditionByType(value:number):string;
		 /**  消耗道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> grid
	class ResonanceGridBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceGridCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceGridCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceGridCfgInfo;
		public static getFirstInfo():cfg.ResonanceGridCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  格子索引 */
		public static getGridIdxByType(value:number):number;
		 /**  开启条件 */
		public static getConditionByType(value:number):string;
		 /**  消耗道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> common
	class ResonanceCommonBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceCommonCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceCommonCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceCommonCfgInfo;
		public static getFirstInfo():cfg.ResonanceCommonCfgInfo;
		 /**  共鸣冷却(单位秒) */
		public static getCoolingByCooling(value:number):number;
		 /**  共鸣冷却重置消耗（每小时x钻石） */
		public static getCoolingConsumeByCooling(value:number):number;
		 /**  供奉最小星级 */
		public static getMinStarByCooling(value:number):number;
		 /**  放置最低星级 */
		public static getUpMinStarByCooling(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> star
	class ResonanceStarBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceStarCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceStarCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceStarCfgInfo;
		public static getFirstInfo():cfg.ResonanceStarCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  升到下一级需要消耗道具数量 */
		public static getNeedItemCountByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> grid
	class ResonanceGridBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceGridCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceGridCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceGridCfgInfo;
		public static getFirstInfo():cfg.ResonanceGridCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  格子索引 */
		public static getGridIdxByType(value:number):number;
		 /**  开启条件 */
		public static getConditionByType(value:number):string;
		 /**  消耗道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> star
	class ResonanceStarBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceStarCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceStarCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceStarCfgInfo;
		public static getFirstInfo():cfg.ResonanceStarCfgInfo;
		 /**  星级 */
		public static getStarByStar(value:number):number;
		 /**  升到下一级需要消耗道具数量 */
		public static getNeedItemCountByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> common
	class ResonanceCommonBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceCommonCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceCommonCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceCommonCfgInfo;
		public static getFirstInfo():cfg.ResonanceCommonCfgInfo;
		 /**  共鸣冷却(单位秒) */
		public static getCoolingByCooling(value:number):number;
		 /**  共鸣冷却重置消耗（每小时x钻石） */
		public static getCoolingConsumeByCooling(value:number):number;
		 /**  供奉最小星级 */
		public static getMinStarByCooling(value:number):number;
		 /**  放置最低星级 */
		public static getUpMinStarByCooling(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_resonance.xls】 ----> common
	class ResonanceCommonBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResonanceCommonCfgInfo>;
			public static setup(dataArr:Array<cfg.ResonanceCommonCfgInfo>):void;
		public static getInfo(value:number):cfg.ResonanceCommonCfgInfo;
		public static getFirstInfo():cfg.ResonanceCommonCfgInfo;
		 /**  共鸣冷却(单位秒) */
		public static getCoolingByCooling(value:number):number;
		 /**  共鸣冷却重置消耗（每小时x钻石） */
		public static getCoolingConsumeByCooling(value:number):number;
		 /**  供奉最小星级 */
		public static getMinStarByCooling(value:number):number;
		 /**  放置最低星级 */
		public static getUpMinStarByCooling(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> event
	class RiskEventBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskEventCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskEventCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskEventCfgInfo;
		public static getFirstInfo():cfg.RiskEventCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  对方类型 */
		public static getTargetTypeByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1扣除消耗 */
		public static getNeedExpendByID(value:number):string;
		 /**  选项1 */
		public static getOption1ByID(value:number):string;
		 /**  选项2 */
		public static getOption2ByID(value:number):string;
		 /**  答案 */
		public static getResultByID(value:number):number;
		 /**  答对时说的话 */
		public static getTrueDesByID(value:number):string;
		 /**  答错时说的话 */
		public static getFaildDesByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> guard
	class RiskGuardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGuardCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGuardCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGuardCfgInfo;
		public static getFirstInfo():cfg.RiskGuardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  层数 */
		public static getStageByIndex(value:number):number;
		 /**  守卫序号 */
		public static getGuardIndexByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  是否自动开启 */
		public static getIsAutoOpenByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> refresh
	class RiskRefreshBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskRefreshCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskRefreshCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskRefreshCfgInfo;
		public static getFirstInfo():cfg.RiskRefreshCfgInfo;
		 /**  类型_emRiskRefreshType */
		public static getTypeByType(value:number):number;
		 /**  是否自动拾取 */
		public static getIsAutoCollectByType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> shop
	class RiskShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskShopCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskShopCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskShopCfgInfo;
		public static getFirstInfo():cfg.RiskShopCfgInfo;
		 /**  商品索引 */
		public static getIndexByIndex(value:number):number;
		 /**  道具信息 */
		public static getSellItemByIndex(value:number):string;
		 /**  价格 */
		public static getSellPrizeByIndex(value:number):string;
		 /**  折扣 */
		public static getDiscountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> grid_open
	class RiskGridOpenBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGridOpenCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGridOpenCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGridOpenCfgInfo;
		public static getFirstInfo():cfg.RiskGridOpenCfgInfo;
		 /**  守卫序号 */
		public static getGuardIndexByGuardIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> guard_prize
	class RiskGuardPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGuardPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGuardPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGuardPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskGuardPrizeCfgInfo;
		 /**  个数 */
		public static getCountByCount(value:number):number;
		 /**  增加道具 */
		public static getAddItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> dialog
	class RiskDialogBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskDialogCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskDialogCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskDialogCfgInfo;
		public static getFirstInfo():cfg.RiskDialogCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1 */
		public static getOption1ByID(value:number):string;
		 /**  选项2 */
		public static getOption2ByID(value:number):string;
		 /**  选项3 */
		public static getOption3ByID(value:number):string;
		 /**  选项1时说的话 */
		public static getOption1DesByID(value:number):string;
		 /**  选项2时说的话 */
		public static getOption2DesByID(value:number):string;
		 /**  选项3时说的话 */
		public static getOption3DesByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> event
	class RiskEventBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskEventCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskEventCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskEventCfgInfo;
		public static getFirstInfo():cfg.RiskEventCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  对方类型 */
		public static getTargetTypeByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1扣除消耗 */
		public static getNeedExpendByID(value:number):string;
		 /**  选项1 */
		public static getOption1ByID(value:number):string;
		 /**  选项2 */
		public static getOption2ByID(value:number):string;
		 /**  答案 */
		public static getResultByID(value:number):number;
		 /**  答对时说的话 */
		public static getTrueDesByID(value:number):string;
		 /**  答错时说的话 */
		public static getFaildDesByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> finger_prize
	class RiskFingerPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskFingerPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskFingerPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskFingerPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskFingerPrizeCfgInfo;
		 /**  选择类型 */
		public static getSelectTypeBySelectType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySelectType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> question
	class RiskQuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskQuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskQuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskQuestionCfgInfo;
		public static getFirstInfo():cfg.RiskQuestionCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1 */
		public static getOptionAByID(value:number):string;
		 /**  选项2 */
		public static getOptionBByID(value:number):string;
		 /**  选项3 */
		public static getOptionCByID(value:number):string;
		 /**  选项4 */
		public static getOptionDByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> shop
	class RiskShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskShopCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskShopCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskShopCfgInfo;
		public static getFirstInfo():cfg.RiskShopCfgInfo;
		 /**  商品索引 */
		public static getIndexByIndex(value:number):number;
		 /**  道具信息 */
		public static getSellItemByIndex(value:number):string;
		 /**  价格 */
		public static getSellPrizeByIndex(value:number):string;
		 /**  折扣 */
		public static getDiscountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> grid_open
	class RiskGridOpenBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGridOpenCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGridOpenCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGridOpenCfgInfo;
		public static getFirstInfo():cfg.RiskGridOpenCfgInfo;
		 /**  守卫序号 */
		public static getGuardIndexByGuardIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> guard
	class RiskGuardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGuardCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGuardCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGuardCfgInfo;
		public static getFirstInfo():cfg.RiskGuardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  层数 */
		public static getStageByIndex(value:number):number;
		 /**  守卫序号 */
		public static getGuardIndexByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  是否自动开启 */
		public static getIsAutoOpenByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> refresh
	class RiskRefreshBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskRefreshCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskRefreshCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskRefreshCfgInfo;
		public static getFirstInfo():cfg.RiskRefreshCfgInfo;
		 /**  类型_emRiskRefreshType */
		public static getTypeByType(value:number):number;
		 /**  是否自动拾取 */
		public static getIsAutoCollectByType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_randprize
	class RiskCollectRandprizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectRandprizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectRandprizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectRandprizeCfgInfo;
		public static getFirstInfo():cfg.RiskCollectRandprizeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> question
	class RiskQuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskQuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskQuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskQuestionCfgInfo;
		public static getFirstInfo():cfg.RiskQuestionCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1 */
		public static getOptionAByID(value:number):string;
		 /**  选项2 */
		public static getOptionBByID(value:number):string;
		 /**  选项3 */
		public static getOptionCByID(value:number):string;
		 /**  选项4 */
		public static getOptionDByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> finger_result
	class RiskFingerResultBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskFingerResultCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskFingerResultCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskFingerResultCfgInfo;
		public static getFirstInfo():cfg.RiskFingerResultCfgInfo;
		 /**  自己类型 */
		public static getSelfTypeBySelfType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> monster_new
	class RiskMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskMonsterNewCfgInfo;
		public static getFirstInfo():cfg.RiskMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  附加属性值(属性|值|百分比_属性|值|百分比;)分号留空表示这个怪物没有附加属性 */
		public static getAttributeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_skill
	class RiskCollectSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectSkillCfgInfo;
		public static getFirstInfo():cfg.RiskCollectSkillCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_prize
	class RiskCollectPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskCollectPrizeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  层数 */
		public static getStageByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> dialog
	class RiskDialogBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskDialogCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskDialogCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskDialogCfgInfo;
		public static getFirstInfo():cfg.RiskDialogCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1 */
		public static getOption1ByID(value:number):string;
		 /**  选项2 */
		public static getOption2ByID(value:number):string;
		 /**  选项3 */
		public static getOption3ByID(value:number):string;
		 /**  选项1时说的话 */
		public static getOption1DesByID(value:number):string;
		 /**  选项2时说的话 */
		public static getOption2DesByID(value:number):string;
		 /**  选项3时说的话 */
		public static getOption3DesByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> question
	class RiskQuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskQuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskQuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskQuestionCfgInfo;
		public static getFirstInfo():cfg.RiskQuestionCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1 */
		public static getOptionAByID(value:number):string;
		 /**  选项2 */
		public static getOptionBByID(value:number):string;
		 /**  选项3 */
		public static getOptionCByID(value:number):string;
		 /**  选项4 */
		public static getOptionDByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> finger_prize
	class RiskFingerPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskFingerPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskFingerPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskFingerPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskFingerPrizeCfgInfo;
		 /**  选择类型 */
		public static getSelectTypeBySelectType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySelectType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> finger_result
	class RiskFingerResultBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskFingerResultCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskFingerResultCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskFingerResultCfgInfo;
		public static getFirstInfo():cfg.RiskFingerResultCfgInfo;
		 /**  自己类型 */
		public static getSelfTypeBySelfType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_randprize
	class RiskCollectRandprizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectRandprizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectRandprizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectRandprizeCfgInfo;
		public static getFirstInfo():cfg.RiskCollectRandprizeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_prize
	class RiskCollectPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskCollectPrizeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  层数 */
		public static getStageByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> guard_prize
	class RiskGuardPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGuardPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGuardPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGuardPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskGuardPrizeCfgInfo;
		 /**  个数 */
		public static getCountByCount(value:number):number;
		 /**  增加道具 */
		public static getAddItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> grid_open
	class RiskGridOpenBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGridOpenCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGridOpenCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGridOpenCfgInfo;
		public static getFirstInfo():cfg.RiskGridOpenCfgInfo;
		 /**  守卫序号 */
		public static getGuardIndexByGuardIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> shop
	class RiskShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskShopCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskShopCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskShopCfgInfo;
		public static getFirstInfo():cfg.RiskShopCfgInfo;
		 /**  商品索引 */
		public static getIndexByIndex(value:number):number;
		 /**  道具信息 */
		public static getSellItemByIndex(value:number):string;
		 /**  价格 */
		public static getSellPrizeByIndex(value:number):string;
		 /**  折扣 */
		public static getDiscountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> refresh
	class RiskRefreshBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskRefreshCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskRefreshCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskRefreshCfgInfo;
		public static getFirstInfo():cfg.RiskRefreshCfgInfo;
		 /**  类型_emRiskRefreshType */
		public static getTypeByType(value:number):number;
		 /**  是否自动拾取 */
		public static getIsAutoCollectByType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> guard
	class RiskGuardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGuardCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGuardCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGuardCfgInfo;
		public static getFirstInfo():cfg.RiskGuardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  层数 */
		public static getStageByIndex(value:number):number;
		 /**  守卫序号 */
		public static getGuardIndexByIndex(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByIndex(value:number):number;
		 /**  是否自动开启 */
		public static getIsAutoOpenByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_skill
	class RiskCollectSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectSkillCfgInfo;
		public static getFirstInfo():cfg.RiskCollectSkillCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_prize
	class RiskCollectPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskCollectPrizeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  层数 */
		public static getStageByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> dialog
	class RiskDialogBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskDialogCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskDialogCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskDialogCfgInfo;
		public static getFirstInfo():cfg.RiskDialogCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1 */
		public static getOption1ByID(value:number):string;
		 /**  选项2 */
		public static getOption2ByID(value:number):string;
		 /**  选项3 */
		public static getOption3ByID(value:number):string;
		 /**  选项1时说的话 */
		public static getOption1DesByID(value:number):string;
		 /**  选项2时说的话 */
		public static getOption2DesByID(value:number):string;
		 /**  选项3时说的话 */
		public static getOption3DesByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> event
	class RiskEventBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskEventCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskEventCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskEventCfgInfo;
		public static getFirstInfo():cfg.RiskEventCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  对方类型 */
		public static getTargetTypeByID(value:number):number;
		 /**  题目 */
		public static getQuestionByID(value:number):string;
		 /**  选项1扣除消耗 */
		public static getNeedExpendByID(value:number):string;
		 /**  选项1 */
		public static getOption1ByID(value:number):string;
		 /**  选项2 */
		public static getOption2ByID(value:number):string;
		 /**  答案 */
		public static getResultByID(value:number):number;
		 /**  答对时说的话 */
		public static getTrueDesByID(value:number):string;
		 /**  答错时说的话 */
		public static getFaildDesByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_skill
	class RiskCollectSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectSkillCfgInfo;
		public static getFirstInfo():cfg.RiskCollectSkillCfgInfo;
		 /**  概率 */
		public static getRateByRate(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> monster_new
	class RiskMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskMonsterNewCfgInfo;
		public static getFirstInfo():cfg.RiskMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  附加属性值(属性|值|百分比_属性|值|百分比;)分号留空表示这个怪物没有附加属性 */
		public static getAttributeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> monster_new
	class RiskMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskMonsterNewCfgInfo;
		public static getFirstInfo():cfg.RiskMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  附加属性值(属性|值|百分比_属性|值|百分比;)分号留空表示这个怪物没有附加属性 */
		public static getAttributeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> collect_randprize
	class RiskCollectRandprizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskCollectRandprizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskCollectRandprizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskCollectRandprizeCfgInfo;
		public static getFirstInfo():cfg.RiskCollectRandprizeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  增加道具 */
		public static getAddItemByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> guard_prize
	class RiskGuardPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskGuardPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskGuardPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskGuardPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskGuardPrizeCfgInfo;
		 /**  个数 */
		public static getCountByCount(value:number):number;
		 /**  增加道具 */
		public static getAddItemByCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> finger_result
	class RiskFingerResultBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskFingerResultCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskFingerResultCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskFingerResultCfgInfo;
		public static getFirstInfo():cfg.RiskFingerResultCfgInfo;
		 /**  自己类型 */
		public static getSelfTypeBySelfType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_risk.xls】 ----> finger_prize
	class RiskFingerPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RiskFingerPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.RiskFingerPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.RiskFingerPrizeCfgInfo;
		public static getFirstInfo():cfg.RiskFingerPrizeCfgInfo;
		 /**  选择类型 */
		public static getSelectTypeBySelectType(value:number):number;
		 /**  需要道具 */
		public static getNeedItemBySelectType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_room.xls】 ----> furniture
	class RoomFurnitureBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RoomFurnitureCfgInfo>;
			public static setup(dataArr:Array<cfg.RoomFurnitureCfgInfo>):void;
		public static getInfo(value:number):cfg.RoomFurnitureCfgInfo;
		public static getFirstInfo():cfg.RoomFurnitureCfgInfo;
		 /**  家具类型id */
		public static getTypeByType(value:number):number;
		 /**  家具分类 */
		public static getClassifyByType(value:number):number;
		 /**  同时存在上限 */
		public static getLimitByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_room.xls】 ----> furniture
	class RoomFurnitureBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RoomFurnitureCfgInfo>;
			public static setup(dataArr:Array<cfg.RoomFurnitureCfgInfo>):void;
		public static getInfo(value:number):cfg.RoomFurnitureCfgInfo;
		public static getFirstInfo():cfg.RoomFurnitureCfgInfo;
		 /**  家具类型id */
		public static getTypeByType(value:number):number;
		 /**  家具分类 */
		public static getClassifyByType(value:number):number;
		 /**  同时存在上限 */
		public static getLimitByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_room.xls】 ----> furniture
	class RoomFurnitureBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RoomFurnitureCfgInfo>;
			public static setup(dataArr:Array<cfg.RoomFurnitureCfgInfo>):void;
		public static getInfo(value:number):cfg.RoomFurnitureCfgInfo;
		public static getFirstInfo():cfg.RoomFurnitureCfgInfo;
		 /**  家具类型id */
		public static getTypeByType(value:number):number;
		 /**  家具分类 */
		public static getClassifyByType(value:number):number;
		 /**  同时存在上限 */
		public static getLimitByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> refine
	class RuneRefineBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRefineCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRefineCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRefineCfgInfo;
		public static getFirstInfo():cfg.RuneRefineCfgInfo;
		 /**  铭文类型1;//星辰符文2;//月亮符文3;//太阳符文4;//彩虹符文5;//闪烁符文 */
		public static getRuneTypeByRuneType(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByRuneType(value:number):string;
		 /**  锁定一个的消耗 */
		public static getLockNeedItemByRuneType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> randskill
	class RuneRandskillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRandskillCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRandskillCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRandskillCfgInfo;
		public static getFirstInfo():cfg.RuneRandskillCfgInfo;
		 /**  铭文类型1;//星辰符文2;//月亮符文3;//太阳符文4;//彩虹符文5;//闪烁符文 */
		public static getRuneTypeByRuneType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> randattr
	class RuneRandattrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRandattrCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRandattrCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRandattrCfgInfo;
		public static getFirstInfo():cfg.RuneRandattrCfgInfo;
		 /**  属性索引 */
		public static getAttrIndexByAttrIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> fixed
	class RuneFixedBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneFixedCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneFixedCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneFixedCfgInfo;
		public static getFirstInfo():cfg.RuneFixedCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> fixed
	class RuneFixedBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneFixedCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneFixedCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneFixedCfgInfo;
		public static getFirstInfo():cfg.RuneFixedCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> randskill
	class RuneRandskillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRandskillCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRandskillCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRandskillCfgInfo;
		public static getFirstInfo():cfg.RuneRandskillCfgInfo;
		 /**  铭文类型1;//星辰符文2;//月亮符文3;//太阳符文4;//彩虹符文5;//闪烁符文 */
		public static getRuneTypeByRuneType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> compound
	class RuneCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneCompoundCfgInfo;
		public static getFirstInfo():cfg.RuneCompoundCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;
		 /**  道具名称 */
		public static getItemNameByItemID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByItemID(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByItemID(value:number):string;
		 /**  需要道具ID */
		public static getNeedItemIDByItemID(value:number):number;
		 /**  数量概率数量_概率万分比; */
		public static getCountRateByItemID(value:number):string;
		 /**  是否可合成 */
		public static getIfSynthesisByItemID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> compound
	class RuneCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneCompoundCfgInfo;
		public static getFirstInfo():cfg.RuneCompoundCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;
		 /**  道具名称 */
		public static getItemNameByItemID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByItemID(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByItemID(value:number):string;
		 /**  需要道具ID */
		public static getNeedItemIDByItemID(value:number):number;
		 /**  数量概率数量_概率万分比; */
		public static getCountRateByItemID(value:number):string;
		 /**  是否可合成 */
		public static getIfSynthesisByItemID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> randattr
	class RuneRandattrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRandattrCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRandattrCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRandattrCfgInfo;
		public static getFirstInfo():cfg.RuneRandattrCfgInfo;
		 /**  属性索引 */
		public static getAttrIndexByAttrIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> refine
	class RuneRefineBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRefineCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRefineCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRefineCfgInfo;
		public static getFirstInfo():cfg.RuneRefineCfgInfo;
		 /**  铭文类型1;//星辰符文2;//月亮符文3;//太阳符文4;//彩虹符文5;//闪烁符文 */
		public static getRuneTypeByRuneType(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByRuneType(value:number):string;
		 /**  锁定一个的消耗 */
		public static getLockNeedItemByRuneType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> compound
	class RuneCompoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneCompoundCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneCompoundCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneCompoundCfgInfo;
		public static getFirstInfo():cfg.RuneCompoundCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;
		 /**  道具名称 */
		public static getItemNameByItemID(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByItemID(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByItemID(value:number):string;
		 /**  需要道具ID */
		public static getNeedItemIDByItemID(value:number):number;
		 /**  数量概率数量_概率万分比; */
		public static getCountRateByItemID(value:number):string;
		 /**  是否可合成 */
		public static getIfSynthesisByItemID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> randskill
	class RuneRandskillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRandskillCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRandskillCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRandskillCfgInfo;
		public static getFirstInfo():cfg.RuneRandskillCfgInfo;
		 /**  铭文类型1;//星辰符文2;//月亮符文3;//太阳符文4;//彩虹符文5;//闪烁符文 */
		public static getRuneTypeByRuneType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> randattr
	class RuneRandattrBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRandattrCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRandattrCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRandattrCfgInfo;
		public static getFirstInfo():cfg.RuneRandattrCfgInfo;
		 /**  属性索引 */
		public static getAttrIndexByAttrIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> fixed
	class RuneFixedBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneFixedCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneFixedCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneFixedCfgInfo;
		public static getFirstInfo():cfg.RuneFixedCfgInfo;
		 /**  道具ID */
		public static getItemIDByItemID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_rune.xls】 ----> refine
	class RuneRefineBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.RuneRefineCfgInfo>;
			public static setup(dataArr:Array<cfg.RuneRefineCfgInfo>):void;
		public static getInfo(value:number):cfg.RuneRefineCfgInfo;
		public static getFirstInfo():cfg.RuneRefineCfgInfo;
		 /**  铭文类型1;//星辰符文2;//月亮符文3;//太阳符文4;//彩虹符文5;//闪烁符文 */
		public static getRuneTypeByRuneType(value:number):number;
		 /**  需要道具消耗道具ID_数量; */
		public static getNeedItemExpendByRuneType(value:number):string;
		 /**  锁定一个的消耗 */
		public static getLockNeedItemByRuneType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_refresh
	class SailRefreshBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailRefreshCfgInfo>;
			public static setup(dataArr:Array<cfg.SailRefreshCfgInfo>):void;
		public static getInfo(value:number):cfg.SailRefreshCfgInfo;
		public static getFirstInfo():cfg.SailRefreshCfgInfo;
		 /**  刷新次数(上一次，此次] */
		public static getRefreshCountByRefreshCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByRefreshCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByRefreshCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_buyhour
	class SailBuyhourBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailBuyhourCfgInfo>;
			public static setup(dataArr:Array<cfg.SailBuyhourCfgInfo>):void;
		public static getInfo(value:number):cfg.SailBuyhourCfgInfo;
		public static getFirstInfo():cfg.SailBuyhourCfgInfo;
		 /**  小时数 */
		public static getHourByHour(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByHour(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_type
	class SailTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.SailTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.SailTypeCfgInfo;
		public static getFirstInfo():cfg.SailTypeCfgInfo;
		 /**  派遣类型1; //普通2; //精良3; //稀有4; //史诗5; //传说6; //不朽 */
		public static getSailTypeBySailType(value:number):number;
		 /**  需要挂机点 */
		public static getNeedSailPointBySailType(value:number):number;
		 /**  冷却时间(分钟) */
		public static getCoolTimeBySailType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_pool
	class SailPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.SailPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.SailPoolCfgInfo;
		public static getFirstInfo():cfg.SailPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  远航类型1; //普通2; //精良3; //稀有4; //史诗5; //传说6; //不朽 */
		public static getSailTypeByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  描述 */
		public static getNameByIndex(value:number):string;
		 /**  需要星级 */
		public static getNeedPetStarByIndex(value:number):number;
		 /**  需要种族种族1;种族2; */
		public static getNeedPetTypeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_type
	class SailTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.SailTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.SailTypeCfgInfo;
		public static getFirstInfo():cfg.SailTypeCfgInfo;
		 /**  派遣类型1; //普通2; //精良3; //稀有4; //史诗5; //传说6; //不朽 */
		public static getSailTypeBySailType(value:number):number;
		 /**  需要挂机点 */
		public static getNeedSailPointBySailType(value:number):number;
		 /**  冷却时间(分钟) */
		public static getCoolTimeBySailType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_buyhour
	class SailBuyhourBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailBuyhourCfgInfo>;
			public static setup(dataArr:Array<cfg.SailBuyhourCfgInfo>):void;
		public static getInfo(value:number):cfg.SailBuyhourCfgInfo;
		public static getFirstInfo():cfg.SailBuyhourCfgInfo;
		 /**  小时数 */
		public static getHourByHour(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByHour(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_refresh
	class SailRefreshBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailRefreshCfgInfo>;
			public static setup(dataArr:Array<cfg.SailRefreshCfgInfo>):void;
		public static getInfo(value:number):cfg.SailRefreshCfgInfo;
		public static getFirstInfo():cfg.SailRefreshCfgInfo;
		 /**  刷新次数(上一次，此次] */
		public static getRefreshCountByRefreshCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByRefreshCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByRefreshCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_buyhour
	class SailBuyhourBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailBuyhourCfgInfo>;
			public static setup(dataArr:Array<cfg.SailBuyhourCfgInfo>):void;
		public static getInfo(value:number):cfg.SailBuyhourCfgInfo;
		public static getFirstInfo():cfg.SailBuyhourCfgInfo;
		 /**  小时数 */
		public static getHourByHour(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByHour(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_type
	class SailTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.SailTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.SailTypeCfgInfo;
		public static getFirstInfo():cfg.SailTypeCfgInfo;
		 /**  派遣类型1; //普通2; //精良3; //稀有4; //史诗5; //传说6; //不朽 */
		public static getSailTypeBySailType(value:number):number;
		 /**  需要挂机点 */
		public static getNeedSailPointBySailType(value:number):number;
		 /**  冷却时间(分钟) */
		public static getCoolTimeBySailType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_pool
	class SailPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.SailPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.SailPoolCfgInfo;
		public static getFirstInfo():cfg.SailPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  远航类型1; //普通2; //精良3; //稀有4; //史诗5; //传说6; //不朽 */
		public static getSailTypeByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  描述 */
		public static getNameByIndex(value:number):string;
		 /**  需要星级 */
		public static getNeedPetStarByIndex(value:number):number;
		 /**  需要种族种族1;种族2; */
		public static getNeedPetTypeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_refresh
	class SailRefreshBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailRefreshCfgInfo>;
			public static setup(dataArr:Array<cfg.SailRefreshCfgInfo>):void;
		public static getInfo(value:number):cfg.SailRefreshCfgInfo;
		public static getFirstInfo():cfg.SailRefreshCfgInfo;
		 /**  刷新次数(上一次，此次] */
		public static getRefreshCountByRefreshCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByRefreshCount(value:number):number;
		 /**  需要道具 */
		public static getNeedItemByRefreshCount(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_sail.xls】 ----> sail_pool
	class SailPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SailPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.SailPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.SailPoolCfgInfo;
		public static getFirstInfo():cfg.SailPoolCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  远航类型1; //普通2; //精良3; //稀有4; //史诗5; //传说6; //不朽 */
		public static getSailTypeByIndex(value:number):number;
		 /**  增加道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  描述 */
		public static getNameByIndex(value:number):string;
		 /**  需要星级 */
		public static getNeedPetStarByIndex(value:number):number;
		 /**  需要种族种族1;种族2; */
		public static getNeedPetTypeByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> pet_skin
	class ShapePetSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapePetSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapePetSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapePetSkinCfgInfo;
		public static getFirstInfo():cfg.ShapePetSkinCfgInfo;
		 /**  皮肤ID */
		public static getIDByID(value:number):number;
		 /**  所属伙伴ID */
		public static getPetIDByID(value:number):number;
		 /**  资源名 */
		public static getResourceByID(value:number):string;
		 /**  增加属性类型|值|万分比; */
		public static getAddAttrByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> headIcon
	class ShapeHeadIconBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeHeadIconCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeHeadIconCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeHeadIconCfgInfo;
		public static getFirstInfo():cfg.ShapeHeadIconCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  所需道具id */
		public static getNeedItemByID(value:number):number;
		 /**  骨骼名 */
		public static getAniNameByID(value:number):string;
		 /**  是否显示骨骼动画 */
		public static getShowAniByID(value:number):number;
		 /**  持续时（秒）0表示永久 */
		public static getContinueTimeByID(value:number):number;
		 /**  激活说明 */
		public static getActiveDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> title
	class ShapeTitleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeTitleCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeTitleCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeTitleCfgInfo;
		public static getFirstInfo():cfg.ShapeTitleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  持续时（秒）0表示永久 */
		public static getContinueTimeByID(value:number):number;
		 /**  是否自动激活 */
		public static getAutoActiveByID(value:number):number;
		 /**  增加属性类型|值|万分比; */
		public static getAddAttrByID(value:number):string;
		 /**  来源模块 */
		public static getGameSystemTypeByID(value:number):number;
		 /**  描述 */
		public static getDescribeByID(value:number):string;
		 /**  图片名 */
		public static getIconNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> province
	class ShapeProvinceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeProvinceCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeProvinceCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeProvinceCfgInfo;
		public static getFirstInfo():cfg.ShapeProvinceCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  省市 */
		public static getProvinceIDByIndex(value:number):number;
		 /**  省市名称 */
		public static getProveinceNameByIndex(value:number):string;
		 /**  城市ID */
		public static getCityIDByIndex(value:number):number;
		 /**  城市名称 */
		public static getCityNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> headIcon
	class ShapeHeadIconBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeHeadIconCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeHeadIconCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeHeadIconCfgInfo;
		public static getFirstInfo():cfg.ShapeHeadIconCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  所需道具id */
		public static getNeedItemByID(value:number):number;
		 /**  骨骼名 */
		public static getAniNameByID(value:number):string;
		 /**  是否显示骨骼动画 */
		public static getShowAniByID(value:number):number;
		 /**  持续时（秒）0表示永久 */
		public static getContinueTimeByID(value:number):number;
		 /**  激活说明 */
		public static getActiveDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> honor_upgrade
	class ShapeHonorUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeHonorUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeHonorUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeHonorUpgradeCfgInfo;
		public static getFirstInfo():cfg.ShapeHonorUpgradeCfgInfo;
		 /**  荣誉等级 */
		public static getLevelByLevel(value:number):number;
		 /**  总经验 */
		public static getMaxExpByLevel(value:number):number;
		 /**  荣誉名字 */
		public static getNameByLevel(value:number):string;
		 /**  图标名称(对应Icon/Honor目录下文件) */
		public static getIconNameByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> pet_skin
	class ShapePetSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapePetSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapePetSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapePetSkinCfgInfo;
		public static getFirstInfo():cfg.ShapePetSkinCfgInfo;
		 /**  皮肤ID */
		public static getIDByID(value:number):number;
		 /**  所属伙伴ID */
		public static getPetIDByID(value:number):number;
		 /**  资源名 */
		public static getResourceByID(value:number):string;
		 /**  增加属性类型|值|万分比; */
		public static getAddAttrByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> badge
	class ShapeBadgeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeBadgeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeBadgeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeBadgeCfgInfo;
		public static getFirstInfo():cfg.ShapeBadgeCfgInfo;
		 /**  徽章ID */
		public static getIDByID(value:number):number;
		 /**  类型_emBadgeType */
		public static getTypeByID(value:number):number;
		 /**  增加荣誉点数 */
		public static getAddHonorByID(value:number):string;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  激活说明 */
		public static getActiveDescByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  图标 */
		public static getIconNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> headIcon
	class ShapeHeadIconBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeHeadIconCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeHeadIconCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeHeadIconCfgInfo;
		public static getFirstInfo():cfg.ShapeHeadIconCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  所需道具id */
		public static getNeedItemByID(value:number):number;
		 /**  骨骼名 */
		public static getAniNameByID(value:number):string;
		 /**  是否显示骨骼动画 */
		public static getShowAniByID(value:number):number;
		 /**  持续时（秒）0表示永久 */
		public static getContinueTimeByID(value:number):number;
		 /**  激活说明 */
		public static getActiveDescByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> honor_upgrade
	class ShapeHonorUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeHonorUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeHonorUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeHonorUpgradeCfgInfo;
		public static getFirstInfo():cfg.ShapeHonorUpgradeCfgInfo;
		 /**  荣誉等级 */
		public static getLevelByLevel(value:number):number;
		 /**  总经验 */
		public static getMaxExpByLevel(value:number):number;
		 /**  荣誉名字 */
		public static getNameByLevel(value:number):string;
		 /**  图标名称(对应Icon/Honor目录下文件) */
		public static getIconNameByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> badge
	class ShapeBadgeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeBadgeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeBadgeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeBadgeCfgInfo;
		public static getFirstInfo():cfg.ShapeBadgeCfgInfo;
		 /**  徽章ID */
		public static getIDByID(value:number):number;
		 /**  类型_emBadgeType */
		public static getTypeByID(value:number):number;
		 /**  增加荣誉点数 */
		public static getAddHonorByID(value:number):string;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  激活说明 */
		public static getActiveDescByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  图标 */
		public static getIconNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> title
	class ShapeTitleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeTitleCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeTitleCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeTitleCfgInfo;
		public static getFirstInfo():cfg.ShapeTitleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  持续时（秒）0表示永久 */
		public static getContinueTimeByID(value:number):number;
		 /**  是否自动激活 */
		public static getAutoActiveByID(value:number):number;
		 /**  增加属性类型|值|万分比; */
		public static getAddAttrByID(value:number):string;
		 /**  来源模块 */
		public static getGameSystemTypeByID(value:number):number;
		 /**  描述 */
		public static getDescribeByID(value:number):string;
		 /**  图片名 */
		public static getIconNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> honor_upgrade
	class ShapeHonorUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeHonorUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeHonorUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeHonorUpgradeCfgInfo;
		public static getFirstInfo():cfg.ShapeHonorUpgradeCfgInfo;
		 /**  荣誉等级 */
		public static getLevelByLevel(value:number):number;
		 /**  总经验 */
		public static getMaxExpByLevel(value:number):number;
		 /**  荣誉名字 */
		public static getNameByLevel(value:number):string;
		 /**  图标名称(对应Icon/Honor目录下文件) */
		public static getIconNameByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> badge
	class ShapeBadgeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeBadgeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeBadgeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeBadgeCfgInfo;
		public static getFirstInfo():cfg.ShapeBadgeCfgInfo;
		 /**  徽章ID */
		public static getIDByID(value:number):number;
		 /**  类型_emBadgeType */
		public static getTypeByID(value:number):number;
		 /**  增加荣誉点数 */
		public static getAddHonorByID(value:number):string;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  激活说明 */
		public static getActiveDescByID(value:number):string;
		 /**  描述 */
		public static getDescByID(value:number):string;
		 /**  图标 */
		public static getIconNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> pet_skin
	class ShapePetSkinBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapePetSkinCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapePetSkinCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapePetSkinCfgInfo;
		public static getFirstInfo():cfg.ShapePetSkinCfgInfo;
		 /**  皮肤ID */
		public static getIDByID(value:number):number;
		 /**  所属伙伴ID */
		public static getPetIDByID(value:number):number;
		 /**  资源名 */
		public static getResourceByID(value:number):string;
		 /**  增加属性类型|值|万分比; */
		public static getAddAttrByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> province
	class ShapeProvinceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeProvinceCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeProvinceCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeProvinceCfgInfo;
		public static getFirstInfo():cfg.ShapeProvinceCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  省市 */
		public static getProvinceIDByIndex(value:number):number;
		 /**  省市名称 */
		public static getProveinceNameByIndex(value:number):string;
		 /**  城市ID */
		public static getCityIDByIndex(value:number):number;
		 /**  城市名称 */
		public static getCityNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> province
	class ShapeProvinceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeProvinceCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeProvinceCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeProvinceCfgInfo;
		public static getFirstInfo():cfg.ShapeProvinceCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  省市 */
		public static getProvinceIDByIndex(value:number):number;
		 /**  省市名称 */
		public static getProveinceNameByIndex(value:number):string;
		 /**  城市ID */
		public static getCityIDByIndex(value:number):number;
		 /**  城市名称 */
		public static getCityNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shape.xls】 ----> title
	class ShapeTitleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShapeTitleCfgInfo>;
			public static setup(dataArr:Array<cfg.ShapeTitleCfgInfo>):void;
		public static getInfo(value:number):cfg.ShapeTitleCfgInfo;
		public static getFirstInfo():cfg.ShapeTitleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  持续时（秒）0表示永久 */
		public static getContinueTimeByID(value:number):number;
		 /**  是否自动激活 */
		public static getAutoActiveByID(value:number):number;
		 /**  增加属性类型|值|万分比; */
		public static getAddAttrByID(value:number):string;
		 /**  来源模块 */
		public static getGameSystemTypeByID(value:number):number;
		 /**  描述 */
		public static getDescribeByID(value:number):string;
		 /**  图片名 */
		public static getIconNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> currency_type
	class ShopCurrencyTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopCurrencyTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopCurrencyTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopCurrencyTypeCfgInfo;
		public static getFirstInfo():cfg.ShopCurrencyTypeCfgInfo;
		 /**  商店类型 */
		public static getShopTypeByShopType(value:number):number;
		 /**  货币itemid */
		public static getCurrencyIdByShopType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> fix_shop
	class ShopFixShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopFixShopCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopFixShopCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopFixShopCfgInfo;
		public static getFirstInfo():cfg.ShopFixShopCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  索引 */
		public static getIndexByID(value:number):number;
		 /**  商店类型 1; //道具商城 2; //英雄商城 3; //远征商城 4; //竞技商城 5; //公会商城 6; //段位商城 7; //先知商城 8; //跨服天梯9;//神装商城10;//征战商城11;//0元礼包12;//对战塔商店13;//大师塔商店14;//周冠商店99; //特俗商店 */
		public static getShopTypeByID(value:number):number;
		 /**  子类型 */
		public static getSubTypeByID(value:number):number;
		 /**  显示名字 */
		public static getNameByID(value:number):string;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByID(value:number):string;
		 /**  需要vip等级 */
		public static getNeedVipLevelByID(value:number):number;
		 /**  日限购次数 */
		public static getDayBuyCountByID(value:number):number;
		 /**  周限购次数 */
		public static getWeekBuyCountByID(value:number):number;
		 /**  月限购次数 */
		public static getMonthBuyCountByID(value:number):number;
		 /**  刷新限购次数 */
		public static getLimitBuyCountByID(value:number):number;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemByID(value:number):string;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByID(value:number):number;
		 /**  通用额外参数 */
		public static getParamByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> rand_shop
	class ShopRandShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopRandShopCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopRandShopCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopRandShopCfgInfo;
		public static getFirstInfo():cfg.ShopRandShopCfgInfo;
		 /**  商店类型101; //探宝商城102; //天赋宝石商店103; //喵喵购物车110; //跨服竞技场 */
		public static getShopTypeByShopType(value:number):number;
		 /**  组随机类型 */
		public static getGroupRandTypeByShopType(value:number):number;
		 /**  最大免费次数 */
		public static getFreeCountByShopType(value:number):number;
		 /**  刷新消耗道具道具ID_道具数量 */
		public static getRefreshNeedItemByShopType(value:number):string;
		 /**  刷新最大次数0无限制 */
		public static getRefreshCountByShopType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> rand_pool
	class ShopRandPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopRandPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopRandPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopRandPoolCfgInfo;
		public static getFirstInfo():cfg.ShopRandPoolCfgInfo;
		 /**  唯一索引 */
		public static getIndexByIndex(value:number):number;
		 /**  组ID */
		public static getGroupIDByIndex(value:number):number;
		 /**  等级 */
		public static getLevelByIndex(value:number):string;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByIndex(value:number):string;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemByIndex(value:number):string;
		 /**  总限购次数 */
		public static getBuyCountByIndex(value:number):number;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByIndex(value:number):number;
		 /**  日限购次数 */
		public static getDayBuyCountByIndex(value:number):number;
		 /**  周限购次数 */
		public static getWeekBuyCountByIndex(value:number):number;
		 /**  月限购次数 */
		public static getMonthBuyCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> level_item
	class ShopLevelItemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopLevelItemCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopLevelItemCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopLevelItemCfgInfo;
		public static getFirstInfo():cfg.ShopLevelItemCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  组ID */
		public static getGroupIDByIndex(value:number):number;
		 /**  等级 */
		public static getLevelByIndex(value:number):number;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> level_item
	class ShopLevelItemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopLevelItemCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopLevelItemCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopLevelItemCfgInfo;
		public static getFirstInfo():cfg.ShopLevelItemCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  组ID */
		public static getGroupIDByIndex(value:number):number;
		 /**  等级 */
		public static getLevelByIndex(value:number):number;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> rand_pool
	class ShopRandPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopRandPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopRandPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopRandPoolCfgInfo;
		public static getFirstInfo():cfg.ShopRandPoolCfgInfo;
		 /**  唯一索引 */
		public static getIndexByIndex(value:number):number;
		 /**  组ID */
		public static getGroupIDByIndex(value:number):number;
		 /**  等级 */
		public static getLevelByIndex(value:number):string;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByIndex(value:number):string;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemByIndex(value:number):string;
		 /**  总限购次数 */
		public static getBuyCountByIndex(value:number):number;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByIndex(value:number):number;
		 /**  日限购次数 */
		public static getDayBuyCountByIndex(value:number):number;
		 /**  周限购次数 */
		public static getWeekBuyCountByIndex(value:number):number;
		 /**  月限购次数 */
		public static getMonthBuyCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> level_item
	class ShopLevelItemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopLevelItemCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopLevelItemCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopLevelItemCfgInfo;
		public static getFirstInfo():cfg.ShopLevelItemCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  组ID */
		public static getGroupIDByIndex(value:number):number;
		 /**  等级 */
		public static getLevelByIndex(value:number):number;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> fix_shop
	class ShopFixShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopFixShopCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopFixShopCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopFixShopCfgInfo;
		public static getFirstInfo():cfg.ShopFixShopCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  索引 */
		public static getIndexByID(value:number):number;
		 /**  商店类型 1; //道具商城 2; //英雄商城 3; //远征商城 4; //竞技商城 5; //公会商城 6; //段位商城 7; //先知商城 8; //跨服天梯9;//神装商城10;//征战商城11;//0元礼包12;//对战塔商店13;//大师塔商店14;//周冠商店99; //特俗商店 */
		public static getShopTypeByID(value:number):number;
		 /**  子类型 */
		public static getSubTypeByID(value:number):number;
		 /**  显示名字 */
		public static getNameByID(value:number):string;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByID(value:number):string;
		 /**  需要vip等级 */
		public static getNeedVipLevelByID(value:number):number;
		 /**  日限购次数 */
		public static getDayBuyCountByID(value:number):number;
		 /**  周限购次数 */
		public static getWeekBuyCountByID(value:number):number;
		 /**  月限购次数 */
		public static getMonthBuyCountByID(value:number):number;
		 /**  刷新限购次数 */
		public static getLimitBuyCountByID(value:number):number;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemByID(value:number):string;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByID(value:number):number;
		 /**  通用额外参数 */
		public static getParamByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> rand_shop
	class ShopRandShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopRandShopCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopRandShopCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopRandShopCfgInfo;
		public static getFirstInfo():cfg.ShopRandShopCfgInfo;
		 /**  商店类型101; //探宝商城102; //天赋宝石商店103; //喵喵购物车110; //跨服竞技场 */
		public static getShopTypeByShopType(value:number):number;
		 /**  组随机类型 */
		public static getGroupRandTypeByShopType(value:number):number;
		 /**  最大免费次数 */
		public static getFreeCountByShopType(value:number):number;
		 /**  刷新消耗道具道具ID_道具数量 */
		public static getRefreshNeedItemByShopType(value:number):string;
		 /**  刷新最大次数0无限制 */
		public static getRefreshCountByShopType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> rand_pool
	class ShopRandPoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopRandPoolCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopRandPoolCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopRandPoolCfgInfo;
		public static getFirstInfo():cfg.ShopRandPoolCfgInfo;
		 /**  唯一索引 */
		public static getIndexByIndex(value:number):number;
		 /**  组ID */
		public static getGroupIDByIndex(value:number):number;
		 /**  等级 */
		public static getLevelByIndex(value:number):string;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByIndex(value:number):string;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemByIndex(value:number):string;
		 /**  总限购次数 */
		public static getBuyCountByIndex(value:number):number;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByIndex(value:number):number;
		 /**  日限购次数 */
		public static getDayBuyCountByIndex(value:number):number;
		 /**  周限购次数 */
		public static getWeekBuyCountByIndex(value:number):number;
		 /**  月限购次数 */
		public static getMonthBuyCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> currency_type
	class ShopCurrencyTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopCurrencyTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopCurrencyTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopCurrencyTypeCfgInfo;
		public static getFirstInfo():cfg.ShopCurrencyTypeCfgInfo;
		 /**  商店类型 */
		public static getShopTypeByShopType(value:number):number;
		 /**  货币itemid */
		public static getCurrencyIdByShopType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> fix_shop
	class ShopFixShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopFixShopCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopFixShopCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopFixShopCfgInfo;
		public static getFirstInfo():cfg.ShopFixShopCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  索引 */
		public static getIndexByID(value:number):number;
		 /**  商店类型 1; //道具商城 2; //英雄商城 3; //远征商城 4; //竞技商城 5; //公会商城 6; //段位商城 7; //先知商城 8; //跨服天梯9;//神装商城10;//征战商城11;//0元礼包12;//对战塔商店13;//大师塔商店14;//周冠商店99; //特俗商店 */
		public static getShopTypeByID(value:number):number;
		 /**  子类型 */
		public static getSubTypeByID(value:number):number;
		 /**  显示名字 */
		public static getNameByID(value:number):string;
		 /**  销售道具道具ID_道具数量 */
		public static getSellItemByID(value:number):string;
		 /**  需要vip等级 */
		public static getNeedVipLevelByID(value:number):number;
		 /**  日限购次数 */
		public static getDayBuyCountByID(value:number):number;
		 /**  周限购次数 */
		public static getWeekBuyCountByID(value:number):number;
		 /**  月限购次数 */
		public static getMonthBuyCountByID(value:number):number;
		 /**  刷新限购次数 */
		public static getLimitBuyCountByID(value:number):number;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemByID(value:number):string;
		 /**  折扣客户端显示用0表示无折扣 */
		public static getDiscountByID(value:number):number;
		 /**  通用额外参数 */
		public static getParamByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> rand_shop
	class ShopRandShopBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopRandShopCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopRandShopCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopRandShopCfgInfo;
		public static getFirstInfo():cfg.ShopRandShopCfgInfo;
		 /**  商店类型101; //探宝商城102; //天赋宝石商店103; //喵喵购物车110; //跨服竞技场 */
		public static getShopTypeByShopType(value:number):number;
		 /**  组随机类型 */
		public static getGroupRandTypeByShopType(value:number):number;
		 /**  最大免费次数 */
		public static getFreeCountByShopType(value:number):number;
		 /**  刷新消耗道具道具ID_道具数量 */
		public static getRefreshNeedItemByShopType(value:number):string;
		 /**  刷新最大次数0无限制 */
		public static getRefreshCountByShopType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_shop.xls】 ----> currency_type
	class ShopCurrencyTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ShopCurrencyTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.ShopCurrencyTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.ShopCurrencyTypeCfgInfo;
		public static getFirstInfo():cfg.ShopCurrencyTypeCfgInfo;
		 /**  商店类型 */
		public static getShopTypeByShopType(value:number):number;
		 /**  货币itemid */
		public static getCurrencyIdByShopType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skillEffect_new.xls】 ----> skillEffect
	class SkillEffectNewSkillEffectBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillEffectNewSkillEffectCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillEffectNewSkillEffectCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillEffectNewSkillEffectCfgInfo;
		public static getFirstInfo():cfg.SkillEffectNewSkillEffectCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  皮肤ID */
		public static getHeroIDByIndex(value:number):number;
		 /**  技能索引 */
		public static getSkillIndexByIndex(value:number):number;
		 /**  施法位置 0:屏幕中心,1:保持不动;2:对位目标前;3;我方对位排:4:中心对位排 */
		public static getCastPosByIndex(value:number):number;
		 /**  施法时屏幕是否变黑 */
		public static getDarkScreenByIndex(value:number):number;
		 /**  施法动作win 胜利动作不循环 */
		public static getCastingActionByIndex(value:number):string;
		 /**  施动作速度(ms) */
		public static getAnimationSpeedByIndex(value:number):number;
		 /**  施法特效 */
		public static getCastingEffectByIndex(value:number):string;
		 /**  施法特效速度(ms) */
		public static getCastingSpeedByIndex(value:number):number;
		 /**  施法音效 */
		public static getCastingSoundByIndex(value:number):string;
		 /**  施法音效播放延迟(ms) */
		public static getCastingSoundDelayByIndex(value:number):number;
		 /**  技能特效 */
		public static getSkillEffectByIndex(value:number):string;
		 /**  技能特效速度(ms) */
		public static getSkillSpeedByIndex(value:number):number;
		 /**  技能音效 */
		public static getSkillSoundByIndex(value:number):string;
		 /**  技能音效播放延迟(ms) */
		public static getSkillSoundDelayByIndex(value:number):number;
		 /**  飞行武器配置，默认用技能特效资源,【动作发起的帧数_相对角色偏移X_相对角色偏移Y;...】,当x,y都等于-1时，子弹默认从角色头顶发出 */
		public static getWeaponActionByIndex(value:number):string;
		 /**  角色受到伤害的帧数(不填则默认表示本次受到飞行武器攻击，飞行配置不填则子弹从头顶发出) */
		public static getBehitFramesByIndex(value:number):string;
		 /**  角色受击特效位置，0:随机，1:脚底，2:头顶，3:中心 */
		public static getBehitPosByIndex(value:number):number;
		 /**  受击特效 */
		public static getBehitEffectByIndex(value:number):string;
		 /**  受击特效速度(ms) */
		public static getBehitSpeedByIndex(value:number):number;
		 /**  受击音效 */
		public static getBehitSoundByIndex(value:number):string;
		 /**  受击音效播放延迟(ms) */
		public static getBehitSoundDelayByIndex(value:number):number;
		 /**  扩展参数(SkillEffectExtendsType) */
		public static getExtendParamsByIndex(value:number):string;
		 /**  人物攻击站位的偏移 */
		public static getRoleAttackOffsetByIndex(value:number):string;
		 /**  震屏配制 */
		public static getSharkScreenByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skillEffect_new.xls】 ----> skillEffect
	class SkillEffectNewSkillEffectBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillEffectNewSkillEffectCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillEffectNewSkillEffectCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillEffectNewSkillEffectCfgInfo;
		public static getFirstInfo():cfg.SkillEffectNewSkillEffectCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  皮肤ID */
		public static getHeroIDByIndex(value:number):number;
		 /**  技能索引 */
		public static getSkillIndexByIndex(value:number):number;
		 /**  施法位置 0:屏幕中心,1:保持不动;2:对位目标前;3;我方对位排:4:中心对位排 */
		public static getCastPosByIndex(value:number):number;
		 /**  施法时屏幕是否变黑 */
		public static getDarkScreenByIndex(value:number):number;
		 /**  施法动作win 胜利动作不循环 */
		public static getCastingActionByIndex(value:number):string;
		 /**  施动作速度(ms) */
		public static getAnimationSpeedByIndex(value:number):number;
		 /**  施法特效 */
		public static getCastingEffectByIndex(value:number):string;
		 /**  施法特效速度(ms) */
		public static getCastingSpeedByIndex(value:number):number;
		 /**  施法音效 */
		public static getCastingSoundByIndex(value:number):string;
		 /**  施法音效播放延迟(ms) */
		public static getCastingSoundDelayByIndex(value:number):number;
		 /**  技能特效 */
		public static getSkillEffectByIndex(value:number):string;
		 /**  技能特效速度(ms) */
		public static getSkillSpeedByIndex(value:number):number;
		 /**  技能音效 */
		public static getSkillSoundByIndex(value:number):string;
		 /**  技能音效播放延迟(ms) */
		public static getSkillSoundDelayByIndex(value:number):number;
		 /**  飞行武器配置，默认用技能特效资源,【动作发起的帧数_相对角色偏移X_相对角色偏移Y;...】,当x,y都等于-1时，子弹默认从角色头顶发出 */
		public static getWeaponActionByIndex(value:number):string;
		 /**  角色受到伤害的帧数(不填则默认表示本次受到飞行武器攻击，飞行配置不填则子弹从头顶发出) */
		public static getBehitFramesByIndex(value:number):string;
		 /**  角色受击特效位置，0:随机，1:脚底，2:头顶，3:中心 */
		public static getBehitPosByIndex(value:number):number;
		 /**  受击特效 */
		public static getBehitEffectByIndex(value:number):string;
		 /**  受击特效速度(ms) */
		public static getBehitSpeedByIndex(value:number):number;
		 /**  受击音效 */
		public static getBehitSoundByIndex(value:number):string;
		 /**  受击音效播放延迟(ms) */
		public static getBehitSoundDelayByIndex(value:number):number;
		 /**  扩展参数(SkillEffectExtendsType) */
		public static getExtendParamsByIndex(value:number):string;
		 /**  人物攻击站位的偏移 */
		public static getRoleAttackOffsetByIndex(value:number):string;
		 /**  震屏配制 */
		public static getSharkScreenByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skillEffect_new.xls】 ----> skillEffect
	class SkillEffectNewSkillEffectBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillEffectNewSkillEffectCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillEffectNewSkillEffectCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillEffectNewSkillEffectCfgInfo;
		public static getFirstInfo():cfg.SkillEffectNewSkillEffectCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  皮肤ID */
		public static getHeroIDByIndex(value:number):number;
		 /**  技能索引 */
		public static getSkillIndexByIndex(value:number):number;
		 /**  施法位置 0:屏幕中心,1:保持不动;2:对位目标前;3;我方对位排:4:中心对位排 */
		public static getCastPosByIndex(value:number):number;
		 /**  施法时屏幕是否变黑 */
		public static getDarkScreenByIndex(value:number):number;
		 /**  施法动作win 胜利动作不循环 */
		public static getCastingActionByIndex(value:number):string;
		 /**  施动作速度(ms) */
		public static getAnimationSpeedByIndex(value:number):number;
		 /**  施法特效 */
		public static getCastingEffectByIndex(value:number):string;
		 /**  施法特效速度(ms) */
		public static getCastingSpeedByIndex(value:number):number;
		 /**  施法音效 */
		public static getCastingSoundByIndex(value:number):string;
		 /**  施法音效播放延迟(ms) */
		public static getCastingSoundDelayByIndex(value:number):number;
		 /**  技能特效 */
		public static getSkillEffectByIndex(value:number):string;
		 /**  技能特效速度(ms) */
		public static getSkillSpeedByIndex(value:number):number;
		 /**  技能音效 */
		public static getSkillSoundByIndex(value:number):string;
		 /**  技能音效播放延迟(ms) */
		public static getSkillSoundDelayByIndex(value:number):number;
		 /**  飞行武器配置，默认用技能特效资源,【动作发起的帧数_相对角色偏移X_相对角色偏移Y;...】,当x,y都等于-1时，子弹默认从角色头顶发出 */
		public static getWeaponActionByIndex(value:number):string;
		 /**  角色受到伤害的帧数(不填则默认表示本次受到飞行武器攻击，飞行配置不填则子弹从头顶发出) */
		public static getBehitFramesByIndex(value:number):string;
		 /**  角色受击特效位置，0:随机，1:脚底，2:头顶，3:中心 */
		public static getBehitPosByIndex(value:number):number;
		 /**  受击特效 */
		public static getBehitEffectByIndex(value:number):string;
		 /**  受击特效速度(ms) */
		public static getBehitSpeedByIndex(value:number):number;
		 /**  受击音效 */
		public static getBehitSoundByIndex(value:number):string;
		 /**  受击音效播放延迟(ms) */
		public static getBehitSoundDelayByIndex(value:number):number;
		 /**  扩展参数(SkillEffectExtendsType) */
		public static getExtendParamsByIndex(value:number):string;
		 /**  人物攻击站位的偏移 */
		public static getRoleAttackOffsetByIndex(value:number):string;
		 /**  震屏配制 */
		public static getSharkScreenByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Race_Damaga
	class SkillNewRaceDamagaBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewRaceDamagaCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewRaceDamagaCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewRaceDamagaCfgInfo;
		public static getFirstInfo():cfg.SkillNewRaceDamagaCfgInfo;
		 /**  攻击方1;//神仙2;//人族3;//魔族 */
		public static getAttackRaceByAttackRace(value:number):number;
		 /**  防御方1;//神仙2;//人族3;//魔族 */
		public static getDefenseRaceByAttackRace(value:number):number;
		 /**  伤害万分比 */
		public static getDamageRateByAttackRace(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> SpecialSkillDelay
	class SkillNewSpecialSkillDelayBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewSpecialSkillDelayCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewSpecialSkillDelayCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewSpecialSkillDelayCfgInfo;
		public static getFirstInfo():cfg.SkillNewSpecialSkillDelayCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  延迟毫秒 */
		public static getDelayById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Recommend_Talent
	class SkillNewRecommendTalentBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewRecommendTalentCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewRecommendTalentCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewRecommendTalentCfgInfo;
		public static getFirstInfo():cfg.SkillNewRecommendTalentCfgInfo;
		 /**  职业 */
		public static getJobTypeByJobType(value:number):number;
		 /**  技能ID */
		public static getSkillIDByJobType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> talent_upgrade
	class SkillNewTalentUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewTalentUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewTalentUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewTalentUpgradeCfgInfo;
		public static getFirstInfo():cfg.SkillNewTalentUpgradeCfgInfo;
		 /**  唯一索引 */
		public static getSkillIndexBySkillIndex(value:number):number;
		 /**  技能ID */
		public static getSkillIDBySkillIndex(value:number):number;
		 /**  等级 */
		public static getLevelBySkillIndex(value:number):number;
		 /**  名称 */
		public static getNameBySkillIndex(value:number):string;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemBySkillIndex(value:number):string;
		 /**  遗忘消耗道具ID_道具数量 */
		public static getDelNeedItemBySkillIndex(value:number):string;
		 /**  遗忘返还道具道具ID_道具数量 */
		public static getDelAddItemBySkillIndex(value:number):string;
		 /**  增加评分 */
		public static getAddScoreBySkillIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Skill
	class SkillNewSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewSkillCfgInfo;
		public static getFirstInfo():cfg.SkillNewSkillCfgInfo;
		 /**  索引 */
		public static getSkillIndexBySkillIndex(value:number):number;
		 /**  技能标号 */
		public static getSkillIDBySkillIndex(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelBySkillIndex(value:number):number;
		 /**  技能名 */
		public static getNameBySkillIndex(value:number):string;
		 /**  技能描述 */
		public static getDesBySkillIndex(value:number):string;
		 /**  客户端技能特效类型Administrator:1://普通效果2：//弹道技能打多个目标（子弹分裂）3：//纵向弹道 */
		public static getClientEffectTypeBySkillIndex(value:number):number;
		 /**  技能类型1;//被动技能2;//普攻3;//主动技能 */
		public static getSkillTypeBySkillIndex(value:number):number;
		 /**  攻击类型0 无类型1 物理攻击2 法术攻击 */
		public static getAttackTypeBySkillIndex(value:number):number;
		 /**  技能顺序(分号)1;//伤害2;//治疗3;//给目标加buff4;//给自己加buff5;//驱散   参数:概率_效果类型_个数(0表示所有)6;//反击   参数:概率_取自身属性类型_属性万分比7;//给自己治疗8;//回复上一次伤害生命 参数:万分比9;//删除状态buff 参数:状态ID10;//真实伤害11;//使用上一次伤害12;//优先技能，必定最先释放，无视控制技能，百分比真实伤害 参数：万分比_伤害最大不超过攻击方攻击力的万分比13;//回复上一次伤害生命 参数:万分比14;//反伤  参数：概率_取自身属性类型_属性万分比 15;//反伤  参数：概率_万分比  16;//根据阵营数量加buff 参数 阵营类型1_数量1_bufferid1....(这些是或关系，取一个数量最大的)17;//复制buff 参数 buffer类型_数量_最大层数_是否敌人（0友方1敌方）_数量（0表示全部）_属性类型_排序（0最小，1最大） */
		public static getSkillOrderBySkillIndex(value:number):string;
		 /**  顺序参数1;//伤害2;//治疗3;//给目标加buff4;//给自己加buff5;//驱散   参数:概率_效果类型_个数(0表示所有)6;//反击   参数:概率_取自身属性类型_属性万分比7;//给自己治疗8;//回复上一次伤害生命 参数:万分比9;//删除状态buff 参数:状态ID10;//真实伤害11;//使用上一次伤害12;//优先技能，必定最先释放，无视控制技能，百分比真实伤害 参数：万分比_伤害最大不超过攻击方攻击力的万分比13;//回复上一次伤害生命 参数:万分比14;//反伤  参数：概率_取自身属性类型_属性万分比 15;//反伤  参数：概率_万分比  16;//根据阵营数量加buff 参数 阵营类型1_数量1_bufferid1....(这些是或关系，取一个数量最大的)17;//复制buff 参数 buffer类型_数量_最大层数_是否敌人（0友方1敌方）_数量（0表示全部）_属性类型_排序（0最小，1最大） */
		public static getOrderParamBySkillIndex(value:number):string;
		 /**  触发类型_emSkillTriggerType类型_概率1;//被攻击触发 2;//额外伤害 3;//使用技能触发(继承技能目标) 参数 技能ID1(0表示所有技能)_技能ID1...4;//回合数触发 参数:回合1_回合2;(2_0表示第二回合后每回合)5;//攻击触发6;//自己buff状态加强 参数:buff类型_万分比7;//每回合开始血量加buff 参数:血量百分比_不低于加buff_低于加buff;8;//使用技能触发(忽略技能目标) 参数:技能ID(0表示所有技能)9;//随机或技能 技能1_技能210;//死亡触发复活11;//队伍暴击 参数:万分比12;//生命触发 生命百分比13;//队伍状态额外伤害 参数:取属性类型_属性万分比_状态1_状态214;//随机与技能 概率1_技能1_概率2_技能215;//击杀目标触发使用上一个技能 参数:攻击力万分比16;//目标属性对比加自身属性 参数:属性类型_低于加属性类型_低于加属性类型万分比__高于加属性类型_高于加属性类型万分比17;//击杀目标触发 参数:技能ID18;//普通攻击触发19;//队伍死亡触发 参数:状态（0无状态）20;//被技能击杀目标,攻击力减少 参数:技能ID_攻击力万分比21;//携带状态敌方死亡 参数:状态ID22;//技能组合(走子技能CD) 参数:技能ID1_技能ID223;//物理攻击触发 24;//法术攻击触发 25;//物理攻击触发连击 参数：伤害降低_控制降低26;//法术攻击触发连击 参数：伤害降低_控制降低27;//物理攻击击杀之后追加普攻28;//物理攻击暴击之后追加普攻29;//复活触发30;//伤害超过目标生命值多少触发 参数：伤害万分比31;//自己使用治疗触发32;//使用额外技能斩击触发 参数:技能ID33;//自己暴击触发 */
		public static getTriggerTypeBySkillIndex(value:number):string;
		 /**  触发参数 */
		public static getTriggerParamBySkillIndex(value:number):string;
		 /**  回合开始回合_冷却回合 */
		public static getCoolRoundBySkillIndex(value:number):string;
		 /**  目标类型 0;//敌方 1;//友方 2;//自己 */
		public static getTargetTypeBySkillIndex(value:number):number;
		 /**  范围类型类型_最大目标个数1; //对位单体2; //全体3; //前排4; //中排5; //后排6; //前中排7; //前后排8; //中后排9; //随机横排10; //上列11; //中列12; //下列 13; //随机列 14; //对位列15; //最大血量16; //最小血量17; //攻击最高18; //攻击最低19; //速度最高20; //速度最低21; //防御最高22; //防御最低23; //随机24; //人数最多的一列 */
		public static getRangeTypeBySkillIndex(value:number):string;
		 /**  优先目标条件_emSkillTarCondition1;//职业 参数 职业类型_emPetJobType2;//状态 参数: 状态1_状态2 */
		public static getTargetConditionBySkillIndex(value:number):string;
		 /**  掩码_emSkillMaskType1;//是否忽略自己2;//是否继承伤害次数3;//是否选择死亡角色4;//是否不给自己加buff5;//是否继承目标6;//是否延时释放7;//是否无尽试炼连续释放8;//是否延时技能只能放一次9;//是否使用上一次伤害10;//是否使用上一次暴击伤害11;//增加buff下一回合生效12;//优先技能，必定最先释放，无视控制技能 */
		public static getMaskBySkillIndex(value:number):string;
		 /**  治疗取伤害记录_属性类型_万分比_额外值_是否死亡(1死亡)_溢出加buff_是否取目标1;//上一次技能伤害2;//上一次队伍暴击伤害 */
		public static getCureBySkillIndex(value:number):string;
		 /**  伤害公式是否取自己_属性类型_百分比_段数_无视防御万分比 */
		public static getDamageBySkillIndex(value:number):string;
		 /**  1;//职业 职业类型_万分比2;//状态 万分比_状态1_状态2(BuffControlType)3;//正负面效果 效果(_emBuffEffectType)_万分比4;//概率提升 概率万分比_万分比5;//属性低于自身  属性类型_万分比6;//生命值高于   生命万分比_万分比7;//生命值低于   生命万分比_万分比8;//目标属性伤害  属性类型_万分比_限制属性类型_限制万分比9;//普攻触发    万分比10;//目标效果个数   效果(_emBuffEffectType)_万分比11;//损失血量万分比伤害  万分比12;//职业伤害值  职业类型_取目标属性类型_万分比_限制自身属性类型_限制万分比 */
		public static getExtraDamageBySkillIndex(value:number):string;
		 /**  额外属性加成_emSkillAttrCondition1;//状态或加属性    属性类型_属性值_万分比_状态1(BuffControlType)_状态2 2;//血量高于百分比    百分比_属性类型_属性值_万分比3;//临时加属性     属性类型_属性值_万分比4;//血量低于百分比    百分比_属性类型_属性值_万分比5;//职业加临时数据    职业_属性类型_属性值_万分比6;//最先出手      属性类型1_属性值1_万分比1_属性类型2_属性值2_万分比27;//血量降低x%,属性提高y%  属性类型_血量降低万分比_提高值8;//对方有技能xxx属性提高  属性类型_属性提高值_技能ID_技能ID_ ...9;//对方有技能xxx属性降低  属性类型_属性降低值_技能ID_技能ID_ ...10;//无视防御 无视防御万分比 */
		public static getExtraAddAttrBySkillIndex(value:number):string;
		 /**  公共条件__emSkillCommonCondition1;//状态增加治疗 万分比_状态ID 2;//血量低于加治疗效果 万分比_加治疗效果万分比3;//驱散增加生命上限伤害 驱散个数_生命上限万分比4;//技能段斩杀  段ID_生命万分比_不超过自身属性_不超过自身属性万分比5;//额外技能目标个数  概率_个数6;//使用上一次总伤害加护盾  万分比7;//使用HP加护盾  HP的万分比8;//状态层数加次数 参数:stateid_buff层数_最大次数9;//限制伤害 最大值_最小值10;//使用上一次治疗量加护盾  万分比11;//伤害均摊 */
		public static getCommonConditionBySkillIndex(value:number):string;
		 /**  给目标加buff条件_emSkillBuffCondition1;//职业 参数 职业类型_emPetJobType_buff额外万分比2;//状态 参数: 状态1_状态23;//死亡4;//暴击5;//属性低于自身  属性类型_buff概率万分比6;//状态提升概率  状态1_buff概率万分比7;//buff随机个数  个数8;//生命值低于万分比 万分比9;//选择职业 参数 职业类型1_职业类型2....10;//buff权重随机个数  个数 */
		public static getAddTarBuffConditionBySkillIndex(value:number):string;
		 /**  增加目标buffbuffid_概率; */
		public static getAddTarBuffBySkillIndex(value:number):string;
		 /**  给自己加buffbuffid_概率; */
		public static getAddSelfBuffBySkillIndex(value:number):string;
		 /**  给自身加属性属性类型_值_万分比 */
		public static getAddSelfAttrBySkillIndex(value:number):string;
		 /**  携带物技能 */
		public static getHorcruxSkillBySkillIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> talent_upgrade
	class SkillNewTalentUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewTalentUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewTalentUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewTalentUpgradeCfgInfo;
		public static getFirstInfo():cfg.SkillNewTalentUpgradeCfgInfo;
		 /**  唯一索引 */
		public static getSkillIndexBySkillIndex(value:number):number;
		 /**  技能ID */
		public static getSkillIDBySkillIndex(value:number):number;
		 /**  等级 */
		public static getLevelBySkillIndex(value:number):number;
		 /**  名称 */
		public static getNameBySkillIndex(value:number):string;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemBySkillIndex(value:number):string;
		 /**  遗忘消耗道具ID_道具数量 */
		public static getDelNeedItemBySkillIndex(value:number):string;
		 /**  遗忘返还道具道具ID_道具数量 */
		public static getDelAddItemBySkillIndex(value:number):string;
		 /**  增加评分 */
		public static getAddScoreBySkillIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Recommend_Talent
	class SkillNewRecommendTalentBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewRecommendTalentCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewRecommendTalentCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewRecommendTalentCfgInfo;
		public static getFirstInfo():cfg.SkillNewRecommendTalentCfgInfo;
		 /**  职业 */
		public static getJobTypeByJobType(value:number):number;
		 /**  技能ID */
		public static getSkillIDByJobType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> SpecialSkillDelay
	class SkillNewSpecialSkillDelayBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewSpecialSkillDelayCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewSpecialSkillDelayCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewSpecialSkillDelayCfgInfo;
		public static getFirstInfo():cfg.SkillNewSpecialSkillDelayCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  延迟毫秒 */
		public static getDelayById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> talent_upgrade
	class SkillNewTalentUpgradeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewTalentUpgradeCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewTalentUpgradeCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewTalentUpgradeCfgInfo;
		public static getFirstInfo():cfg.SkillNewTalentUpgradeCfgInfo;
		 /**  唯一索引 */
		public static getSkillIndexBySkillIndex(value:number):number;
		 /**  技能ID */
		public static getSkillIDBySkillIndex(value:number):number;
		 /**  等级 */
		public static getLevelBySkillIndex(value:number):number;
		 /**  名称 */
		public static getNameBySkillIndex(value:number):string;
		 /**  需要道具道具ID_道具数量 */
		public static getNeedItemBySkillIndex(value:number):string;
		 /**  遗忘消耗道具ID_道具数量 */
		public static getDelNeedItemBySkillIndex(value:number):string;
		 /**  遗忘返还道具道具ID_道具数量 */
		public static getDelAddItemBySkillIndex(value:number):string;
		 /**  增加评分 */
		public static getAddScoreBySkillIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Skill
	class SkillNewSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewSkillCfgInfo;
		public static getFirstInfo():cfg.SkillNewSkillCfgInfo;
		 /**  索引 */
		public static getSkillIndexBySkillIndex(value:number):number;
		 /**  技能标号 */
		public static getSkillIDBySkillIndex(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelBySkillIndex(value:number):number;
		 /**  技能名 */
		public static getNameBySkillIndex(value:number):string;
		 /**  技能描述 */
		public static getDesBySkillIndex(value:number):string;
		 /**  客户端技能特效类型Administrator:1://普通效果2：//弹道技能打多个目标（子弹分裂）3：//纵向弹道 */
		public static getClientEffectTypeBySkillIndex(value:number):number;
		 /**  技能类型1;//被动技能2;//普攻3;//主动技能 */
		public static getSkillTypeBySkillIndex(value:number):number;
		 /**  攻击类型0 无类型1 物理攻击2 法术攻击 */
		public static getAttackTypeBySkillIndex(value:number):number;
		 /**  技能顺序(分号)1;//伤害2;//治疗3;//给目标加buff4;//给自己加buff5;//驱散   参数:概率_效果类型_个数(0表示所有)6;//反击   参数:概率_取自身属性类型_属性万分比7;//给自己治疗8;//回复上一次伤害生命 参数:万分比9;//删除状态buff 参数:状态ID10;//真实伤害11;//使用上一次伤害12;//优先技能，必定最先释放，无视控制技能，百分比真实伤害 参数：万分比_伤害最大不超过攻击方攻击力的万分比13;//回复上一次伤害生命 参数:万分比14;//反伤  参数：概率_取自身属性类型_属性万分比 15;//反伤  参数：概率_万分比  16;//根据阵营数量加buff 参数 阵营类型1_数量1_bufferid1....(这些是或关系，取一个数量最大的)17;//复制buff 参数 buffer类型_数量_最大层数_是否敌人（0友方1敌方）_数量（0表示全部）_属性类型_排序（0最小，1最大） */
		public static getSkillOrderBySkillIndex(value:number):string;
		 /**  顺序参数1;//伤害2;//治疗3;//给目标加buff4;//给自己加buff5;//驱散   参数:概率_效果类型_个数(0表示所有)6;//反击   参数:概率_取自身属性类型_属性万分比7;//给自己治疗8;//回复上一次伤害生命 参数:万分比9;//删除状态buff 参数:状态ID10;//真实伤害11;//使用上一次伤害12;//优先技能，必定最先释放，无视控制技能，百分比真实伤害 参数：万分比_伤害最大不超过攻击方攻击力的万分比13;//回复上一次伤害生命 参数:万分比14;//反伤  参数：概率_取自身属性类型_属性万分比 15;//反伤  参数：概率_万分比  16;//根据阵营数量加buff 参数 阵营类型1_数量1_bufferid1....(这些是或关系，取一个数量最大的)17;//复制buff 参数 buffer类型_数量_最大层数_是否敌人（0友方1敌方）_数量（0表示全部）_属性类型_排序（0最小，1最大） */
		public static getOrderParamBySkillIndex(value:number):string;
		 /**  触发类型_emSkillTriggerType类型_概率1;//被攻击触发 2;//额外伤害 3;//使用技能触发(继承技能目标) 参数 技能ID1(0表示所有技能)_技能ID1...4;//回合数触发 参数:回合1_回合2;(2_0表示第二回合后每回合)5;//攻击触发6;//自己buff状态加强 参数:buff类型_万分比7;//每回合开始血量加buff 参数:血量百分比_不低于加buff_低于加buff;8;//使用技能触发(忽略技能目标) 参数:技能ID(0表示所有技能)9;//随机或技能 技能1_技能210;//死亡触发复活11;//队伍暴击 参数:万分比12;//生命触发 生命百分比13;//队伍状态额外伤害 参数:取属性类型_属性万分比_状态1_状态214;//随机与技能 概率1_技能1_概率2_技能215;//击杀目标触发使用上一个技能 参数:攻击力万分比16;//目标属性对比加自身属性 参数:属性类型_低于加属性类型_低于加属性类型万分比__高于加属性类型_高于加属性类型万分比17;//击杀目标触发 参数:技能ID18;//普通攻击触发19;//队伍死亡触发 参数:状态（0无状态）20;//被技能击杀目标,攻击力减少 参数:技能ID_攻击力万分比21;//携带状态敌方死亡 参数:状态ID22;//技能组合(走子技能CD) 参数:技能ID1_技能ID223;//物理攻击触发 24;//法术攻击触发 25;//物理攻击触发连击 参数：伤害降低_控制降低26;//法术攻击触发连击 参数：伤害降低_控制降低27;//物理攻击击杀之后追加普攻28;//物理攻击暴击之后追加普攻29;//复活触发30;//伤害超过目标生命值多少触发 参数：伤害万分比31;//自己使用治疗触发32;//使用额外技能斩击触发 参数:技能ID33;//自己暴击触发 */
		public static getTriggerTypeBySkillIndex(value:number):string;
		 /**  触发参数 */
		public static getTriggerParamBySkillIndex(value:number):string;
		 /**  回合开始回合_冷却回合 */
		public static getCoolRoundBySkillIndex(value:number):string;
		 /**  目标类型 0;//敌方 1;//友方 2;//自己 */
		public static getTargetTypeBySkillIndex(value:number):number;
		 /**  范围类型类型_最大目标个数1; //对位单体2; //全体3; //前排4; //中排5; //后排6; //前中排7; //前后排8; //中后排9; //随机横排10; //上列11; //中列12; //下列 13; //随机列 14; //对位列15; //最大血量16; //最小血量17; //攻击最高18; //攻击最低19; //速度最高20; //速度最低21; //防御最高22; //防御最低23; //随机24; //人数最多的一列 */
		public static getRangeTypeBySkillIndex(value:number):string;
		 /**  优先目标条件_emSkillTarCondition1;//职业 参数 职业类型_emPetJobType2;//状态 参数: 状态1_状态2 */
		public static getTargetConditionBySkillIndex(value:number):string;
		 /**  掩码_emSkillMaskType1;//是否忽略自己2;//是否继承伤害次数3;//是否选择死亡角色4;//是否不给自己加buff5;//是否继承目标6;//是否延时释放7;//是否无尽试炼连续释放8;//是否延时技能只能放一次9;//是否使用上一次伤害10;//是否使用上一次暴击伤害11;//增加buff下一回合生效12;//优先技能，必定最先释放，无视控制技能 */
		public static getMaskBySkillIndex(value:number):string;
		 /**  治疗取伤害记录_属性类型_万分比_额外值_是否死亡(1死亡)_溢出加buff_是否取目标1;//上一次技能伤害2;//上一次队伍暴击伤害 */
		public static getCureBySkillIndex(value:number):string;
		 /**  伤害公式是否取自己_属性类型_百分比_段数_无视防御万分比 */
		public static getDamageBySkillIndex(value:number):string;
		 /**  1;//职业 职业类型_万分比2;//状态 万分比_状态1_状态2(BuffControlType)3;//正负面效果 效果(_emBuffEffectType)_万分比4;//概率提升 概率万分比_万分比5;//属性低于自身  属性类型_万分比6;//生命值高于   生命万分比_万分比7;//生命值低于   生命万分比_万分比8;//目标属性伤害  属性类型_万分比_限制属性类型_限制万分比9;//普攻触发    万分比10;//目标效果个数   效果(_emBuffEffectType)_万分比11;//损失血量万分比伤害  万分比12;//职业伤害值  职业类型_取目标属性类型_万分比_限制自身属性类型_限制万分比 */
		public static getExtraDamageBySkillIndex(value:number):string;
		 /**  额外属性加成_emSkillAttrCondition1;//状态或加属性    属性类型_属性值_万分比_状态1(BuffControlType)_状态2 2;//血量高于百分比    百分比_属性类型_属性值_万分比3;//临时加属性     属性类型_属性值_万分比4;//血量低于百分比    百分比_属性类型_属性值_万分比5;//职业加临时数据    职业_属性类型_属性值_万分比6;//最先出手      属性类型1_属性值1_万分比1_属性类型2_属性值2_万分比27;//血量降低x%,属性提高y%  属性类型_血量降低万分比_提高值8;//对方有技能xxx属性提高  属性类型_属性提高值_技能ID_技能ID_ ...9;//对方有技能xxx属性降低  属性类型_属性降低值_技能ID_技能ID_ ...10;//无视防御 无视防御万分比 */
		public static getExtraAddAttrBySkillIndex(value:number):string;
		 /**  公共条件__emSkillCommonCondition1;//状态增加治疗 万分比_状态ID 2;//血量低于加治疗效果 万分比_加治疗效果万分比3;//驱散增加生命上限伤害 驱散个数_生命上限万分比4;//技能段斩杀  段ID_生命万分比_不超过自身属性_不超过自身属性万分比5;//额外技能目标个数  概率_个数6;//使用上一次总伤害加护盾  万分比7;//使用HP加护盾  HP的万分比8;//状态层数加次数 参数:stateid_buff层数_最大次数9;//限制伤害 最大值_最小值10;//使用上一次治疗量加护盾  万分比11;//伤害均摊 */
		public static getCommonConditionBySkillIndex(value:number):string;
		 /**  给目标加buff条件_emSkillBuffCondition1;//职业 参数 职业类型_emPetJobType_buff额外万分比2;//状态 参数: 状态1_状态23;//死亡4;//暴击5;//属性低于自身  属性类型_buff概率万分比6;//状态提升概率  状态1_buff概率万分比7;//buff随机个数  个数8;//生命值低于万分比 万分比9;//选择职业 参数 职业类型1_职业类型2....10;//buff权重随机个数  个数 */
		public static getAddTarBuffConditionBySkillIndex(value:number):string;
		 /**  增加目标buffbuffid_概率; */
		public static getAddTarBuffBySkillIndex(value:number):string;
		 /**  给自己加buffbuffid_概率; */
		public static getAddSelfBuffBySkillIndex(value:number):string;
		 /**  给自身加属性属性类型_值_万分比 */
		public static getAddSelfAttrBySkillIndex(value:number):string;
		 /**  携带物技能 */
		public static getHorcruxSkillBySkillIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Race_Damaga
	class SkillNewRaceDamagaBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewRaceDamagaCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewRaceDamagaCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewRaceDamagaCfgInfo;
		public static getFirstInfo():cfg.SkillNewRaceDamagaCfgInfo;
		 /**  攻击方1;//神仙2;//人族3;//魔族 */
		public static getAttackRaceByAttackRace(value:number):number;
		 /**  防御方1;//神仙2;//人族3;//魔族 */
		public static getDefenseRaceByAttackRace(value:number):number;
		 /**  伤害万分比 */
		public static getDamageRateByAttackRace(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Recommend_Talent
	class SkillNewRecommendTalentBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewRecommendTalentCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewRecommendTalentCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewRecommendTalentCfgInfo;
		public static getFirstInfo():cfg.SkillNewRecommendTalentCfgInfo;
		 /**  职业 */
		public static getJobTypeByJobType(value:number):number;
		 /**  技能ID */
		public static getSkillIDByJobType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> SpecialSkillDelay
	class SkillNewSpecialSkillDelayBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewSpecialSkillDelayCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewSpecialSkillDelayCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewSpecialSkillDelayCfgInfo;
		public static getFirstInfo():cfg.SkillNewSpecialSkillDelayCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  延迟毫秒 */
		public static getDelayById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Skill
	class SkillNewSkillBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewSkillCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewSkillCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewSkillCfgInfo;
		public static getFirstInfo():cfg.SkillNewSkillCfgInfo;
		 /**  索引 */
		public static getSkillIndexBySkillIndex(value:number):number;
		 /**  技能标号 */
		public static getSkillIDBySkillIndex(value:number):number;
		 /**  技能等级 */
		public static getSkillLevelBySkillIndex(value:number):number;
		 /**  技能名 */
		public static getNameBySkillIndex(value:number):string;
		 /**  技能描述 */
		public static getDesBySkillIndex(value:number):string;
		 /**  客户端技能特效类型Administrator:1://普通效果2：//弹道技能打多个目标（子弹分裂）3：//纵向弹道 */
		public static getClientEffectTypeBySkillIndex(value:number):number;
		 /**  技能类型1;//被动技能2;//普攻3;//主动技能 */
		public static getSkillTypeBySkillIndex(value:number):number;
		 /**  攻击类型0 无类型1 物理攻击2 法术攻击 */
		public static getAttackTypeBySkillIndex(value:number):number;
		 /**  技能顺序(分号)1;//伤害2;//治疗3;//给目标加buff4;//给自己加buff5;//驱散   参数:概率_效果类型_个数(0表示所有)6;//反击   参数:概率_取自身属性类型_属性万分比7;//给自己治疗8;//回复上一次伤害生命 参数:万分比9;//删除状态buff 参数:状态ID10;//真实伤害11;//使用上一次伤害12;//优先技能，必定最先释放，无视控制技能，百分比真实伤害 参数：万分比_伤害最大不超过攻击方攻击力的万分比13;//回复上一次伤害生命 参数:万分比14;//反伤  参数：概率_取自身属性类型_属性万分比 15;//反伤  参数：概率_万分比  16;//根据阵营数量加buff 参数 阵营类型1_数量1_bufferid1....(这些是或关系，取一个数量最大的)17;//复制buff 参数 buffer类型_数量_最大层数_是否敌人（0友方1敌方）_数量（0表示全部）_属性类型_排序（0最小，1最大） */
		public static getSkillOrderBySkillIndex(value:number):string;
		 /**  顺序参数1;//伤害2;//治疗3;//给目标加buff4;//给自己加buff5;//驱散   参数:概率_效果类型_个数(0表示所有)6;//反击   参数:概率_取自身属性类型_属性万分比7;//给自己治疗8;//回复上一次伤害生命 参数:万分比9;//删除状态buff 参数:状态ID10;//真实伤害11;//使用上一次伤害12;//优先技能，必定最先释放，无视控制技能，百分比真实伤害 参数：万分比_伤害最大不超过攻击方攻击力的万分比13;//回复上一次伤害生命 参数:万分比14;//反伤  参数：概率_取自身属性类型_属性万分比 15;//反伤  参数：概率_万分比  16;//根据阵营数量加buff 参数 阵营类型1_数量1_bufferid1....(这些是或关系，取一个数量最大的)17;//复制buff 参数 buffer类型_数量_最大层数_是否敌人（0友方1敌方）_数量（0表示全部）_属性类型_排序（0最小，1最大） */
		public static getOrderParamBySkillIndex(value:number):string;
		 /**  触发类型_emSkillTriggerType类型_概率1;//被攻击触发 2;//额外伤害 3;//使用技能触发(继承技能目标) 参数 技能ID1(0表示所有技能)_技能ID1...4;//回合数触发 参数:回合1_回合2;(2_0表示第二回合后每回合)5;//攻击触发6;//自己buff状态加强 参数:buff类型_万分比7;//每回合开始血量加buff 参数:血量百分比_不低于加buff_低于加buff;8;//使用技能触发(忽略技能目标) 参数:技能ID(0表示所有技能)9;//随机或技能 技能1_技能210;//死亡触发复活11;//队伍暴击 参数:万分比12;//生命触发 生命百分比13;//队伍状态额外伤害 参数:取属性类型_属性万分比_状态1_状态214;//随机与技能 概率1_技能1_概率2_技能215;//击杀目标触发使用上一个技能 参数:攻击力万分比16;//目标属性对比加自身属性 参数:属性类型_低于加属性类型_低于加属性类型万分比__高于加属性类型_高于加属性类型万分比17;//击杀目标触发 参数:技能ID18;//普通攻击触发19;//队伍死亡触发 参数:状态（0无状态）20;//被技能击杀目标,攻击力减少 参数:技能ID_攻击力万分比21;//携带状态敌方死亡 参数:状态ID22;//技能组合(走子技能CD) 参数:技能ID1_技能ID223;//物理攻击触发 24;//法术攻击触发 25;//物理攻击触发连击 参数：伤害降低_控制降低26;//法术攻击触发连击 参数：伤害降低_控制降低27;//物理攻击击杀之后追加普攻28;//物理攻击暴击之后追加普攻29;//复活触发30;//伤害超过目标生命值多少触发 参数：伤害万分比31;//自己使用治疗触发32;//使用额外技能斩击触发 参数:技能ID33;//自己暴击触发 */
		public static getTriggerTypeBySkillIndex(value:number):string;
		 /**  触发参数 */
		public static getTriggerParamBySkillIndex(value:number):string;
		 /**  回合开始回合_冷却回合 */
		public static getCoolRoundBySkillIndex(value:number):string;
		 /**  目标类型 0;//敌方 1;//友方 2;//自己 */
		public static getTargetTypeBySkillIndex(value:number):number;
		 /**  范围类型类型_最大目标个数1; //对位单体2; //全体3; //前排4; //中排5; //后排6; //前中排7; //前后排8; //中后排9; //随机横排10; //上列11; //中列12; //下列 13; //随机列 14; //对位列15; //最大血量16; //最小血量17; //攻击最高18; //攻击最低19; //速度最高20; //速度最低21; //防御最高22; //防御最低23; //随机24; //人数最多的一列 */
		public static getRangeTypeBySkillIndex(value:number):string;
		 /**  优先目标条件_emSkillTarCondition1;//职业 参数 职业类型_emPetJobType2;//状态 参数: 状态1_状态2 */
		public static getTargetConditionBySkillIndex(value:number):string;
		 /**  掩码_emSkillMaskType1;//是否忽略自己2;//是否继承伤害次数3;//是否选择死亡角色4;//是否不给自己加buff5;//是否继承目标6;//是否延时释放7;//是否无尽试炼连续释放8;//是否延时技能只能放一次9;//是否使用上一次伤害10;//是否使用上一次暴击伤害11;//增加buff下一回合生效12;//优先技能，必定最先释放，无视控制技能 */
		public static getMaskBySkillIndex(value:number):string;
		 /**  治疗取伤害记录_属性类型_万分比_额外值_是否死亡(1死亡)_溢出加buff_是否取目标1;//上一次技能伤害2;//上一次队伍暴击伤害 */
		public static getCureBySkillIndex(value:number):string;
		 /**  伤害公式是否取自己_属性类型_百分比_段数_无视防御万分比 */
		public static getDamageBySkillIndex(value:number):string;
		 /**  1;//职业 职业类型_万分比2;//状态 万分比_状态1_状态2(BuffControlType)3;//正负面效果 效果(_emBuffEffectType)_万分比4;//概率提升 概率万分比_万分比5;//属性低于自身  属性类型_万分比6;//生命值高于   生命万分比_万分比7;//生命值低于   生命万分比_万分比8;//目标属性伤害  属性类型_万分比_限制属性类型_限制万分比9;//普攻触发    万分比10;//目标效果个数   效果(_emBuffEffectType)_万分比11;//损失血量万分比伤害  万分比12;//职业伤害值  职业类型_取目标属性类型_万分比_限制自身属性类型_限制万分比 */
		public static getExtraDamageBySkillIndex(value:number):string;
		 /**  额外属性加成_emSkillAttrCondition1;//状态或加属性    属性类型_属性值_万分比_状态1(BuffControlType)_状态2 2;//血量高于百分比    百分比_属性类型_属性值_万分比3;//临时加属性     属性类型_属性值_万分比4;//血量低于百分比    百分比_属性类型_属性值_万分比5;//职业加临时数据    职业_属性类型_属性值_万分比6;//最先出手      属性类型1_属性值1_万分比1_属性类型2_属性值2_万分比27;//血量降低x%,属性提高y%  属性类型_血量降低万分比_提高值8;//对方有技能xxx属性提高  属性类型_属性提高值_技能ID_技能ID_ ...9;//对方有技能xxx属性降低  属性类型_属性降低值_技能ID_技能ID_ ...10;//无视防御 无视防御万分比 */
		public static getExtraAddAttrBySkillIndex(value:number):string;
		 /**  公共条件__emSkillCommonCondition1;//状态增加治疗 万分比_状态ID 2;//血量低于加治疗效果 万分比_加治疗效果万分比3;//驱散增加生命上限伤害 驱散个数_生命上限万分比4;//技能段斩杀  段ID_生命万分比_不超过自身属性_不超过自身属性万分比5;//额外技能目标个数  概率_个数6;//使用上一次总伤害加护盾  万分比7;//使用HP加护盾  HP的万分比8;//状态层数加次数 参数:stateid_buff层数_最大次数9;//限制伤害 最大值_最小值10;//使用上一次治疗量加护盾  万分比11;//伤害均摊 */
		public static getCommonConditionBySkillIndex(value:number):string;
		 /**  给目标加buff条件_emSkillBuffCondition1;//职业 参数 职业类型_emPetJobType_buff额外万分比2;//状态 参数: 状态1_状态23;//死亡4;//暴击5;//属性低于自身  属性类型_buff概率万分比6;//状态提升概率  状态1_buff概率万分比7;//buff随机个数  个数8;//生命值低于万分比 万分比9;//选择职业 参数 职业类型1_职业类型2....10;//buff权重随机个数  个数 */
		public static getAddTarBuffConditionBySkillIndex(value:number):string;
		 /**  增加目标buffbuffid_概率; */
		public static getAddTarBuffBySkillIndex(value:number):string;
		 /**  给自己加buffbuffid_概率; */
		public static getAddSelfBuffBySkillIndex(value:number):string;
		 /**  给自身加属性属性类型_值_万分比 */
		public static getAddSelfAttrBySkillIndex(value:number):string;
		 /**  携带物技能 */
		public static getHorcruxSkillBySkillIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_skill_new.xls】 ----> Race_Damaga
	class SkillNewRaceDamagaBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SkillNewRaceDamagaCfgInfo>;
			public static setup(dataArr:Array<cfg.SkillNewRaceDamagaCfgInfo>):void;
		public static getInfo(value:number):cfg.SkillNewRaceDamagaCfgInfo;
		public static getFirstInfo():cfg.SkillNewRaceDamagaCfgInfo;
		 /**  攻击方1;//神仙2;//人族3;//魔族 */
		public static getAttackRaceByAttackRace(value:number):number;
		 /**  防御方1;//神仙2;//人族3;//魔族 */
		public static getDefenseRaceByAttackRace(value:number):number;
		 /**  伤害万分比 */
		public static getDamageRateByAttackRace(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> question
	class StrongerQuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerQuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerQuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerQuestionCfgInfo;
		public static getFirstInfo():cfg.StrongerQuestionCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  Height */
		public static getHeightByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> petCommand
	class StrongerPetCommandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerPetCommandCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerPetCommandCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerPetCommandCfgInfo;
		public static getFirstInfo():cfg.StrongerPetCommandCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  刷怪位置ID_怪物ID_怪物等级 */
		public static getAddMonsterByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> resListTitle
	class StrongerResListTitleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerResListTitleCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerResListTitleCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerResListTitleCfgInfo;
		public static getFirstInfo():cfg.StrongerResListTitleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  道具列表 */
		public static getItemIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> stronger
	class StrongerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerCfgInfo;
		public static getFirstInfo():cfg.StrongerCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByID(value:number):number;
		 /**  ServerKey */
		public static getServerKeyByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> resListDetail
	class StrongerResListDetailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerResListDetailCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerResListDetailCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerResListDetailCfgInfo;
		public static getFirstInfo():cfg.StrongerResListDetailCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  resTitleID */
		public static getResTitleIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByID(value:number):number;
		 /**  道具列表 */
		public static getItemIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> funList
	class StrongerFunListBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerFunListCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerFunListCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerFunListCfgInfo;
		public static getFirstInfo():cfg.StrongerFunListCfgInfo;
		 /**  功能ID */
		public static getIDByID(value:number):number;
		 /**  功能名称 */
		public static getNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> funList
	class StrongerFunListBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerFunListCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerFunListCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerFunListCfgInfo;
		public static getFirstInfo():cfg.StrongerFunListCfgInfo;
		 /**  功能ID */
		public static getIDByID(value:number):number;
		 /**  功能名称 */
		public static getNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> resListTitle
	class StrongerResListTitleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerResListTitleCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerResListTitleCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerResListTitleCfgInfo;
		public static getFirstInfo():cfg.StrongerResListTitleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  道具列表 */
		public static getItemIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> stronger
	class StrongerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerCfgInfo;
		public static getFirstInfo():cfg.StrongerCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByID(value:number):number;
		 /**  ServerKey */
		public static getServerKeyByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> resListTitle
	class StrongerResListTitleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerResListTitleCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerResListTitleCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerResListTitleCfgInfo;
		public static getFirstInfo():cfg.StrongerResListTitleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  道具列表 */
		public static getItemIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> resListDetail
	class StrongerResListDetailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerResListDetailCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerResListDetailCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerResListDetailCfgInfo;
		public static getFirstInfo():cfg.StrongerResListDetailCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  resTitleID */
		public static getResTitleIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByID(value:number):number;
		 /**  道具列表 */
		public static getItemIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> stronger
	class StrongerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerCfgInfo;
		public static getFirstInfo():cfg.StrongerCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByID(value:number):number;
		 /**  ServerKey */
		public static getServerKeyByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> question
	class StrongerQuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerQuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerQuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerQuestionCfgInfo;
		public static getFirstInfo():cfg.StrongerQuestionCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  Height */
		public static getHeightByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> resListDetail
	class StrongerResListDetailBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerResListDetailCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerResListDetailCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerResListDetailCfgInfo;
		public static getFirstInfo():cfg.StrongerResListDetailCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  resTitleID */
		public static getResTitleIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  UIOpen表对应ID */
		public static getUIOpenIDByID(value:number):number;
		 /**  道具列表 */
		public static getItemIDByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> petCommand
	class StrongerPetCommandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerPetCommandCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerPetCommandCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerPetCommandCfgInfo;
		public static getFirstInfo():cfg.StrongerPetCommandCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  刷怪位置ID_怪物ID_怪物等级 */
		public static getAddMonsterByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> petCommand
	class StrongerPetCommandBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerPetCommandCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerPetCommandCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerPetCommandCfgInfo;
		public static getFirstInfo():cfg.StrongerPetCommandCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  刷怪位置ID_怪物ID_怪物等级 */
		public static getAddMonsterByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> question
	class StrongerQuestionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerQuestionCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerQuestionCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerQuestionCfgInfo;
		public static getFirstInfo():cfg.StrongerQuestionCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  Name */
		public static getNameByID(value:number):string;
		 /**  Des */
		public static getDesByID(value:number):string;
		 /**  Height */
		public static getHeightByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_stronger.xls】 ----> funList
	class StrongerFunListBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.StrongerFunListCfgInfo>;
			public static setup(dataArr:Array<cfg.StrongerFunListCfgInfo>):void;
		public static getInfo(value:number):cfg.StrongerFunListCfgInfo;
		public static getFirstInfo():cfg.StrongerFunListCfgInfo;
		 /**  功能ID */
		public static getIDByID(value:number):number;
		 /**  功能名称 */
		public static getNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_system_switch.xls】 ----> system_group
	class SystemSwitchSystemGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SystemSwitchSystemGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.SystemSwitchSystemGroupCfgInfo>):void;
		public static getInfo(value:string):cfg.SystemSwitchSystemGroupCfgInfo;
		public static getFirstInfo():cfg.SystemSwitchSystemGroupCfgInfo;
		 /**  系统ID组合 */
		public static getGroupsByGroups(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_system_switch.xls】 ----> system_group
	class SystemSwitchSystemGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SystemSwitchSystemGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.SystemSwitchSystemGroupCfgInfo>):void;
		public static getInfo(value:string):cfg.SystemSwitchSystemGroupCfgInfo;
		public static getFirstInfo():cfg.SystemSwitchSystemGroupCfgInfo;
		 /**  系统ID组合 */
		public static getGroupsByGroups(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_system_switch.xls】 ----> system_switch
	class SystemSwitchSystemSwitchBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SystemSwitchSystemSwitchCfgInfo>;
			public static setup(dataArr:Array<cfg.SystemSwitchSystemSwitchCfgInfo>):void;
		public static getInfo(value:number):cfg.SystemSwitchSystemSwitchCfgInfo;
		public static getFirstInfo():cfg.SystemSwitchSystemSwitchCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  排序 */
		public static getSortByID(value:number):number;
		 /**  功能名称 */
		public static getNameByID(value:number):string;
		 /**  大类型ID参照枚举_emPC2S_Protocol */
		public static getMainProctocalIDByID(value:number):string;
		 /**  子类型ID参照主协议对应的子协议分号隔开 */
		public static getSubProctocalIDByID(value:number):string;
		 /**  是否无视条件直接开启 */
		public static getNoConditionByID(value:number):number;
		 /**  等级条件 */
		public static getLevelByID(value:number):number;
		 /**  世界等级 */
		public static getWorldLevelByID(value:number):number;
		 /**  关卡数 */
		public static getStageByID(value:number):number;
		 /**  全局开关 */
		public static getOpenByID(value:number):number;
		 /**  功能图标 */
		public static getIconByID(value:number):string;
		 /**  是否推送功能开启图标 */
		public static getRemindSwitchByID(value:number):number;
		 /**  登录天数 */
		public static getLoginDaysByID(value:number):number;
		 /**  未解锁时提示 */
		public static getUnlockDesByID(value:number):string;
		 /**  功能描述 */
		public static getDescribeByID(value:number):string;
		 /**  未解锁图标是否显示 */
		public static getShowIconByID(value:number):number;
		 /**  开启奖励 */
		public static getAddItemByID(value:number):string;
		 /**  功能跳转 */
		public static getUIOpenIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_system_switch.xls】 ----> system_group
	class SystemSwitchSystemGroupBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SystemSwitchSystemGroupCfgInfo>;
			public static setup(dataArr:Array<cfg.SystemSwitchSystemGroupCfgInfo>):void;
		public static getInfo(value:string):cfg.SystemSwitchSystemGroupCfgInfo;
		public static getFirstInfo():cfg.SystemSwitchSystemGroupCfgInfo;
		 /**  系统ID组合 */
		public static getGroupsByGroups(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_system_switch.xls】 ----> system_switch
	class SystemSwitchSystemSwitchBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SystemSwitchSystemSwitchCfgInfo>;
			public static setup(dataArr:Array<cfg.SystemSwitchSystemSwitchCfgInfo>):void;
		public static getInfo(value:number):cfg.SystemSwitchSystemSwitchCfgInfo;
		public static getFirstInfo():cfg.SystemSwitchSystemSwitchCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  排序 */
		public static getSortByID(value:number):number;
		 /**  功能名称 */
		public static getNameByID(value:number):string;
		 /**  大类型ID参照枚举_emPC2S_Protocol */
		public static getMainProctocalIDByID(value:number):string;
		 /**  子类型ID参照主协议对应的子协议分号隔开 */
		public static getSubProctocalIDByID(value:number):string;
		 /**  是否无视条件直接开启 */
		public static getNoConditionByID(value:number):number;
		 /**  等级条件 */
		public static getLevelByID(value:number):number;
		 /**  世界等级 */
		public static getWorldLevelByID(value:number):number;
		 /**  关卡数 */
		public static getStageByID(value:number):number;
		 /**  全局开关 */
		public static getOpenByID(value:number):number;
		 /**  功能图标 */
		public static getIconByID(value:number):string;
		 /**  是否推送功能开启图标 */
		public static getRemindSwitchByID(value:number):number;
		 /**  登录天数 */
		public static getLoginDaysByID(value:number):number;
		 /**  未解锁时提示 */
		public static getUnlockDesByID(value:number):string;
		 /**  功能描述 */
		public static getDescribeByID(value:number):string;
		 /**  未解锁图标是否显示 */
		public static getShowIconByID(value:number):number;
		 /**  开启奖励 */
		public static getAddItemByID(value:number):string;
		 /**  功能跳转 */
		public static getUIOpenIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_system_switch.xls】 ----> system_switch
	class SystemSwitchSystemSwitchBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SystemSwitchSystemSwitchCfgInfo>;
			public static setup(dataArr:Array<cfg.SystemSwitchSystemSwitchCfgInfo>):void;
		public static getInfo(value:number):cfg.SystemSwitchSystemSwitchCfgInfo;
		public static getFirstInfo():cfg.SystemSwitchSystemSwitchCfgInfo;
		 /**  索引 */
		public static getIDByID(value:number):number;
		 /**  排序 */
		public static getSortByID(value:number):number;
		 /**  功能名称 */
		public static getNameByID(value:number):string;
		 /**  大类型ID参照枚举_emPC2S_Protocol */
		public static getMainProctocalIDByID(value:number):string;
		 /**  子类型ID参照主协议对应的子协议分号隔开 */
		public static getSubProctocalIDByID(value:number):string;
		 /**  是否无视条件直接开启 */
		public static getNoConditionByID(value:number):number;
		 /**  等级条件 */
		public static getLevelByID(value:number):number;
		 /**  世界等级 */
		public static getWorldLevelByID(value:number):number;
		 /**  关卡数 */
		public static getStageByID(value:number):number;
		 /**  全局开关 */
		public static getOpenByID(value:number):number;
		 /**  功能图标 */
		public static getIconByID(value:number):string;
		 /**  是否推送功能开启图标 */
		public static getRemindSwitchByID(value:number):number;
		 /**  登录天数 */
		public static getLoginDaysByID(value:number):number;
		 /**  未解锁时提示 */
		public static getUnlockDesByID(value:number):string;
		 /**  功能描述 */
		public static getDescribeByID(value:number):string;
		 /**  未解锁图标是否显示 */
		public static getShowIconByID(value:number):number;
		 /**  开启奖励 */
		public static getAddItemByID(value:number):string;
		 /**  功能跳转 */
		public static getUIOpenIdByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> tablet
	class TabletBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletCfgInfo;
		public static getFirstInfo():cfg.TabletCfgInfo;
		 /**  晶碑等级 */
		public static getLevelByLevel(value:number):number;
		 /**  生命 */
		public static getHPByLevel(value:number):number;
		 /**  攻击 */
		public static getATKByLevel(value:number):number;
		 /**  防御 */
		public static getDEFByLevel(value:number):number;
		 /**  升级消耗 */
		public static getLvUpNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> star_addition
	class TabletStarAdditionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletStarAdditionCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletStarAdditionCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletStarAdditionCfgInfo;
		public static getFirstInfo():cfg.TabletStarAdditionCfgInfo;
		 /**  星数 */
		public static getStarByStar(value:number):number;
		 /**  加成万分比 */
		public static getAdditionByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> creation
	class TabletCreationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletCreationCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletCreationCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletCreationCfgInfo;
		public static getFirstInfo():cfg.TabletCreationCfgInfo;
		 /**  平均星数 */
		public static getStarByStar(value:number):number;
		 /**  创造消耗 */
		public static getNeedItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> star_addition
	class TabletStarAdditionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletStarAdditionCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletStarAdditionCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletStarAdditionCfgInfo;
		public static getFirstInfo():cfg.TabletStarAdditionCfgInfo;
		 /**  星数 */
		public static getStarByStar(value:number):number;
		 /**  加成万分比 */
		public static getAdditionByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> magic_juice
	class TabletMagicJuiceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletMagicJuiceCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletMagicJuiceCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletMagicJuiceCfgInfo;
		public static getFirstInfo():cfg.TabletMagicJuiceCfgInfo;
		 /**  提炼等级 */
		public static getLevelByLevel(value:number):number;
		 /**  转换效率（多少经验1个） */
		public static getNeedExpByLevel(value:number):string;
		 /**  提炼效率（多少秒1个） */
		public static getNeedTimeByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> tablet
	class TabletBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletCfgInfo;
		public static getFirstInfo():cfg.TabletCfgInfo;
		 /**  晶碑等级 */
		public static getLevelByLevel(value:number):number;
		 /**  生命 */
		public static getHPByLevel(value:number):number;
		 /**  攻击 */
		public static getATKByLevel(value:number):number;
		 /**  防御 */
		public static getDEFByLevel(value:number):number;
		 /**  升级消耗 */
		public static getLvUpNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> tablet
	class TabletBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletCfgInfo;
		public static getFirstInfo():cfg.TabletCfgInfo;
		 /**  晶碑等级 */
		public static getLevelByLevel(value:number):number;
		 /**  生命 */
		public static getHPByLevel(value:number):number;
		 /**  攻击 */
		public static getATKByLevel(value:number):number;
		 /**  防御 */
		public static getDEFByLevel(value:number):number;
		 /**  升级消耗 */
		public static getLvUpNeedItemByLevel(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> constants
	class TabletConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletConstantsCfgInfo;
		public static getFirstInfo():cfg.TabletConstantsCfgInfo;
		 /**  阵位数量 */
		public static getPosCountByPosCount(value:number):number;
		 /**  开启赋能创造星数 */
		public static getCreateNeedStarByPosCount(value:number):string;
		 /**  赋能创造次数 */
		public static getCreateCountByPosCount(value:number):number;
		 /**  魔液物品ID */
		public static getMagicJuiceIDByPosCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> magic_juice
	class TabletMagicJuiceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletMagicJuiceCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletMagicJuiceCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletMagicJuiceCfgInfo;
		public static getFirstInfo():cfg.TabletMagicJuiceCfgInfo;
		 /**  提炼等级 */
		public static getLevelByLevel(value:number):number;
		 /**  转换效率（多少经验1个） */
		public static getNeedExpByLevel(value:number):string;
		 /**  提炼效率（多少秒1个） */
		public static getNeedTimeByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> creation
	class TabletCreationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletCreationCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletCreationCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletCreationCfgInfo;
		public static getFirstInfo():cfg.TabletCreationCfgInfo;
		 /**  平均星数 */
		public static getStarByStar(value:number):number;
		 /**  创造消耗 */
		public static getNeedItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> creation
	class TabletCreationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletCreationCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletCreationCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletCreationCfgInfo;
		public static getFirstInfo():cfg.TabletCreationCfgInfo;
		 /**  平均星数 */
		public static getStarByStar(value:number):number;
		 /**  创造消耗 */
		public static getNeedItemByStar(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> constants
	class TabletConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletConstantsCfgInfo;
		public static getFirstInfo():cfg.TabletConstantsCfgInfo;
		 /**  阵位数量 */
		public static getPosCountByPosCount(value:number):number;
		 /**  开启赋能创造星数 */
		public static getCreateNeedStarByPosCount(value:number):string;
		 /**  赋能创造次数 */
		public static getCreateCountByPosCount(value:number):number;
		 /**  魔液物品ID */
		public static getMagicJuiceIDByPosCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> constants
	class TabletConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletConstantsCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletConstantsCfgInfo;
		public static getFirstInfo():cfg.TabletConstantsCfgInfo;
		 /**  阵位数量 */
		public static getPosCountByPosCount(value:number):number;
		 /**  开启赋能创造星数 */
		public static getCreateNeedStarByPosCount(value:number):string;
		 /**  赋能创造次数 */
		public static getCreateCountByPosCount(value:number):number;
		 /**  魔液物品ID */
		public static getMagicJuiceIDByPosCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> star_addition
	class TabletStarAdditionBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletStarAdditionCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletStarAdditionCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletStarAdditionCfgInfo;
		public static getFirstInfo():cfg.TabletStarAdditionCfgInfo;
		 /**  星数 */
		public static getStarByStar(value:number):number;
		 /**  加成万分比 */
		public static getAdditionByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_tablet.xls】 ----> magic_juice
	class TabletMagicJuiceBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TabletMagicJuiceCfgInfo>;
			public static setup(dataArr:Array<cfg.TabletMagicJuiceCfgInfo>):void;
		public static getInfo(value:number):cfg.TabletMagicJuiceCfgInfo;
		public static getFirstInfo():cfg.TabletMagicJuiceCfgInfo;
		 /**  提炼等级 */
		public static getLevelByLevel(value:number):number;
		 /**  转换效率（多少经验1个） */
		public static getNeedExpByLevel(value:number):string;
		 /**  提炼效率（多少秒1个） */
		public static getNeedTimeByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> monster_new
	class TeamCampaignMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> formation
	class TeamCampaignFormationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignFormationCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignFormationCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignFormationCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignFormationCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  阵容对应位置(1号位;2号位;3号位) */
		public static getPositionByIndex(value:number):string;
		 /**  名称 */
		public static getNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> monster_new
	class TeamCampaignMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> formation
	class TeamCampaignFormationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignFormationCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignFormationCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignFormationCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignFormationCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  阵容对应位置(1号位;2号位;3号位) */
		public static getPositionByIndex(value:number):string;
		 /**  名称 */
		public static getNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> robot
	class TeamCampaignRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignRobotCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> extra_prize
	class TeamCampaignExtraPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignExtraPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignExtraPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignExtraPrizeCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignExtraPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  参数 */
		public static getParamByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> robot
	class TeamCampaignRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignRobotCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> stage
	class TeamCampaignStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignStageCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignStageCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignStageCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  难度 */
		public static getDifficultyByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  固定位置 */
		public static getFixedPositionByIndex(value:number):string;
		 /**  参与条件(条件_参数) */
		public static getConditionByIndex(value:number):string;
		 /**  怪物特征 */
		public static getMonsterDescByIndex(value:number):string;
		 /**  显示形象 */
		public static getShowPetIdByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> stage
	class TeamCampaignStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignStageCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignStageCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignStageCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  难度 */
		public static getDifficultyByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  固定位置 */
		public static getFixedPositionByIndex(value:number):string;
		 /**  参与条件(条件_参数) */
		public static getConditionByIndex(value:number):string;
		 /**  怪物特征 */
		public static getMonsterDescByIndex(value:number):string;
		 /**  显示形象 */
		public static getShowPetIdByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> extra_prize
	class TeamCampaignExtraPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignExtraPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignExtraPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignExtraPrizeCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignExtraPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  参数 */
		public static getParamByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> extra_prize
	class TeamCampaignExtraPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignExtraPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignExtraPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignExtraPrizeCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignExtraPrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  参数 */
		public static getParamByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> monster_new
	class TeamCampaignMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> formation
	class TeamCampaignFormationBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignFormationCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignFormationCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignFormationCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignFormationCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  阵容对应位置(1号位;2号位;3号位) */
		public static getPositionByIndex(value:number):string;
		 /**  名称 */
		public static getNameByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> stage
	class TeamCampaignStageBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignStageCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignStageCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignStageCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignStageCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  关卡 */
		public static getStageByIndex(value:number):number;
		 /**  难度 */
		public static getDifficultyByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  固定位置 */
		public static getFixedPositionByIndex(value:number):string;
		 /**  参与条件(条件_参数) */
		public static getConditionByIndex(value:number):string;
		 /**  怪物特征 */
		public static getMonsterDescByIndex(value:number):string;
		 /**  显示形象 */
		public static getShowPetIdByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_team_campaign.xls】 ----> robot
	class TeamCampaignRobotBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TeamCampaignRobotCfgInfo>;
			public static setup(dataArr:Array<cfg.TeamCampaignRobotCfgInfo>):void;
		public static getInfo(value:number):cfg.TeamCampaignRobotCfgInfo;
		public static getFirstInfo():cfg.TeamCampaignRobotCfgInfo;
		 /**  ID */
		public static getRobotIDByRobotID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> Level_Info
	class TempleLevelInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleLevelInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleLevelInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleLevelInfoCfgInfo;
		public static getFirstInfo():cfg.TempleLevelInfoCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  伙伴阶数 */
		public static getPetAdvanceByLevel(value:number):number;
		 /**  伙伴星级 */
		public static getPetStarByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> s_monster_index
	class TempleSMonsterIndexBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleSMonsterIndexCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleSMonsterIndexCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleSMonsterIndexCfgInfo;
		public static getFirstInfo():cfg.TempleSMonsterIndexCfgInfo;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;
		 /**  怪物索引 */
		public static getMonsteIndexByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> temple
	class TempleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleCfgInfo;
		public static getFirstInfo():cfg.TempleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByID(value:number):number;
		 /**  需要竞技场名次 */
		public static getNeedChallengeRankByID(value:number):number;
		 /**  称号ID */
		public static getAddTitleByID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByID(value:number):number;
		 /**  附加属性 */
		public static getAttriByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> Level_Info
	class TempleLevelInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleLevelInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleLevelInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleLevelInfoCfgInfo;
		public static getFirstInfo():cfg.TempleLevelInfoCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  伙伴阶数 */
		public static getPetAdvanceByLevel(value:number):number;
		 /**  伙伴星级 */
		public static getPetStarByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> monster_new
	class TempleMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TempleMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  额外技能(技能ID|技能Lv_技能ID|技能Lv;)分号留空表示这个怪物没有附加技能 */
		public static getExtraSkillByIndex(value:number):string;
		 /**  Boss序号（好像没用到，之后确认是否删除） */
		public static getBossIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> monster_new
	class TempleMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TempleMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  额外技能(技能ID|技能Lv_技能ID|技能Lv;)分号留空表示这个怪物没有附加技能 */
		public static getExtraSkillByIndex(value:number):string;
		 /**  Boss序号（好像没用到，之后确认是否删除） */
		public static getBossIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> evolve
	class TempleEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleEvolveCfgInfo;
		public static getFirstInfo():cfg.TempleEvolveCfgInfo;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;
		 /**  技能id_等级; */
		public static getSkillIDByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> id_count
	class TempleIdCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleIdCountCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleIdCountCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleIdCountCfgInfo;
		public static getFirstInfo():cfg.TempleIdCountCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> evolve
	class TempleEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleEvolveCfgInfo;
		public static getFirstInfo():cfg.TempleEvolveCfgInfo;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;
		 /**  技能id_等级; */
		public static getSkillIDByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> temple
	class TempleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleCfgInfo;
		public static getFirstInfo():cfg.TempleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByID(value:number):number;
		 /**  需要竞技场名次 */
		public static getNeedChallengeRankByID(value:number):number;
		 /**  称号ID */
		public static getAddTitleByID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByID(value:number):number;
		 /**  附加属性 */
		public static getAttriByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> Level_Info
	class TempleLevelInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleLevelInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleLevelInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleLevelInfoCfgInfo;
		public static getFirstInfo():cfg.TempleLevelInfoCfgInfo;
		 /**  等级 */
		public static getLevelByLevel(value:number):number;
		 /**  伙伴阶数 */
		public static getPetAdvanceByLevel(value:number):number;
		 /**  伙伴星级 */
		public static getPetStarByLevel(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> monster_new
	class TempleMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TempleMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;
		 /**  额外技能(技能ID|技能Lv_技能ID|技能Lv;)分号留空表示这个怪物没有附加技能 */
		public static getExtraSkillByIndex(value:number):string;
		 /**  Boss序号（好像没用到，之后确认是否删除） */
		public static getBossIndexByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> id_count
	class TempleIdCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleIdCountCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleIdCountCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleIdCountCfgInfo;
		public static getFirstInfo():cfg.TempleIdCountCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> evolve
	class TempleEvolveBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleEvolveCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleEvolveCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleEvolveCfgInfo;
		public static getFirstInfo():cfg.TempleEvolveCfgInfo;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;
		 /**  技能id_等级; */
		public static getSkillIDByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> s_monster_index
	class TempleSMonsterIndexBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleSMonsterIndexCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleSMonsterIndexCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleSMonsterIndexCfgInfo;
		public static getFirstInfo():cfg.TempleSMonsterIndexCfgInfo;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;
		 /**  怪物索引 */
		public static getMonsteIndexByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> id_count
	class TempleIdCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleIdCountCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleIdCountCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleIdCountCfgInfo;
		public static getFirstInfo():cfg.TempleIdCountCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> temple
	class TempleBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleCfgInfo;
		public static getFirstInfo():cfg.TempleCfgInfo;
		 /**  ID */
		public static getIDByID(value:number):number;
		 /**  名称 */
		public static getNameByID(value:number):string;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByID(value:number):number;
		 /**  需要竞技场名次 */
		public static getNeedChallengeRankByID(value:number):number;
		 /**  称号ID */
		public static getAddTitleByID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByID(value:number):number;
		 /**  附加属性 */
		public static getAttriByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_temple.xls】 ----> s_monster_index
	class TempleSMonsterIndexBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TempleSMonsterIndexCfgInfo>;
			public static setup(dataArr:Array<cfg.TempleSMonsterIndexCfgInfo>):void;
		public static getInfo(value:number):cfg.TempleSMonsterIndexCfgInfo;
		public static getFirstInfo():cfg.TempleSMonsterIndexCfgInfo;
		 /**  类型1; //万殿之巅2; //泰坦神耀3; //瀚海星灵 */
		public static getTypeByType(value:number):number;
		 /**  进化次数 */
		public static getCountByType(value:number):number;
		 /**  怪物索引 */
		public static getMonsteIndexByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> toplist
	class ToplistBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistCfgInfo;
		public static getFirstInfo():cfg.ToplistCfgInfo;
		 /**  排行类型 */
		public static getTypeByType(value:number):number;
		 /**  名字 */
		public static getNameByType(value:number):string;
		 /**  显示排行数 */
		public static getShowLineByType(value:number):number;
		 /**  重置次数 */
		public static getResetCountByType(value:number):number;
		 /**  是否为排名比例发放奖励 */
		public static getRankRatioRewardByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> reward
	class ToplistRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistRewardCfgInfo;
		public static getFirstInfo():cfg.ToplistRewardCfgInfo;
		 /**  奖励id */
		public static getIDByID(value:number):number;
		 /**  排行类型 */
		public static getTypeByID(value:number):number;
		 /**  排名 */
		public static getRankByID(value:number):number;
		 /**  奖励 */
		public static getRewardByID(value:number):string;
		 /**  限制 */
		public static getLimitByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> charge_score
	class ToplistChargeScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistChargeScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistChargeScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistChargeScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistChargeScoreCfgInfo;
		 /**  单笔金额 */
		public static getChargeByCharge(value:number):number;
		 /**  积分 */
		public static getScoreByCharge(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> piece_score
	class ToplistPieceScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistPieceScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistPieceScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistPieceScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistPieceScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> toplist
	class ToplistBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistCfgInfo;
		public static getFirstInfo():cfg.ToplistCfgInfo;
		 /**  排行类型 */
		public static getTypeByType(value:number):number;
		 /**  名字 */
		public static getNameByType(value:number):string;
		 /**  显示排行数 */
		public static getShowLineByType(value:number):number;
		 /**  重置次数 */
		public static getResetCountByType(value:number):number;
		 /**  是否为排名比例发放奖励 */
		public static getRankRatioRewardByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> hero_score
	class ToplistHeroScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistHeroScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistHeroScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistHeroScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistHeroScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> toplist
	class ToplistBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistCfgInfo;
		public static getFirstInfo():cfg.ToplistCfgInfo;
		 /**  排行类型 */
		public static getTypeByType(value:number):number;
		 /**  名字 */
		public static getNameByType(value:number):string;
		 /**  显示排行数 */
		public static getShowLineByType(value:number):number;
		 /**  重置次数 */
		public static getResetCountByType(value:number):number;
		 /**  是否为排名比例发放奖励 */
		public static getRankRatioRewardByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> reward
	class ToplistRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistRewardCfgInfo;
		public static getFirstInfo():cfg.ToplistRewardCfgInfo;
		 /**  奖励id */
		public static getIDByID(value:number):number;
		 /**  排行类型 */
		public static getTypeByID(value:number):number;
		 /**  排名 */
		public static getRankByID(value:number):number;
		 /**  奖励 */
		public static getRewardByID(value:number):string;
		 /**  限制 */
		public static getLimitByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> upstar_score
	class ToplistUpstarScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistUpstarScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistUpstarScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistUpstarScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistUpstarScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> piece_score
	class ToplistPieceScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistPieceScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistPieceScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistPieceScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistPieceScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> hero_score
	class ToplistHeroScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistHeroScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistHeroScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistHeroScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistHeroScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> upstar_score
	class ToplistUpstarScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistUpstarScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistUpstarScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistUpstarScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistUpstarScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> reward
	class ToplistRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistRewardCfgInfo;
		public static getFirstInfo():cfg.ToplistRewardCfgInfo;
		 /**  奖励id */
		public static getIDByID(value:number):number;
		 /**  排行类型 */
		public static getTypeByID(value:number):number;
		 /**  排名 */
		public static getRankByID(value:number):number;
		 /**  奖励 */
		public static getRewardByID(value:number):string;
		 /**  限制 */
		public static getLimitByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> charge_score
	class ToplistChargeScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistChargeScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistChargeScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistChargeScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistChargeScoreCfgInfo;
		 /**  单笔金额 */
		public static getChargeByCharge(value:number):number;
		 /**  积分 */
		public static getScoreByCharge(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> upstar_score
	class ToplistUpstarScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistUpstarScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistUpstarScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistUpstarScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistUpstarScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> charge_score
	class ToplistChargeScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistChargeScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistChargeScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistChargeScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistChargeScoreCfgInfo;
		 /**  单笔金额 */
		public static getChargeByCharge(value:number):number;
		 /**  积分 */
		public static getScoreByCharge(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> hero_score
	class ToplistHeroScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistHeroScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistHeroScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistHeroScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistHeroScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_toplist.xls】 ----> piece_score
	class ToplistPieceScoreBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ToplistPieceScoreCfgInfo>;
			public static setup(dataArr:Array<cfg.ToplistPieceScoreCfgInfo>):void;
		public static getInfo(value:number):cfg.ToplistPieceScoreCfgInfo;
		public static getFirstInfo():cfg.ToplistPieceScoreCfgInfo;
		 /**  星 */
		public static getStarByStar(value:number):number;
		 /**  类型 */
		public static getTypeByStar(value:number):number;
		 /**  积分 */
		public static getScoreByStar(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> constants
	class TrainConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainConstantsCfgInfo>):void;
		public static getInfo(value:string):cfg.TrainConstantsCfgInfo;
		public static getFirstInfo():cfg.TrainConstantsCfgInfo;
		 /**  主界面玩法奖励 */
		public static getMainPagePrizeByMainPagePrize(value:string):string;
		 /**  首通奖励 */
		public static getFirstPrizeByMainPagePrize(value:string):string;
		 /**  日常挑战奖励 */
		public static getDaylyPrizeByMainPagePrize(value:string):string;
		 /**  排行榜奖励 */
		public static getRankPrizeByMainPagePrize(value:string):string;
		 /**  Buff技能index(分号隔开) */
		public static getBuffByMainPagePrize(value:string):string;
		 /**  购买buff数量 */
		public static getBuffCountByMainPagePrize(value:string):number;
		 /**  购买buff消耗 */
		public static getBuffNeedItemByMainPagePrize(value:string):string;
		 /**  buff加成伤害万分比 */
		public static getBuffAddDamageByMainPagePrize(value:string):number;
		 /**  购买挑战次数消耗 */
		public static getCountNeedItemByMainPagePrize(value:string):string;
		 /**  购买挑战次数 */
		public static getBuyCountByMainPagePrize(value:string):number;
		 /**  免费挑战次数 */
		public static getFreeCountByMainPagePrize(value:string):number;
		 /**  大师挑战入口奖励预览 */
		public static getPeakPrizeReviewByMainPagePrize(value:string):string;
		 /**  对战塔商店开启关卡 */
		public static getTowerShopOpenByMainPagePrize(value:string):number;
		 /**  大师对战塔商店开启关卡 */
		public static getMasterTowerShopOpenByMainPagePrize(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> peak
	class TrainPeakBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainPeakCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainPeakCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainPeakCfgInfo;
		public static getFirstInfo():cfg.TrainPeakCfgInfo;
		 /**  天 */
		public static getDayByDay(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByDay(value:number):number;
		 /**  奖励 */
		public static getPrizeByDay(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> monster_new
	class TrainMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TrainMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endless
	class TrainEndlessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlessCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlessCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlessCfgInfo;
		public static getFirstInfo():cfg.TrainEndlessCfgInfo;
		 /**  关卡 */
		public static getStageIDByStageID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByStageID(value:number):number;
		 /**  重置的关卡 */
		public static getResetStageIDByStageID(value:number):number;
		 /**  领取关卡数 */
		public static getPrizeStageCountByStageID(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByStageID(value:number):string;
		 /**  固定奖励 */
		public static getFixPrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower_prize
	class TrainTowerPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerPrizeCfgInfo;
		public static getFirstInfo():cfg.TrainTowerPrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  类型 */
		public static getTypeByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower_prize
	class TrainTowerPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerPrizeCfgInfo;
		public static getFirstInfo():cfg.TrainTowerPrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  类型 */
		public static getTypeByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower
	class TrainTowerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerCfgInfo;
		public static getFirstInfo():cfg.TrainTowerCfgInfo;
		 /**  关卡 */
		public static getStageIDByStageID(value:number):number;
		 /**  层数显示 */
		public static getStageShowByStageID(value:number):number;
		 /**  类型 */
		public static getTypeByStageID(value:number):number;
		 /**  推荐战力 */
		public static getRequreFightPowerByStageID(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByStageID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByStageID(value:number):number;
		 /**  首通奖励 */
		public static getFirstAddPrizeByStageID(value:number):string;
		 /**  挑战奖励 */
		public static getAddPrizeByStageID(value:number):string;
		 /**  文字描述 */
		public static getDescByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower_count
	class TrainTowerCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerCountCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerCountCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerCountCfgInfo;
		public static getFirstInfo():cfg.TrainTowerCountCfgInfo;
		 /**  次数 */
		public static getBuyCountByBuyCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByBuyCount(value:number):number;
		 /**  需要VIP特权 */
		public static getNeedVIPByBuyCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endless
	class TrainEndlessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlessCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlessCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlessCfgInfo;
		public static getFirstInfo():cfg.TrainEndlessCfgInfo;
		 /**  关卡 */
		public static getStageIDByStageID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByStageID(value:number):number;
		 /**  重置的关卡 */
		public static getResetStageIDByStageID(value:number):number;
		 /**  领取关卡数 */
		public static getPrizeStageCountByStageID(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByStageID(value:number):string;
		 /**  固定奖励 */
		public static getFixPrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endless_prize
	class TrainEndlessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlessPrizeCfgInfo;
		public static getFirstInfo():cfg.TrainEndlessPrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower
	class TrainTowerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerCfgInfo;
		public static getFirstInfo():cfg.TrainTowerCfgInfo;
		 /**  关卡 */
		public static getStageIDByStageID(value:number):number;
		 /**  层数显示 */
		public static getStageShowByStageID(value:number):number;
		 /**  类型 */
		public static getTypeByStageID(value:number):number;
		 /**  推荐战力 */
		public static getRequreFightPowerByStageID(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByStageID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByStageID(value:number):number;
		 /**  首通奖励 */
		public static getFirstAddPrizeByStageID(value:number):string;
		 /**  挑战奖励 */
		public static getAddPrizeByStageID(value:number):string;
		 /**  文字描述 */
		public static getDescByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower_prize
	class TrainTowerPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerPrizeCfgInfo;
		public static getFirstInfo():cfg.TrainTowerPrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  类型 */
		public static getTypeByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower
	class TrainTowerBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerCfgInfo;
		public static getFirstInfo():cfg.TrainTowerCfgInfo;
		 /**  关卡 */
		public static getStageIDByStageID(value:number):number;
		 /**  层数显示 */
		public static getStageShowByStageID(value:number):number;
		 /**  类型 */
		public static getTypeByStageID(value:number):number;
		 /**  推荐战力 */
		public static getRequreFightPowerByStageID(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByStageID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByStageID(value:number):number;
		 /**  首通奖励 */
		public static getFirstAddPrizeByStageID(value:number):string;
		 /**  挑战奖励 */
		public static getAddPrizeByStageID(value:number):string;
		 /**  文字描述 */
		public static getDescByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower_count
	class TrainTowerCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerCountCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerCountCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerCountCfgInfo;
		public static getFirstInfo():cfg.TrainTowerCountCfgInfo;
		 /**  次数 */
		public static getBuyCountByBuyCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByBuyCount(value:number):number;
		 /**  需要VIP特权 */
		public static getNeedVIPByBuyCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endless_prize
	class TrainEndlessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlessPrizeCfgInfo;
		public static getFirstInfo():cfg.TrainEndlessPrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endlest_buff
	class TrainEndlestBuffBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlestBuffCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlestBuffCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlestBuffCfgInfo;
		public static getFirstInfo():cfg.TrainEndlestBuffCfgInfo;
		 /**  Buff组 */
		public static getGroupIDByGroupID(value:number):number;
		 /**  概率 */
		public static getRateByGroupID(value:number):number;
		 /**  BuffID */
		public static getBuffIDByGroupID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> constants
	class TrainConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainConstantsCfgInfo>):void;
		public static getInfo(value:string):cfg.TrainConstantsCfgInfo;
		public static getFirstInfo():cfg.TrainConstantsCfgInfo;
		 /**  主界面玩法奖励 */
		public static getMainPagePrizeByMainPagePrize(value:string):string;
		 /**  首通奖励 */
		public static getFirstPrizeByMainPagePrize(value:string):string;
		 /**  日常挑战奖励 */
		public static getDaylyPrizeByMainPagePrize(value:string):string;
		 /**  排行榜奖励 */
		public static getRankPrizeByMainPagePrize(value:string):string;
		 /**  Buff技能index(分号隔开) */
		public static getBuffByMainPagePrize(value:string):string;
		 /**  购买buff数量 */
		public static getBuffCountByMainPagePrize(value:string):number;
		 /**  购买buff消耗 */
		public static getBuffNeedItemByMainPagePrize(value:string):string;
		 /**  buff加成伤害万分比 */
		public static getBuffAddDamageByMainPagePrize(value:string):number;
		 /**  购买挑战次数消耗 */
		public static getCountNeedItemByMainPagePrize(value:string):string;
		 /**  购买挑战次数 */
		public static getBuyCountByMainPagePrize(value:string):number;
		 /**  免费挑战次数 */
		public static getFreeCountByMainPagePrize(value:string):number;
		 /**  大师挑战入口奖励预览 */
		public static getPeakPrizeReviewByMainPagePrize(value:string):string;
		 /**  对战塔商店开启关卡 */
		public static getTowerShopOpenByMainPagePrize(value:string):number;
		 /**  大师对战塔商店开启关卡 */
		public static getMasterTowerShopOpenByMainPagePrize(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> peak
	class TrainPeakBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainPeakCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainPeakCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainPeakCfgInfo;
		public static getFirstInfo():cfg.TrainPeakCfgInfo;
		 /**  天 */
		public static getDayByDay(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByDay(value:number):number;
		 /**  奖励 */
		public static getPrizeByDay(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> monster_new
	class TrainMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TrainMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endlest_buff
	class TrainEndlestBuffBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlestBuffCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlestBuffCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlestBuffCfgInfo;
		public static getFirstInfo():cfg.TrainEndlestBuffCfgInfo;
		 /**  Buff组 */
		public static getGroupIDByGroupID(value:number):number;
		 /**  概率 */
		public static getRateByGroupID(value:number):number;
		 /**  BuffID */
		public static getBuffIDByGroupID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> monster_new
	class TrainMonsterNewBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainMonsterNewCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainMonsterNewCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainMonsterNewCfgInfo;
		public static getFirstInfo():cfg.TrainMonsterNewCfgInfo;
		 /**  关卡Index */
		public static getIndexByIndex(value:number):number;
		 /**  Boss序号 */
		public static getBossIndexByIndex(value:number):number;
		 /**  怪物们(位置_PetID_等级_阶级_星级;) */
		public static getMonsterInfoByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> tower_count
	class TrainTowerCountBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainTowerCountCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainTowerCountCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainTowerCountCfgInfo;
		public static getFirstInfo():cfg.TrainTowerCountCfgInfo;
		 /**  次数 */
		public static getBuyCountByBuyCount(value:number):number;
		 /**  需要钻石 */
		public static getNeedDiamondByBuyCount(value:number):number;
		 /**  需要VIP特权 */
		public static getNeedVIPByBuyCount(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> constants
	class TrainConstantsBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainConstantsCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainConstantsCfgInfo>):void;
		public static getInfo(value:string):cfg.TrainConstantsCfgInfo;
		public static getFirstInfo():cfg.TrainConstantsCfgInfo;
		 /**  主界面玩法奖励 */
		public static getMainPagePrizeByMainPagePrize(value:string):string;
		 /**  首通奖励 */
		public static getFirstPrizeByMainPagePrize(value:string):string;
		 /**  日常挑战奖励 */
		public static getDaylyPrizeByMainPagePrize(value:string):string;
		 /**  排行榜奖励 */
		public static getRankPrizeByMainPagePrize(value:string):string;
		 /**  Buff技能index(分号隔开) */
		public static getBuffByMainPagePrize(value:string):string;
		 /**  购买buff数量 */
		public static getBuffCountByMainPagePrize(value:string):number;
		 /**  购买buff消耗 */
		public static getBuffNeedItemByMainPagePrize(value:string):string;
		 /**  buff加成伤害万分比 */
		public static getBuffAddDamageByMainPagePrize(value:string):number;
		 /**  购买挑战次数消耗 */
		public static getCountNeedItemByMainPagePrize(value:string):string;
		 /**  购买挑战次数 */
		public static getBuyCountByMainPagePrize(value:string):number;
		 /**  免费挑战次数 */
		public static getFreeCountByMainPagePrize(value:string):number;
		 /**  大师挑战入口奖励预览 */
		public static getPeakPrizeReviewByMainPagePrize(value:string):string;
		 /**  对战塔商店开启关卡 */
		public static getTowerShopOpenByMainPagePrize(value:string):number;
		 /**  大师对战塔商店开启关卡 */
		public static getMasterTowerShopOpenByMainPagePrize(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endlest_buff
	class TrainEndlestBuffBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlestBuffCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlestBuffCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlestBuffCfgInfo;
		public static getFirstInfo():cfg.TrainEndlestBuffCfgInfo;
		 /**  Buff组 */
		public static getGroupIDByGroupID(value:number):number;
		 /**  概率 */
		public static getRateByGroupID(value:number):number;
		 /**  BuffID */
		public static getBuffIDByGroupID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endless_prize
	class TrainEndlessPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlessPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlessPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlessPrizeCfgInfo;
		public static getFirstInfo():cfg.TrainEndlessPrizeCfgInfo;
		 /**  关卡ID */
		public static getStageIDByStageID(value:number):number;
		 /**  关卡奖励道具ID_数量; */
		public static getStagePrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> peak
	class TrainPeakBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainPeakCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainPeakCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainPeakCfgInfo;
		public static getFirstInfo():cfg.TrainPeakCfgInfo;
		 /**  天 */
		public static getDayByDay(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByDay(value:number):number;
		 /**  奖励 */
		public static getPrizeByDay(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_train.xls】 ----> endless
	class TrainEndlessBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TrainEndlessCfgInfo>;
			public static setup(dataArr:Array<cfg.TrainEndlessCfgInfo>):void;
		public static getInfo(value:number):cfg.TrainEndlessCfgInfo;
		public static getFirstInfo():cfg.TrainEndlessCfgInfo;
		 /**  关卡 */
		public static getStageIDByStageID(value:number):number;
		 /**  怪物数据 */
		public static getMonsterByStageID(value:number):number;
		 /**  重置的关卡 */
		public static getResetStageIDByStageID(value:number):number;
		 /**  领取关卡数 */
		public static getPrizeStageCountByStageID(value:number):number;
		 /**  奖励 */
		public static getAddPrizeByStageID(value:number):string;
		 /**  固定奖励 */
		public static getFixPrizeByStageID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_cost
	class TreasureCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureCostCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureCostCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureCostCfgInfo;
		public static getFirstInfo():cfg.TreasureCostCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  次数 */
		public static getTimesByIndex(value:number):number;
		 /**  消耗物品 */
		public static getNeedItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_hunt
	class TreasureHuntBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureHuntCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureHuntCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureHuntCfgInfo;
		public static getFirstInfo():cfg.TreasureHuntCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  随机组 */
		public static getGroupByIndex(value:number):number;
		 /**  摇中概率 */
		public static getRollChanceByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  随机奖励道具(刷新出随机其中一种) */
		public static getAddRandItemByIndex(value:number):string;
		 /**  位置(从1开始) */
		public static getPositionByIndex(value:number):number;
		 /**  个数限制(0不限制) */
		public static getLimitNumByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_pool
	class TreasurePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasurePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasurePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasurePoolCfgInfo;
		public static getFirstInfo():cfg.TreasurePoolCfgInfo;
		 /**  随机组 */
		public static getGroupByGroup(value:number):number;
		 /**  类型 */
		public static getTypeByGroup(value:number):number;
		 /**  玩家等级(大于等于 当前level，小于下一个level) */
		public static getLevelByGroup(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_cost
	class TreasureCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureCostCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureCostCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureCostCfgInfo;
		public static getFirstInfo():cfg.TreasureCostCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  次数 */
		public static getTimesByIndex(value:number):number;
		 /**  消耗物品 */
		public static getNeedItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_hunt
	class TreasureHuntBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureHuntCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureHuntCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureHuntCfgInfo;
		public static getFirstInfo():cfg.TreasureHuntCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  随机组 */
		public static getGroupByIndex(value:number):number;
		 /**  摇中概率 */
		public static getRollChanceByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  随机奖励道具(刷新出随机其中一种) */
		public static getAddRandItemByIndex(value:number):string;
		 /**  位置(从1开始) */
		public static getPositionByIndex(value:number):number;
		 /**  个数限制(0不限制) */
		public static getLimitNumByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> lucky_reward
	class TreasureLuckyRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureLuckyRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureLuckyRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureLuckyRewardCfgInfo;
		public static getFirstInfo():cfg.TreasureLuckyRewardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  需要道具（幸运值） */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_cost
	class TreasureCostBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureCostCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureCostCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureCostCfgInfo;
		public static getFirstInfo():cfg.TreasureCostCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  次数 */
		public static getTimesByIndex(value:number):number;
		 /**  消耗物品 */
		public static getNeedItemByIndex(value:number):string;
		 /**  需要VIP */
		public static getVIPByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_hunt_type
	class TreasureHuntTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureHuntTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureHuntTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureHuntTypeCfgInfo;
		public static getFirstInfo():cfg.TreasureHuntTypeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  免费刷新次数 */
		public static getFreeCountByType(value:number):number;
		 /**  刷新需要道具 */
		public static getRefreshNeedItemByType(value:number):string;
		 /**  探宝一次获得道具（幸运值） */
		public static getAddItemByType(value:number):string;
		 /**  轮盘上物品的个数 */
		public static getDisplayNumByType(value:number):number;
		 /**  免费刷新重置时间(分钟) */
		public static getResetTimeByType(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedLevelByType(value:number):number;
		 /**  幸运值最大值 */
		public static getMaxLuckyItemByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_hunt
	class TreasureHuntBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureHuntCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureHuntCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureHuntCfgInfo;
		public static getFirstInfo():cfg.TreasureHuntCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  随机组 */
		public static getGroupByIndex(value:number):number;
		 /**  摇中概率 */
		public static getRollChanceByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;
		 /**  随机奖励道具(刷新出随机其中一种) */
		public static getAddRandItemByIndex(value:number):string;
		 /**  位置(从1开始) */
		public static getPositionByIndex(value:number):number;
		 /**  个数限制(0不限制) */
		public static getLimitNumByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_hunt_type
	class TreasureHuntTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureHuntTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureHuntTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureHuntTypeCfgInfo;
		public static getFirstInfo():cfg.TreasureHuntTypeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  免费刷新次数 */
		public static getFreeCountByType(value:number):number;
		 /**  刷新需要道具 */
		public static getRefreshNeedItemByType(value:number):string;
		 /**  探宝一次获得道具（幸运值） */
		public static getAddItemByType(value:number):string;
		 /**  轮盘上物品的个数 */
		public static getDisplayNumByType(value:number):number;
		 /**  免费刷新重置时间(分钟) */
		public static getResetTimeByType(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedLevelByType(value:number):number;
		 /**  幸运值最大值 */
		public static getMaxLuckyItemByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> lucky_reward
	class TreasureLuckyRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureLuckyRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureLuckyRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureLuckyRewardCfgInfo;
		public static getFirstInfo():cfg.TreasureLuckyRewardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  需要道具（幸运值） */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> lucky_reward
	class TreasureLuckyRewardBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureLuckyRewardCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureLuckyRewardCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureLuckyRewardCfgInfo;
		public static getFirstInfo():cfg.TreasureLuckyRewardCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  类型 */
		public static getTypeByIndex(value:number):number;
		 /**  需要道具（幸运值） */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_pool
	class TreasurePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasurePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasurePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasurePoolCfgInfo;
		public static getFirstInfo():cfg.TreasurePoolCfgInfo;
		 /**  随机组 */
		public static getGroupByGroup(value:number):number;
		 /**  类型 */
		public static getTypeByGroup(value:number):number;
		 /**  玩家等级(大于等于 当前level，小于下一个level) */
		public static getLevelByGroup(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_pool
	class TreasurePoolBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasurePoolCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasurePoolCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasurePoolCfgInfo;
		public static getFirstInfo():cfg.TreasurePoolCfgInfo;
		 /**  随机组 */
		public static getGroupByGroup(value:number):number;
		 /**  类型 */
		public static getTypeByGroup(value:number):number;
		 /**  玩家等级(大于等于 当前level，小于下一个level) */
		public static getLevelByGroup(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_treasure.xls】 ----> treasure_hunt_type
	class TreasureHuntTypeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TreasureHuntTypeCfgInfo>;
			public static setup(dataArr:Array<cfg.TreasureHuntTypeCfgInfo>):void;
		public static getInfo(value:number):cfg.TreasureHuntTypeCfgInfo;
		public static getFirstInfo():cfg.TreasureHuntTypeCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  免费刷新次数 */
		public static getFreeCountByType(value:number):number;
		 /**  刷新需要道具 */
		public static getRefreshNeedItemByType(value:number):string;
		 /**  探宝一次获得道具（幸运值） */
		public static getAddItemByType(value:number):string;
		 /**  轮盘上物品的个数 */
		public static getDisplayNumByType(value:number):number;
		 /**  免费刷新重置时间(分钟) */
		public static getResetTimeByType(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedLevelByType(value:number):number;
		 /**  幸运值最大值 */
		public static getMaxLuckyItemByType(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_uiconfig.xls】 ----> uiopen
	class UiconfigUiopenBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiconfigUiopenCfgInfo>;
			public static setup(dataArr:Array<cfg.UiconfigUiopenCfgInfo>):void;
		public static getInfo(value:number):cfg.UiconfigUiopenCfgInfo;
		public static getFirstInfo():cfg.UiconfigUiopenCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  别名 */
		public static getPanelNotifyByID(value:number):string;
		 /**  子页签 */
		public static getPageByID(value:number):string;
		 /**  功能开关id */
		public static getSystemSwitchIdByID(value:number):number;
		 /**  描述 */
		public static getDesNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_uiconfig.xls】 ----> uiopen
	class UiconfigUiopenBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiconfigUiopenCfgInfo>;
			public static setup(dataArr:Array<cfg.UiconfigUiopenCfgInfo>):void;
		public static getInfo(value:number):cfg.UiconfigUiopenCfgInfo;
		public static getFirstInfo():cfg.UiconfigUiopenCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  别名 */
		public static getPanelNotifyByID(value:number):string;
		 /**  子页签 */
		public static getPageByID(value:number):string;
		 /**  功能开关id */
		public static getSystemSwitchIdByID(value:number):number;
		 /**  描述 */
		public static getDesNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_uiconfig.xls】 ----> uibg
	class UiconfigUibgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiconfigUibgCfgInfo>;
			public static setup(dataArr:Array<cfg.UiconfigUibgCfgInfo>):void;
		public static getInfo(value:number):cfg.UiconfigUibgCfgInfo;
		public static getFirstInfo():cfg.UiconfigUibgCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  UI事件名称 */
		public static getPanelNameByID(value:number):string;
		 /**  背景名称 */
		public static getBGUrlByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_uiconfig.xls】 ----> uibg
	class UiconfigUibgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiconfigUibgCfgInfo>;
			public static setup(dataArr:Array<cfg.UiconfigUibgCfgInfo>):void;
		public static getInfo(value:number):cfg.UiconfigUibgCfgInfo;
		public static getFirstInfo():cfg.UiconfigUibgCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  UI事件名称 */
		public static getPanelNameByID(value:number):string;
		 /**  背景名称 */
		public static getBGUrlByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_uiconfig.xls】 ----> uibg
	class UiconfigUibgBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiconfigUibgCfgInfo>;
			public static setup(dataArr:Array<cfg.UiconfigUibgCfgInfo>):void;
		public static getInfo(value:number):cfg.UiconfigUibgCfgInfo;
		public static getFirstInfo():cfg.UiconfigUibgCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  UI事件名称 */
		public static getPanelNameByID(value:number):string;
		 /**  背景名称 */
		public static getBGUrlByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_uiconfig.xls】 ----> uiopen
	class UiconfigUiopenBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.UiconfigUiopenCfgInfo>;
			public static setup(dataArr:Array<cfg.UiconfigUiopenCfgInfo>):void;
		public static getInfo(value:number):cfg.UiconfigUiopenCfgInfo;
		public static getFirstInfo():cfg.UiconfigUiopenCfgInfo;
		 /**  Index */
		public static getIDByID(value:number):number;
		 /**  别名 */
		public static getPanelNotifyByID(value:number):string;
		 /**  子页签 */
		public static getPageByID(value:number):string;
		 /**  功能开关id */
		public static getSystemSwitchIdByID(value:number):number;
		 /**  描述 */
		public static getDesNameByID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> resource_findback
	class WealResourceFindbackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealResourceFindbackCfgInfo>;
			public static setup(dataArr:Array<cfg.WealResourceFindbackCfgInfo>):void;
		public static getInfo(value:number):cfg.WealResourceFindbackCfgInfo;
		public static getFirstInfo():cfg.WealResourceFindbackCfgInfo;
		 /**  资源找回玩法ID:EnmResourceID */
		public static getIDByID(value:number):number;
		 /**  活动名字 */
		public static getDesNameByID(value:number):string;
		 /**  免费折扣 */
		public static getDiscountByID(value:number):number;
		 /**  扣除钻石 */
		public static getSubItemByID(value:number):number;
		 /**  计算方式 */
		public static getFlagByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> online_prize
	class WealOnlinePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealOnlinePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.WealOnlinePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.WealOnlinePrizeCfgInfo;
		public static getFirstInfo():cfg.WealOnlinePrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  解锁时间（在线的秒数） */
		public static getTimeByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> resource_findback
	class WealResourceFindbackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealResourceFindbackCfgInfo>;
			public static setup(dataArr:Array<cfg.WealResourceFindbackCfgInfo>):void;
		public static getInfo(value:number):cfg.WealResourceFindbackCfgInfo;
		public static getFirstInfo():cfg.WealResourceFindbackCfgInfo;
		 /**  资源找回玩法ID:EnmResourceID */
		public static getIDByID(value:number):number;
		 /**  活动名字 */
		public static getDesNameByID(value:number):string;
		 /**  免费折扣 */
		public static getDiscountByID(value:number):number;
		 /**  扣除钻石 */
		public static getSubItemByID(value:number):number;
		 /**  计算方式 */
		public static getFlagByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> signin
	class WealSigninBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealSigninCfgInfo>;
			public static setup(dataArr:Array<cfg.WealSigninCfgInfo>):void;
		public static getInfo(value:number):cfg.WealSigninCfgInfo;
		public static getFirstInfo():cfg.WealSigninCfgInfo;
		 /**  月份(0表示通用) */
		public static getMonthByMonth(value:number):number;
		 /**  天数 */
		public static getDayByMonth(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByMonth(value:number):string;
		 /**  流光特效 */
		public static getEffByMonth(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> gift
	class WealGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.WealGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.WealGiftCfgInfo;
		public static getFirstInfo():cfg.WealGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  消耗 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;
		 /**  循环周期天数 */
		public static getCycleDaysByIndex(value:number):number;
		 /**  循环索引 */
		public static getCycleIndexByIndex(value:number):number;
		 /**  重置周期天数 */
		public static getResetDaysByIndex(value:number):number;
		 /**  限购个数 */
		public static getCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> gift
	class WealGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.WealGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.WealGiftCfgInfo;
		public static getFirstInfo():cfg.WealGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  消耗 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;
		 /**  循环周期天数 */
		public static getCycleDaysByIndex(value:number):number;
		 /**  循环索引 */
		public static getCycleIndexByIndex(value:number):number;
		 /**  重置周期天数 */
		public static getResetDaysByIndex(value:number):number;
		 /**  限购个数 */
		public static getCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> signin
	class WealSigninBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealSigninCfgInfo>;
			public static setup(dataArr:Array<cfg.WealSigninCfgInfo>):void;
		public static getInfo(value:number):cfg.WealSigninCfgInfo;
		public static getFirstInfo():cfg.WealSigninCfgInfo;
		 /**  月份(0表示通用) */
		public static getMonthByMonth(value:number):number;
		 /**  天数 */
		public static getDayByMonth(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByMonth(value:number):string;
		 /**  流光特效 */
		public static getEffByMonth(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> clickgold
	class WealClickgoldBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealClickgoldCfgInfo>;
			public static setup(dataArr:Array<cfg.WealClickgoldCfgInfo>):void;
		public static getInfo(value:number):cfg.WealClickgoldCfgInfo;
		public static getFirstInfo():cfg.WealClickgoldCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  最大次数 */
		public static getMaxTimesByType(value:number):number;
		 /**  消耗 */
		public static getNeedItemByType(value:number):string;
		 /**  获得金币公式参数1+参数2*(当前关卡-1）/3参数1_参数2 */
		public static getAddGoldBaseByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> clickgold
	class WealClickgoldBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealClickgoldCfgInfo>;
			public static setup(dataArr:Array<cfg.WealClickgoldCfgInfo>):void;
		public static getInfo(value:number):cfg.WealClickgoldCfgInfo;
		public static getFirstInfo():cfg.WealClickgoldCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  最大次数 */
		public static getMaxTimesByType(value:number):number;
		 /**  消耗 */
		public static getNeedItemByType(value:number):string;
		 /**  获得金币公式参数1+参数2*(当前关卡-1）/3参数1_参数2 */
		public static getAddGoldBaseByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> online_prize
	class WealOnlinePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealOnlinePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.WealOnlinePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.WealOnlinePrizeCfgInfo;
		public static getFirstInfo():cfg.WealOnlinePrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  解锁时间（在线的秒数） */
		public static getTimeByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> resource_findback
	class WealResourceFindbackBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealResourceFindbackCfgInfo>;
			public static setup(dataArr:Array<cfg.WealResourceFindbackCfgInfo>):void;
		public static getInfo(value:number):cfg.WealResourceFindbackCfgInfo;
		public static getFirstInfo():cfg.WealResourceFindbackCfgInfo;
		 /**  资源找回玩法ID:EnmResourceID */
		public static getIDByID(value:number):number;
		 /**  活动名字 */
		public static getDesNameByID(value:number):string;
		 /**  免费折扣 */
		public static getDiscountByID(value:number):number;
		 /**  扣除钻石 */
		public static getSubItemByID(value:number):number;
		 /**  计算方式 */
		public static getFlagByID(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> online_prize
	class WealOnlinePrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealOnlinePrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.WealOnlinePrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.WealOnlinePrizeCfgInfo;
		public static getFirstInfo():cfg.WealOnlinePrizeCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  解锁时间（在线的秒数） */
		public static getTimeByIndex(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> clickgold
	class WealClickgoldBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealClickgoldCfgInfo>;
			public static setup(dataArr:Array<cfg.WealClickgoldCfgInfo>):void;
		public static getInfo(value:number):cfg.WealClickgoldCfgInfo;
		public static getFirstInfo():cfg.WealClickgoldCfgInfo;
		 /**  类型 */
		public static getTypeByType(value:number):number;
		 /**  最大次数 */
		public static getMaxTimesByType(value:number):number;
		 /**  消耗 */
		public static getNeedItemByType(value:number):string;
		 /**  获得金币公式参数1+参数2*(当前关卡-1）/3参数1_参数2 */
		public static getAddGoldBaseByType(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> gift
	class WealGiftBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealGiftCfgInfo>;
			public static setup(dataArr:Array<cfg.WealGiftCfgInfo>):void;
		public static getInfo(value:number):cfg.WealGiftCfgInfo;
		public static getFirstInfo():cfg.WealGiftCfgInfo;
		 /**  索引 */
		public static getIndexByIndex(value:number):number;
		 /**  消耗 */
		public static getNeedItemByIndex(value:number):string;
		 /**  奖励 */
		public static getAddItemByIndex(value:number):string;
		 /**  循环周期天数 */
		public static getCycleDaysByIndex(value:number):number;
		 /**  循环索引 */
		public static getCycleIndexByIndex(value:number):number;
		 /**  重置周期天数 */
		public static getResetDaysByIndex(value:number):number;
		 /**  限购个数 */
		public static getCountByIndex(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_weal.xls】 ----> signin
	class WealSigninBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WealSigninCfgInfo>;
			public static setup(dataArr:Array<cfg.WealSigninCfgInfo>):void;
		public static getInfo(value:number):cfg.WealSigninCfgInfo;
		public static getFirstInfo():cfg.WealSigninCfgInfo;
		 /**  月份(0表示通用) */
		public static getMonthByMonth(value:number):number;
		 /**  天数 */
		public static getDayByMonth(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByMonth(value:number):string;
		 /**  流光特效 */
		public static getEffByMonth(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> const_info
	class WeekChampionConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionConstInfoCfgInfo;
		public static getFirstInfo():cfg.WeekChampionConstInfoCfgInfo;
		 /**  开启周期 */
		public static getCircleByCircle(value:number):number;
		 /**  开启天数 */
		public static getCircleDaysByCircle(value:number):string;
		 /**  匹配时间 */
		public static getMatchTimeByCircle(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByCircle(value:number):string;
		 /**  需要跨服天梯排名 */
		public static getNeedLadderRankByCircle(value:number):number;
		 /**  最少人数 */
		public static getMinPlayerNumByCircle(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByCircle(value:number):number;
		 /**  准备时间 */
		public static getReadyTimeByCircle(value:number):number;
		 /**  竞猜时间 */
		public static getGuessTimeByCircle(value:number):number;
		 /**  战斗时长 */
		public static getFightTimeByCircle(value:number):number;
		 /**  战斗回合上限 */
		public static getFightBoutLimitByCircle(value:number):number;
		 /**  初始赔率 */
		public static getInitOddsByCircle(value:number):number;
		 /**  初始赔率参数 */
		public static getInitOddsParamByCircle(value:number):number;
		 /**  最大赔率 */
		public static getMaxOddsByCircle(value:number):number;
		 /**  最小赔率 */
		public static getMinOddsByCircle(value:number):number;
		 /**  初始竞猜币 */
		public static getInitGuessCoinByCircle(value:number):number;
		 /**  弹幕需要道具 */
		public static getDanmuNeedItemByCircle(value:number):string;
		 /**  奖励预览 */
		public static getPrizePreviewByCircle(value:number):string;
		 /**  弹幕最大条数 */
		public static getMaxDanmuCountByCircle(value:number):number;
		 /**  每日点赞上限 */
		public static getDayLikeMaxByCircle(value:number):number;
		 /**  点赞奖励 */
		public static getLikeAwardByCircle(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> top_prize
	class WeekChampionTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionTopPrizeCfgInfo;
		public static getFirstInfo():cfg.WeekChampionTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getRankByRank(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRank(value:number):string;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> top_prize
	class WeekChampionTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionTopPrizeCfgInfo;
		public static getFirstInfo():cfg.WeekChampionTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getRankByRank(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRank(value:number):string;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> round
	class WeekChampionRoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionRoundCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionRoundCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionRoundCfgInfo;
		public static getFirstInfo():cfg.WeekChampionRoundCfgInfo;
		 /**  回合 */
		public static getRoundIDByRoundID(value:number):number;
		 /**  名称 */
		public static getNameByRoundID(value:number):string;
		 /**  增加战斗积分 */
		public static getAddFightScoreByRoundID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> top_prize
	class WeekChampionTopPrizeBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionTopPrizeCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionTopPrizeCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionTopPrizeCfgInfo;
		public static getFirstInfo():cfg.WeekChampionTopPrizeCfgInfo;
		 /**  排名（上一排名,此名次] */
		public static getRankByRank(value:number):number;
		 /**  奖励道具 */
		public static getAddItemByRank(value:number):string;
		 /**  增加称号ID */
		public static getAddTitleByRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> ladder_rank_integral
	class WeekChampionLadderRankIntegralBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionLadderRankIntegralCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionLadderRankIntegralCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionLadderRankIntegralCfgInfo;
		public static getFirstInfo():cfg.WeekChampionLadderRankIntegralCfgInfo;
		 /**  天梯排名 */
		public static getLadderRankByLadderRank(value:number):number;
		 /**  初始积分 */
		public static getIntegralByLadderRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> round
	class WeekChampionRoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionRoundCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionRoundCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionRoundCfgInfo;
		public static getFirstInfo():cfg.WeekChampionRoundCfgInfo;
		 /**  回合 */
		public static getRoundIDByRoundID(value:number):number;
		 /**  名称 */
		public static getNameByRoundID(value:number):string;
		 /**  增加战斗积分 */
		public static getAddFightScoreByRoundID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> const_info
	class WeekChampionConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionConstInfoCfgInfo;
		public static getFirstInfo():cfg.WeekChampionConstInfoCfgInfo;
		 /**  开启周期 */
		public static getCircleByCircle(value:number):number;
		 /**  开启天数 */
		public static getCircleDaysByCircle(value:number):string;
		 /**  匹配时间 */
		public static getMatchTimeByCircle(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByCircle(value:number):string;
		 /**  需要跨服天梯排名 */
		public static getNeedLadderRankByCircle(value:number):number;
		 /**  最少人数 */
		public static getMinPlayerNumByCircle(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByCircle(value:number):number;
		 /**  准备时间 */
		public static getReadyTimeByCircle(value:number):number;
		 /**  竞猜时间 */
		public static getGuessTimeByCircle(value:number):number;
		 /**  战斗时长 */
		public static getFightTimeByCircle(value:number):number;
		 /**  战斗回合上限 */
		public static getFightBoutLimitByCircle(value:number):number;
		 /**  初始赔率 */
		public static getInitOddsByCircle(value:number):number;
		 /**  初始赔率参数 */
		public static getInitOddsParamByCircle(value:number):number;
		 /**  最大赔率 */
		public static getMaxOddsByCircle(value:number):number;
		 /**  最小赔率 */
		public static getMinOddsByCircle(value:number):number;
		 /**  初始竞猜币 */
		public static getInitGuessCoinByCircle(value:number):number;
		 /**  弹幕需要道具 */
		public static getDanmuNeedItemByCircle(value:number):string;
		 /**  奖励预览 */
		public static getPrizePreviewByCircle(value:number):string;
		 /**  弹幕最大条数 */
		public static getMaxDanmuCountByCircle(value:number):number;
		 /**  每日点赞上限 */
		public static getDayLikeMaxByCircle(value:number):number;
		 /**  点赞奖励 */
		public static getLikeAwardByCircle(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> round
	class WeekChampionRoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionRoundCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionRoundCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionRoundCfgInfo;
		public static getFirstInfo():cfg.WeekChampionRoundCfgInfo;
		 /**  回合 */
		public static getRoundIDByRoundID(value:number):number;
		 /**  名称 */
		public static getNameByRoundID(value:number):string;
		 /**  增加战斗积分 */
		public static getAddFightScoreByRoundID(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> ladder_rank_integral
	class WeekChampionLadderRankIntegralBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionLadderRankIntegralCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionLadderRankIntegralCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionLadderRankIntegralCfgInfo;
		public static getFirstInfo():cfg.WeekChampionLadderRankIntegralCfgInfo;
		 /**  天梯排名 */
		public static getLadderRankByLadderRank(value:number):number;
		 /**  初始积分 */
		public static getIntegralByLadderRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> const_info
	class WeekChampionConstInfoBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionConstInfoCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionConstInfoCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionConstInfoCfgInfo;
		public static getFirstInfo():cfg.WeekChampionConstInfoCfgInfo;
		 /**  开启周期 */
		public static getCircleByCircle(value:number):number;
		 /**  开启天数 */
		public static getCircleDaysByCircle(value:number):string;
		 /**  匹配时间 */
		public static getMatchTimeByCircle(value:number):string;
		 /**  开启时间 */
		public static getOpenTimeByCircle(value:number):string;
		 /**  需要跨服天梯排名 */
		public static getNeedLadderRankByCircle(value:number):number;
		 /**  最少人数 */
		public static getMinPlayerNumByCircle(value:number):number;
		 /**  需要玩家等级 */
		public static getNeedPlayerLevelByCircle(value:number):number;
		 /**  准备时间 */
		public static getReadyTimeByCircle(value:number):number;
		 /**  竞猜时间 */
		public static getGuessTimeByCircle(value:number):number;
		 /**  战斗时长 */
		public static getFightTimeByCircle(value:number):number;
		 /**  战斗回合上限 */
		public static getFightBoutLimitByCircle(value:number):number;
		 /**  初始赔率 */
		public static getInitOddsByCircle(value:number):number;
		 /**  初始赔率参数 */
		public static getInitOddsParamByCircle(value:number):number;
		 /**  最大赔率 */
		public static getMaxOddsByCircle(value:number):number;
		 /**  最小赔率 */
		public static getMinOddsByCircle(value:number):number;
		 /**  初始竞猜币 */
		public static getInitGuessCoinByCircle(value:number):number;
		 /**  弹幕需要道具 */
		public static getDanmuNeedItemByCircle(value:number):string;
		 /**  奖励预览 */
		public static getPrizePreviewByCircle(value:number):string;
		 /**  弹幕最大条数 */
		public static getMaxDanmuCountByCircle(value:number):number;
		 /**  每日点赞上限 */
		public static getDayLikeMaxByCircle(value:number):number;
		 /**  点赞奖励 */
		public static getLikeAwardByCircle(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【cs_week_champion.xls】 ----> ladder_rank_integral
	class WeekChampionLadderRankIntegralBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.WeekChampionLadderRankIntegralCfgInfo>;
			public static setup(dataArr:Array<cfg.WeekChampionLadderRankIntegralCfgInfo>):void;
		public static getInfo(value:number):cfg.WeekChampionLadderRankIntegralCfgInfo;
		public static getFirstInfo():cfg.WeekChampionLadderRankIntegralCfgInfo;
		 /**  天梯排名 */
		public static getLadderRankByLadderRank(value:number):number;
		 /**  初始积分 */
		public static getIntegralByLadderRank(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【effect.xls】 ----> effect
	class EffectBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.EffectCfgInfo>;
			public static setup(dataArr:Array<cfg.EffectCfgInfo>):void;
		public static getInfo(value:string):cfg.EffectCfgInfo;
		public static getFirstInfo():cfg.EffectCfgInfo;
		 /**  标识符 */
		public static getIdById(value:string):string;
		 /**  帧动画帧数 */
		public static getEditorFrameById(value:string):number;
		 /**  资源路径 */
		public static getResPathById(value:string):string;
		 /**  特效缩放 */
		public static getScaleById(value:string):number;
		 /**  特效偏移 */
		public static getOffById(value:string):string;
		 /**  显示位置 */
		public static getShowPosById(value:string):number;
		 /**  父节点 */
		public static getFollowById(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【effect.xls】 ----> effect
	class EffectBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.EffectCfgInfo>;
			public static setup(dataArr:Array<cfg.EffectCfgInfo>):void;
		public static getInfo(value:string):cfg.EffectCfgInfo;
		public static getFirstInfo():cfg.EffectCfgInfo;
		 /**  标识符 */
		public static getIdById(value:string):string;
		 /**  帧动画帧数 */
		public static getEditorFrameById(value:string):number;
		 /**  资源路径 */
		public static getResPathById(value:string):string;
		 /**  特效缩放 */
		public static getScaleById(value:string):number;
		 /**  特效偏移 */
		public static getOffById(value:string):string;
		 /**  显示位置 */
		public static getShowPosById(value:string):number;
		 /**  父节点 */
		public static getFollowById(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【effect.xls】 ----> effect
	class EffectBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.EffectCfgInfo>;
			public static setup(dataArr:Array<cfg.EffectCfgInfo>):void;
		public static getInfo(value:string):cfg.EffectCfgInfo;
		public static getFirstInfo():cfg.EffectCfgInfo;
		 /**  标识符 */
		public static getIdById(value:string):string;
		 /**  帧动画帧数 */
		public static getEditorFrameById(value:string):number;
		 /**  资源路径 */
		public static getResPathById(value:string):string;
		 /**  特效缩放 */
		public static getScaleById(value:string):number;
		 /**  特效偏移 */
		public static getOffById(value:string):string;
		 /**  显示位置 */
		public static getShowPosById(value:string):number;
		 /**  父节点 */
		public static getFollowById(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【guide.xls】 ----> guide
	class GuideBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuideCfgInfo>;
			public static setup(dataArr:Array<cfg.GuideCfgInfo>):void;
		public static getInfo(value:number):cfg.GuideCfgInfo;
		public static getFirstInfo():cfg.GuideCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  步骤描述 */
		public static getDescById(value:number):string;
		 /**  小助手对话 */
		public static getDialogById(value:number):string;
		 /**  小助手对话时NPC头像 */
		public static getNpcHeadById(value:number):string;
		 /**  小助手对话时NPC名字 */
		public static getNpcNameById(value:number):string;
		 /**  小手指文字 */
		public static getFingerTipsById(value:number):string;
		 /**  中途暂停等待玩家自由操作 */
		public static getPauseGuideById(value:number):number;
		 /**  挂机战斗结束唤醒引导 */
		public static getHookStageById(value:number):number;
		 /**  关键步储存 */
		public static getStageSaveById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【guide.xls】 ----> guide
	class GuideBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuideCfgInfo>;
			public static setup(dataArr:Array<cfg.GuideCfgInfo>):void;
		public static getInfo(value:number):cfg.GuideCfgInfo;
		public static getFirstInfo():cfg.GuideCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  步骤描述 */
		public static getDescById(value:number):string;
		 /**  小助手对话 */
		public static getDialogById(value:number):string;
		 /**  小助手对话时NPC头像 */
		public static getNpcHeadById(value:number):string;
		 /**  小助手对话时NPC名字 */
		public static getNpcNameById(value:number):string;
		 /**  小手指文字 */
		public static getFingerTipsById(value:number):string;
		 /**  中途暂停等待玩家自由操作 */
		public static getPauseGuideById(value:number):number;
		 /**  挂机战斗结束唤醒引导 */
		public static getHookStageById(value:number):number;
		 /**  关键步储存 */
		public static getStageSaveById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【guide.xls】 ----> guide
	class GuideBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.GuideCfgInfo>;
			public static setup(dataArr:Array<cfg.GuideCfgInfo>):void;
		public static getInfo(value:number):cfg.GuideCfgInfo;
		public static getFirstInfo():cfg.GuideCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;
		 /**  步骤描述 */
		public static getDescById(value:number):string;
		 /**  小助手对话 */
		public static getDialogById(value:number):string;
		 /**  小助手对话时NPC头像 */
		public static getNpcHeadById(value:number):string;
		 /**  小助手对话时NPC名字 */
		public static getNpcNameById(value:number):string;
		 /**  小手指文字 */
		public static getFingerTipsById(value:number):string;
		 /**  中途暂停等待玩家自由操作 */
		public static getPauseGuideById(value:number):number;
		 /**  挂机战斗结束唤醒引导 */
		public static getHookStageById(value:number):number;
		 /**  关键步储存 */
		public static getStageSaveById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【numberSystem.xls】 ----> numberSystem
	class NumberSystemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.NumberSystemCfgInfo>;
			public static setup(dataArr:Array<cfg.NumberSystemCfgInfo>):void;
		public static getInfo(value:number):cfg.NumberSystemCfgInfo;
		public static getFirstInfo():cfg.NumberSystemCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【numberSystem.xls】 ----> numberSystem
	class NumberSystemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.NumberSystemCfgInfo>;
			public static setup(dataArr:Array<cfg.NumberSystemCfgInfo>):void;
		public static getInfo(value:number):cfg.NumberSystemCfgInfo;
		public static getFirstInfo():cfg.NumberSystemCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【numberSystem.xls】 ----> numberSystem
	class NumberSystemBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.NumberSystemCfgInfo>;
			public static setup(dataArr:Array<cfg.NumberSystemCfgInfo>):void;
		public static getInfo(value:number):cfg.NumberSystemCfgInfo;
		public static getFirstInfo():cfg.NumberSystemCfgInfo;
		 /**  id */
		public static getIdById(value:number):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【resPreload.xls】 ----> resPreload
	class ResPreloadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResPreloadCfgInfo>;
			public static setup(dataArr:Array<cfg.ResPreloadCfgInfo>):void;
		public static getInfo(value:number):cfg.ResPreloadCfgInfo;
		public static getFirstInfo():cfg.ResPreloadCfgInfo;
		 /**  key */
		public static getIndexByIndex(value:number):number;
		 /**  预加载触发时机类型 */
		public static getTriggerTypeByIndex(value:number):number;
		 /**  触发时机对应的进度值 */
		public static getTriggerStepByIndex(value:number):number;
		 /**  预加载资源类型 */
		public static getResTypeByIndex(value:number):number;
		 /**  资源参数 */
		public static getResParamsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【resPreload.xls】 ----> resPreload
	class ResPreloadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResPreloadCfgInfo>;
			public static setup(dataArr:Array<cfg.ResPreloadCfgInfo>):void;
		public static getInfo(value:number):cfg.ResPreloadCfgInfo;
		public static getFirstInfo():cfg.ResPreloadCfgInfo;
		 /**  key */
		public static getIndexByIndex(value:number):number;
		 /**  预加载触发时机类型 */
		public static getTriggerTypeByIndex(value:number):number;
		 /**  触发时机对应的进度值 */
		public static getTriggerStepByIndex(value:number):number;
		 /**  预加载资源类型 */
		public static getResTypeByIndex(value:number):number;
		 /**  资源参数 */
		public static getResParamsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【resPreload.xls】 ----> resPreload
	class ResPreloadBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.ResPreloadCfgInfo>;
			public static setup(dataArr:Array<cfg.ResPreloadCfgInfo>):void;
		public static getInfo(value:number):cfg.ResPreloadCfgInfo;
		public static getFirstInfo():cfg.ResPreloadCfgInfo;
		 /**  key */
		public static getIndexByIndex(value:number):number;
		 /**  预加载触发时机类型 */
		public static getTriggerTypeByIndex(value:number):number;
		 /**  触发时机对应的进度值 */
		public static getTriggerStepByIndex(value:number):number;
		 /**  预加载资源类型 */
		public static getResTypeByIndex(value:number):number;
		 /**  资源参数 */
		public static getResParamsByIndex(value:number):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【sound.xls】 ----> sound
	class SoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SoundCfgInfo>;
			public static setup(dataArr:Array<cfg.SoundCfgInfo>):void;
		public static getInfo(value:string):cfg.SoundCfgInfo;
		public static getFirstInfo():cfg.SoundCfgInfo;
		 /**  id（音效英文名） */
		public static getIdById(value:string):string;
		 /**  类型（几首循环播放） */
		public static getTypeById(value:string):number;
		 /**  间隔一段时间再循环（毫秒） */
		public static getDurationById(value:string):number;
		 /**  音效资源名字（不用填路径） */
		public static getNameById(value:string):string;
		 /**  是否循环播放 */
		public static getIsLoopById(value:string):number;
		 /**  背景音效 */
		public static getIsBGById(value:string):number;
		 /**  音量大小 */
		public static getVolumeById(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【sound.xls】 ----> sound
	class SoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SoundCfgInfo>;
			public static setup(dataArr:Array<cfg.SoundCfgInfo>):void;
		public static getInfo(value:string):cfg.SoundCfgInfo;
		public static getFirstInfo():cfg.SoundCfgInfo;
		 /**  id（音效英文名） */
		public static getIdById(value:string):string;
		 /**  类型（几首循环播放） */
		public static getTypeById(value:string):number;
		 /**  间隔一段时间再循环（毫秒） */
		public static getDurationById(value:string):number;
		 /**  音效资源名字（不用填路径） */
		public static getNameById(value:string):string;
		 /**  是否循环播放 */
		public static getIsLoopById(value:string):number;
		 /**  背景音效 */
		public static getIsBGById(value:string):number;
		 /**  音量大小 */
		public static getVolumeById(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【sound.xls】 ----> sound
	class SoundBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.SoundCfgInfo>;
			public static setup(dataArr:Array<cfg.SoundCfgInfo>):void;
		public static getInfo(value:string):cfg.SoundCfgInfo;
		public static getFirstInfo():cfg.SoundCfgInfo;
		 /**  id（音效英文名） */
		public static getIdById(value:string):string;
		 /**  类型（几首循环播放） */
		public static getTypeById(value:string):number;
		 /**  间隔一段时间再循环（毫秒） */
		public static getDurationById(value:string):number;
		 /**  音效资源名字（不用填路径） */
		public static getNameById(value:string):string;
		 /**  是否循环播放 */
		public static getIsLoopById(value:string):number;
		 /**  背景音效 */
		public static getIsBGById(value:string):number;
		 /**  音量大小 */
		public static getVolumeById(value:string):number;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【textConfig.xls】 ----> textConfig
	class TextConfigBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TextConfigCfgInfo>;
			public static setup(dataArr:Array<cfg.TextConfigCfgInfo>):void;
		public static getInfo(value:string):cfg.TextConfigCfgInfo;
		public static getFirstInfo():cfg.TextConfigCfgInfo;
		 /**  id */
		public static getIdById(value:string):string;
		 /**  简体中文(正式配置值不能出现) */
		public static getChineseById(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【textConfig.xls】 ----> textConfig
	class TextConfigBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TextConfigCfgInfo>;
			public static setup(dataArr:Array<cfg.TextConfigCfgInfo>):void;
		public static getInfo(value:string):cfg.TextConfigCfgInfo;
		public static getFirstInfo():cfg.TextConfigCfgInfo;
		 /**  id */
		public static getIdById(value:string):string;
		 /**  简体中文(正式配置值不能出现) */
		public static getChineseById(value:string):string;

	}
 

	/**
	* 
	*  根据 excel 配置 文件自动生成的代码
	*	
	* 【**不可手动修改此类**】，
	*	
	* 【任何修改都将被生成工具覆盖，如需修改请直接修改具体的excel文件】
	*
	* @author liuyang.AutoCreater
	* 
	*/	
	
	//【textConfig.xls】 ----> textConfig
	class TextConfigBaseCfgData
	{
		protected static _dataDic:Object;
		protected static _dataArr:Array<cfg.TextConfigCfgInfo>;
			public static setup(dataArr:Array<cfg.TextConfigCfgInfo>):void;
		public static getInfo(value:string):cfg.TextConfigCfgInfo;
		public static getFirstInfo():cfg.TextConfigCfgInfo;
		 /**  id */
		public static getIdById(value:string):string;
		 /**  简体中文(正式配置值不能出现) */
		public static getChineseById(value:string):string;

	}
 
}